"use strict";var THREE=THREE||{REVISION:"49"};self.Int32Array||(self.Int32Array=Array,self.Float32Array=Array),function(){for(var e=0,t=["ms","moz","webkit","o"],i=0;i<t.length&&!window.requestAnimationFrame;++i)window.requestAnimationFrame=window[t[i]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[t[i]+"CancelAnimationFrame"]||window[t[i]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(t){var i=Date.now(),r=Math.max(0,16-(i-e)),o=window.setTimeout((function(){t(i+r)}),r);return e=i+r,o}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(e){clearTimeout(e)})}(),THREE.Clock=function(e){this.autoStart=void 0===e||e,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now(),this.running=!0},THREE.Clock.prototype.stop=function(){this.getElapsedTime(),this.running=!1},THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime=this.elapsedTime+this.getDelta()},THREE.Clock.prototype.getDelta=function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=Date.now();e=.001*(t-this.oldTime);this.oldTime=t,this.elapsedTime=this.elapsedTime+e}return e},THREE.Color=function(e){return void 0!==e&&this.setHex(e),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,i=this.b;return this.r=e*e,this.g=t*t,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},setRGB:function(e,t,i){return this.r=e,this.g=t,this.b=i,this},setHSV:function(e,t,i){var r,o,n;if(0===i)this.r=this.g=this.b=0;else switch(o=6*e-(r=Math.floor(6*e)),e=i*(1-t),n=i*(1-t*o),t=i*(1-t*(1-o)),r){case 1:this.r=n,this.g=i,this.b=e;break;case 2:this.r=e,this.g=i,this.b=t;break;case 3:this.r=e,this.g=n,this.b=i;break;case 4:this.r=t,this.g=e,this.b=i;break;case 5:this.r=i,this.g=e,this.b=n;break;case 6:case 0:this.r=i,this.g=t,this.b=e}return this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},lerpSelf:function(e,t){return this.r=this.r+(e.r-this.r)*t,this.g=this.g+(e.g-this.g)*t,this.b=this.b+(e.b-this.b)*t,this},getHex:function(){return Math.floor(255*this.r)<<16^Math.floor(255*this.g)<<8^Math.floor(255*this.b)},getContextStyle:function(){return"rgb("+Math.floor(255*this.r)+","+Math.floor(255*this.g)+","+Math.floor(255*this.b)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addSelf:function(e){return this.x=this.x+e.x,this.y=this.y+e.y,this},sub:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},subSelf:function(e){return this.x=this.x-e.x,this.y=this.y-e.y,this},multiplyScalar:function(e){return this.x=this.x*e,this.y=this.y*e,this},divideScalar:function(e){return e?(this.x=this.x/e,this.y=this.y/e):this.set(0,0),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x;return t*t+(e=this.y-e.y)*e},setLength:function(e){return this.normalize().multiplyScalar(e)},lerpSelf:function(e,t){return this.x=this.x+(e.x-this.x)*t,this.y=this.y+(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},isZero:function(){return this.lengthSq()<1e-4},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,i){this.x=e||0,this.y=t||0,this.z=i||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,i){return this.x=e,this.y=t,this.z=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addSelf:function(e){return this.x=this.x+e.x,this.y=this.y+e.y,this.z=this.z+e.z,this},addScalar:function(e){return this.x=this.x+e,this.y=this.y+e,this.z=this.z+e,this},sub:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},subSelf:function(e){return this.x=this.x-e.x,this.y=this.y-e.y,this.z=this.z-e.z,this},multiply:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},multiplySelf:function(e){return this.x=this.x*e.x,this.y=this.y*e.y,this.z=this.z*e.z,this},multiplyScalar:function(e){return this.x=this.x*e,this.y=this.y*e,this.z=this.z*e,this},divideSelf:function(e){return this.x=this.x/e.x,this.y=this.y/e.y,this.z=this.z/e.z,this},divideScalar:function(e){return e?(this.x=this.x/e,this.y=this.y/e,this.z=this.z/e):this.z=this.y=this.x=0,this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.normalize().multiplyScalar(e)},lerpSelf:function(e,t){return this.x=this.x+(e.x-this.x)*t,this.y=this.y+(e.y-this.y)*t,this.z=this.z+(e.z-this.z)*t,this},cross:function(e,t){return this.x=e.y*t.z-e.z*t.y,this.y=e.z*t.x-e.x*t.z,this.z=e.x*t.y-e.y*t.x,this},crossSelf:function(e){var t=this.x,i=this.y,r=this.z;return this.x=i*e.z-r*e.y,this.y=r*e.x-t*e.z,this.z=t*e.y-i*e.x,this},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){return(new THREE.Vector3).sub(this,e).lengthSq()},getPositionFromMatrix:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},getRotationFromMatrix:function(e,t){var i=t?t.x:1,r=t?t.y:1,o=t?t.z:1,n=e.elements[0]/i,a=e.elements[4]/r,s=(i=e.elements[1]/i,r=e.elements[5]/r,e.elements[9]/o),h=e.elements[10]/o;return this.y=Math.asin(e.elements[8]/o),o=Math.cos(this.y),Math.abs(o)>1e-5?(this.x=Math.atan2(-s/o,h/o),this.z=Math.atan2(-a/o,n/o)):(this.x=0,this.z=Math.atan2(i,r)),this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),i=this.set(e.elements[4],e.elements[5],e.elements[6]).length();e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();this.x=t,this.y=i,this.z=e},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},isZero:function(){return this.lengthSq()<1e-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(e,t,i,r){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==r?r:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addSelf:function(e){return this.x=this.x+e.x,this.y=this.y+e.y,this.z=this.z+e.z,this.w=this.w+e.w,this},sub:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},subSelf:function(e){return this.x=this.x-e.x,this.y=this.y-e.y,this.z=this.z-e.z,this.w=this.w-e.w,this},multiplyScalar:function(e){return this.x=this.x*e,this.y=this.y*e,this.z=this.z*e,this.w=this.w*e,this},divideScalar:function(e){return e?(this.x=this.x/e,this.y=this.y/e,this.z=this.z/e,this.w=this.w/e):(this.z=this.y=this.x=0,this.w=1),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.normalize().multiplyScalar(e)},lerpSelf:function(e,t){return this.x=this.x+(e.x-this.x)*t,this.y=this.y+(e.y-this.y)*t,this.z=this.z+(e.z-this.z)*t,this.w=this.w+(e.w-this.w)*t,this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]},THREE.Frustum.prototype.setFromMatrix=function(e){var t,i=this.planes;e=(m=e.elements)[0];t=m[1];var r=m[2],o=m[3],n=m[4],a=m[5],s=m[6],h=m[7],l=m[8],c=m[9],f=m[10],E=m[11],u=m[12],p=m[13],d=m[14],m=m[15];for(i[0].set(o-e,h-n,E-l,m-u),i[1].set(o+e,h+n,E+l,m+u),i[2].set(o+t,h+a,E+c,m+p),i[3].set(o-t,h-a,E-c,m-p),i[4].set(o-r,h-s,E-f,m-d),i[5].set(o+r,h+s,E+f,m+d),e=0;e<6;e++)(t=i[e]).divideScalar(Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z))},THREE.Frustum.prototype.contains=function(e){for(var t=this.planes,i=(r=e.matrixWorld).elements,r=-e.geometry.boundingSphere.radius*r.getMaxScaleOnAxis(),o=0;o<6;o++)if((e=t[o].x*i[12]+t[o].y*i[13]+t[o].z*i[14]+t[o].w)<=r)return!1;return!0},THREE.Frustum.__v1=new THREE.Vector3,THREE.Ray=function(e,t){function i(e,t,i){return b.sub(i,e),p=b.dot(t),d=w.add(e,_.copy(t).multiplyScalar(p)),i.distanceTo(d)}function r(e,t,i,r){return b.sub(r,t),w.sub(i,t),_.sub(e,t),m=b.dot(b),g=b.dot(w),v=b.dot(_),T=w.dot(w),R=w.dot(_),H=(m*R-g*v)*(y=1/(m*T-g*g)),(x=(T*v-g*R)*y)>=0&&H>=0&&x+H<1}this.origin=e||new THREE.Vector3,this.direction=t||new THREE.Vector3;var o=1e-4;this.setPrecision=function(e){o=e};var n=new THREE.Vector3,a=new THREE.Vector3,s=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3,f=new THREE.Vector3,E=new THREE.Vector3,u=new THREE.Vector3;this.intersectObject=function(e){var t,p=[];if(e instanceof THREE.Particle){if((d=i(this.origin,this.direction,e.matrixWorld.getPosition()))>e.scale.x)return[];t={distance:d,point:e.position,face:null,object:e},p.push(t)}else if(e instanceof THREE.Mesh){var d=i(this.origin,this.direction,e.matrixWorld.getPosition()),m=THREE.Frustum.__v1.set(e.matrixWorld.getColumnX().length(),e.matrixWorld.getColumnY().length(),e.matrixWorld.getColumnZ().length());if(d>e.geometry.boundingSphere.radius*Math.max(m.x,Math.max(m.y,m.z)))return p;var g,v,T,R=e.geometry,y=R.vertices;for(e.matrixRotationWorld.extractRotation(e.matrixWorld),d=0,m=R.faces.length;d<m;d++)t=R.faces[d],l.copy(this.origin),c.copy(this.direction),T=e.matrixWorld,f=T.multiplyVector3(f.copy(t.centroid)).subSelf(l),E=e.matrixRotationWorld.multiplyVector3(E.copy(t.normal)),g=c.dot(E),Math.abs(g)<o||(v=E.dot(f)/g)<0||!e.doubleSided&&!(e.flipSided?g>0:g<0)||(u.add(l,c.multiplyScalar(v)),t instanceof THREE.Face3?(n=T.multiplyVector3(n.copy(y[t.a])),a=T.multiplyVector3(a.copy(y[t.b])),s=T.multiplyVector3(s.copy(y[t.c])),r(u,n,a,s)&&(t={distance:l.distanceTo(u),point:u.clone(),face:t,object:e},p.push(t))):t instanceof THREE.Face4&&(n=T.multiplyVector3(n.copy(y[t.a])),a=T.multiplyVector3(a.copy(y[t.b])),s=T.multiplyVector3(s.copy(y[t.c])),h=T.multiplyVector3(h.copy(y[t.d])),(r(u,n,a,h)||r(u,a,s,h))&&(t={distance:l.distanceTo(u),point:u.clone(),face:t,object:e},p.push(t))))}return p},this.intersectObjects=function(e){for(var t=[],i=0,r=e.length;i<r;i++)Array.prototype.push.apply(t,this.intersectObject(e[i]));return t.sort((function(e,t){return e.distance-t.distance})),t};var p,d,m,g,v,T,R,y,x,H,b=new THREE.Vector3,w=new THREE.Vector3,_=new THREE.Vector3},THREE.Rectangle=function(){function e(){n=r-t,a=o-i}var t,i,r,o,n,a,s=!0;this.getX=function(){return t},this.getY=function(){return i},this.getWidth=function(){return n},this.getHeight=function(){return a},this.getLeft=function(){return t},this.getTop=function(){return i},this.getRight=function(){return r},this.getBottom=function(){return o},this.set=function(n,a,h,l){s=!1,t=n,i=a,r=h,o=l,e()},this.addPoint=function(n,a){s?(s=!1,t=n,i=a,r=n,o=a):(t=t<n?t:n,i=i<a?i:a,r=r>n?r:n,o=o>a?o:a),e()},this.add3Points=function(n,a,h,l,c,f){s?(s=!1,t=n<h?n<c?n:c:h<c?h:c,i=a<l?a<f?a:f:l<f?l:f,r=n>h?n>c?n:c:h>c?h:c,o=a>l?a>f?a:f:l>f?l:f):(t=n<h?n<c?n<t?n:t:c<t?c:t:h<c?h<t?h:t:c<t?c:t,i=a<l?a<f?a<i?a:i:f<i?f:i:l<f?l<i?l:i:f<i?f:i,r=n>h?n>c?n>r?n:r:c>r?c:r:h>c?h>r?h:r:c>r?c:r,o=a>l?a>f?a>o?a:o:f>o?f:o:l>f?l>o?l:o:f>o?f:o),e()},this.addRectangle=function(n){s?(s=!1,t=n.getLeft(),i=n.getTop(),r=n.getRight(),o=n.getBottom()):(t=t<n.getLeft()?t:n.getLeft(),i=i<n.getTop()?i:n.getTop(),r=r>n.getRight()?r:n.getRight(),o=o>n.getBottom()?o:n.getBottom()),e()},this.inflate=function(n){t-=n,i-=n,r+=n,o+=n,e()},this.minSelf=function(n){t=t>n.getLeft()?t:n.getLeft(),i=i>n.getTop()?i:n.getTop(),r=r<n.getRight()?r:n.getRight(),o=o<n.getBottom()?o:n.getBottom(),e()},this.intersects=function(e){return!(r<e.getLeft()||t>e.getRight()||o<e.getTop()||i>e.getBottom())},this.empty=function(){s=!0,o=r=i=t=0,e()},this.isEmpty=function(){return s}},THREE.Math={clamp:function(e,t,i){return e<t?t:e>i?i:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,i,r,o){return r+(e-t)*(o-r)/(i-t)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return e<0?-1:e>0?1:0}},THREE.Matrix3=function(){this.elements=new Float32Array(9)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(e){e=(l=e.elements)[10]*l[5]-l[6]*l[9];var t=-l[10]*l[1]+l[2]*l[9],i=l[6]*l[1]-l[2]*l[5],r=-l[10]*l[4]+l[6]*l[8],o=l[10]*l[0]-l[2]*l[8],n=-l[6]*l[0]+l[2]*l[4],a=l[9]*l[4]-l[5]*l[8],s=-l[9]*l[0]+l[1]*l[8],h=l[5]*l[0]-l[1]*l[4],l=1/(l=l[0]*e+l[1]*r+l[2]*a),c=this.elements;return c[0]=l*e,c[1]=l*t,c[2]=l*i,c[3]=l*r,c[4]=l*o,c[5]=l*n,c[6]=l*a,c[7]=l*s,c[8]=l*h,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},transposeIntoArray:function(e){var t=this.m;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}},THREE.Matrix4=function(e,t,i,r,o,n,a,s,h,l,c,f,E,u,p,d){this.elements=new Float32Array(16),this.set(void 0!==e?e:1,t||0,i||0,r||0,o||0,void 0!==n?n:1,a||0,s||0,h||0,l||0,void 0!==c?c:1,f||0,E||0,u||0,p||0,void 0!==d?d:1)},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,i,r,o,n,a,s,h,l,c,f,E,u,p,d){var m=this.elements;return m[0]=e,m[4]=t,m[8]=i,m[12]=r,m[1]=o,m[5]=n,m[9]=a,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=f,m[3]=E,m[7]=u,m[11]=p,m[15]=d,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return e=e.elements,this.set(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]),this},lookAt:function(e,t,i){var r=this.elements,o=THREE.Matrix4.__v1,n=THREE.Matrix4.__v2,a=THREE.Matrix4.__v3;return a.sub(e,t).normalize(),0===a.length()&&(a.z=1),o.cross(i,a).normalize(),0===o.length()&&(a.x=a.x+1e-4,o.cross(i,a).normalize()),n.cross(a,o),r[0]=o.x,r[4]=n.x,r[8]=a.x,r[1]=o.y,r[5]=n.y,r[9]=a.y,r[2]=o.z,r[6]=n.z,r[10]=a.z,this},multiply:function(e,t){var i=e.elements,r=t.elements,o=this.elements,n=i[0],a=i[4],s=i[8],h=i[12],l=i[1],c=i[5],f=i[9],E=i[13],u=i[2],p=i[6],d=i[10],m=i[14],g=i[3],v=i[7],T=i[11],R=(i=i[15],r[0]),y=r[4],x=r[8],H=r[12],b=r[1],w=r[5],_=r[9],S=r[13],M=r[2],A=r[6],C=r[10],L=r[14],P=r[3],F=r[7],U=r[11];r=r[15];return o[0]=n*R+a*b+s*M+h*P,o[4]=n*y+a*w+s*A+h*F,o[8]=n*x+a*_+s*C+h*U,o[12]=n*H+a*S+s*L+h*r,o[1]=l*R+c*b+f*M+E*P,o[5]=l*y+c*w+f*A+E*F,o[9]=l*x+c*_+f*C+E*U,o[13]=l*H+c*S+f*L+E*r,o[2]=u*R+p*b+d*M+m*P,o[6]=u*y+p*w+d*A+m*F,o[10]=u*x+p*_+d*C+m*U,o[14]=u*H+p*S+d*L+m*r,o[3]=g*R+v*b+T*M+i*P,o[7]=g*y+v*w+T*A+i*F,o[11]=g*x+v*_+T*C+i*U,o[15]=g*H+v*S+T*L+i*r,this},multiplySelf:function(e){return this.multiply(this,e)},multiplyToArray:function(e,t,i){var r=this.elements;return this.multiply(e,t),i[0]=r[0],i[1]=r[1],i[2]=r[2],i[3]=r[3],i[4]=r[4],i[5]=r[5],i[6]=r[6],i[7]=r[7],i[8]=r[8],i[9]=r[9],i[10]=r[10],i[11]=r[11],i[12]=r[12],i[13]=r[13],i[14]=r[14],i[15]=r[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]=t[0]*e,t[4]=t[4]*e,t[8]=t[8]*e,t[12]=t[12]*e,t[1]=t[1]*e,t[5]=t[5]*e,t[9]=t[9]*e,t[13]=t[13]*e,t[2]=t[2]*e,t[6]=t[6]*e,t[10]=t[10]*e,t[14]=t[14]*e,t[3]=t[3]*e,t[7]=t[7]*e,t[11]=t[11]*e,t[15]=t[15]*e,this},multiplyVector3:function(e){var t=this.elements,i=e.x,r=e.y,o=e.z,n=1/(t[3]*i+t[7]*r+t[11]*o+t[15]);return e.x=(t[0]*i+t[4]*r+t[8]*o+t[12])*n,e.y=(t[1]*i+t[5]*r+t[9]*o+t[13])*n,e.z=(t[2]*i+t[6]*r+t[10]*o+t[14])*n,e},multiplyVector4:function(e){var t=this.elements,i=e.x,r=e.y,o=e.z,n=e.w;return e.x=t[0]*i+t[4]*r+t[8]*o+t[12]*n,e.y=t[1]*i+t[5]*r+t[9]*o+t[13]*n,e.z=t[2]*i+t[6]*r+t[10]*o+t[14]*n,e.w=t[3]*i+t[7]*r+t[11]*o+t[15]*n,e},rotateAxis:function(e){var t=this.elements,i=e.x,r=e.y,o=e.z;return e.x=i*t[0]+r*t[4]+o*t[8],e.y=i*t[1]+r*t[5]+o*t[9],e.z=i*t[2]+r*t[6]+o*t[10],e.normalize(),e},crossVector:function(e){var t=this.elements,i=new THREE.Vector4;return i.x=t[0]*e.x+t[4]*e.y+t[8]*e.z+t[12]*e.w,i.y=t[1]*e.x+t[5]*e.y+t[9]*e.z+t[13]*e.w,i.z=t[2]*e.x+t[6]*e.y+t[10]*e.z+t[14]*e.w,i.w=e.w?t[3]*e.x+t[7]*e.y+t[11]*e.z+t[15]*e.w:1,i},determinant:function(){var e,t=(e=this.elements)[0],i=e[4],r=e[8],o=e[12],n=e[1],a=e[5],s=e[9],h=e[13],l=e[2],c=e[6],f=e[10],E=e[14],u=e[3],p=e[7],d=e[11];return o*s*c*u-r*h*c*u-o*a*f*u+i*h*f*u+r*a*E*u-i*s*E*u-o*s*l*p+r*h*l*p+o*n*f*p-t*h*f*p-r*n*E*p+t*s*E*p+o*a*l*d-i*h*l*d-o*n*c*d+t*h*c*d+i*n*E*d-t*a*E*d-r*a*l*(e=e[15])+i*s*l*e+r*n*c*e-t*s*c*e-i*n*f*e+t*a*f*e},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e},getPosition:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[12],e[13],e[14])},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getColumnX:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[0],e[1],e[2])},getColumnY:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[4],e[5],e[6])},getColumnZ:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[8],e[9],e[10])},getInverse:function(e){var t=this.elements,i=(g=e.elements)[0],r=g[4],o=g[8],n=g[12],a=g[1],s=g[5],h=g[9],l=g[13],c=g[2],f=g[6],E=g[10],u=g[14],p=g[3],d=g[7],m=g[11],g=g[15];return t[0]=h*u*d-l*E*d+l*f*m-s*u*m-h*f*g+s*E*g,t[4]=n*E*d-o*u*d-n*f*m+r*u*m+o*f*g-r*E*g,t[8]=o*l*d-n*h*d+n*s*m-r*l*m-o*s*g+r*h*g,t[12]=n*h*f-o*l*f-n*s*E+r*l*E+o*s*u-r*h*u,t[1]=l*E*p-h*u*p-l*c*m+a*u*m+h*c*g-a*E*g,t[5]=o*u*p-n*E*p+n*c*m-i*u*m-o*c*g+i*E*g,t[9]=n*h*p-o*l*p-n*a*m+i*l*m+o*a*g-i*h*g,t[13]=o*l*c-n*h*c+n*a*E-i*l*E-o*a*u+i*h*u,t[2]=s*u*p-l*f*p+l*c*d-a*u*d-s*c*g+a*f*g,t[6]=n*f*p-r*u*p-n*c*d+i*u*d+r*c*g-i*f*g,t[10]=r*l*p-n*s*p+n*a*d-i*l*d-r*a*g+i*s*g,t[14]=n*s*c-r*l*c-n*a*f+i*l*f+r*a*u-i*s*u,t[3]=h*f*p-s*E*p-h*c*d+a*E*d+s*c*m-a*f*m,t[7]=r*E*p-o*f*p+o*c*d-i*E*d-r*c*m+i*f*m,t[11]=o*s*p-r*h*p-o*a*d+i*h*d+r*a*m-i*s*m,t[15]=r*h*c-o*s*c+o*a*f-i*h*f-r*a*E+i*s*E,this.multiplyScalar(1/e.determinant()),this},setRotationFromEuler:function(e,t){var i=this.elements,r=e.x,o=e.y,n=e.z,a=Math.cos(r),s=(r=Math.sin(r),Math.cos(o)),h=(o=Math.sin(o),Math.cos(n));n=Math.sin(n);switch(t){case"YXZ":var l=s*h,c=s*n,f=o*h,E=o*n;i[0]=l+E*r,i[4]=f*r-c,i[8]=a*o,i[1]=a*n,i[5]=a*h,i[9]=-r,i[2]=c*r-f,i[6]=E+l*r,i[10]=a*s;break;case"ZXY":l=s*h,c=s*n,f=o*h,E=o*n,i[0]=l-E*r,i[4]=-a*n,i[8]=f+c*r,i[1]=c+f*r,i[5]=a*h,i[9]=E-l*r,i[2]=-a*o,i[6]=r,i[10]=a*s;break;case"ZYX":l=a*h,c=a*n,f=r*h,E=r*n,i[0]=s*h,i[4]=f*o-c,i[8]=l*o+E,i[1]=s*n,i[5]=E*o+l,i[9]=c*o-f,i[2]=-o,i[6]=r*s,i[10]=a*s;break;case"YZX":l=a*s,c=a*o,f=r*s,E=r*o,i[0]=s*h,i[4]=E-l*n,i[8]=f*n+c,i[1]=n,i[5]=a*h,i[9]=-r*h,i[2]=-o*h,i[6]=c*n+f,i[10]=l-E*n;break;case"XZY":l=a*s,c=a*o,f=r*s,E=r*o,i[0]=s*h,i[4]=-n,i[8]=o*h,i[1]=l*n+E,i[5]=a*h,i[9]=c*n-f,i[2]=f*n-c,i[6]=r*h,i[10]=E*n+l;break;default:l=a*h,c=a*n,f=r*h,E=r*n,i[0]=s*h,i[4]=-s*n,i[8]=o,i[1]=c+f*o,i[5]=l-E*o,i[9]=-r*s,i[2]=E-l*o,i[6]=f+c*o,i[10]=a*s}return this},setRotationFromQuaternion:function(e){var t=this.elements,i=e.x,r=e.y,o=e.z,n=e.w,a=o+o,s=(e=i*(l=i+i),i*(c=r+r)),h=(i=i*a,r*c),l=(r=r*a,o=o*a,n*l),c=n*c;n*=a;return t[0]=1-(h+o),t[4]=s-n,t[8]=i+c,t[1]=s+n,t[5]=1-(e+o),t[9]=r-l,t[2]=i-c,t[6]=r+l,t[10]=1-(e+h),this},compose:function(e,t,i){var r=this.elements,o=THREE.Matrix4.__m1,n=THREE.Matrix4.__m2;return o.identity(),o.setRotationFromQuaternion(t),n.makeScale(i.x,i.y,i.z),this.multiply(o,n),r[12]=e.x,r[13]=e.y,r[14]=e.z,this},decompose:function(e,t,i){var r=this.elements,o=THREE.Matrix4.__v1,n=THREE.Matrix4.__v2,a=THREE.Matrix4.__v3;return o.set(r[0],r[1],r[2]),n.set(r[4],r[5],r[6]),a.set(r[8],r[9],r[10]),e=e instanceof THREE.Vector3?e:new THREE.Vector3,t=t instanceof THREE.Quaternion?t:new THREE.Quaternion,(i=i instanceof THREE.Vector3?i:new THREE.Vector3).x=o.length(),i.y=n.length(),i.z=a.length(),e.x=r[12],e.y=r[13],e.z=r[14],(r=THREE.Matrix4.__m1).copy(this),r.elements[0]=r.elements[0]/i.x,r.elements[1]=r.elements[1]/i.x,r.elements[2]=r.elements[2]/i.x,r.elements[4]=r.elements[4]/i.y,r.elements[5]=r.elements[5]/i.y,r.elements[6]=r.elements[6]/i.y,r.elements[8]=r.elements[8]/i.z,r.elements[9]=r.elements[9]/i.z,r.elements[10]=r.elements[10]/i.z,t.setFromRotationMatrix(r),[e,t,i]},extractPosition:function(e){var t=this.elements;e=e.elements;return t[12]=e[12],t[13]=e[13],t[14]=e[14],this},extractRotation:function(e){var t=this.elements,i=(e=e.elements,1/(o=THREE.Matrix4.__v1).set(e[0],e[1],e[2]).length()),r=1/o.set(e[4],e[5],e[6]).length(),o=1/o.set(e[8],e[9],e[10]).length();return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[4]=e[4]*r,t[5]=e[5]*r,t[6]=e[6]*r,t[8]=e[8]*o,t[9]=e[9]*o,t[10]=e[10]*o,this},translate:function(e){var t=this.elements,i=e.x,r=e.y;e=e.z;return t[12]=t[0]*i+t[4]*r+t[8]*e+t[12],t[13]=t[1]*i+t[5]*r+t[9]*e+t[13],t[14]=t[2]*i+t[6]*r+t[10]*e+t[14],t[15]=t[3]*i+t[7]*r+t[11]*e+t[15],this},rotateX:function(e){var t=this.elements,i=t[4],r=t[5],o=t[6],n=t[7],a=t[8],s=t[9],h=t[10],l=t[11],c=Math.cos(e);e=Math.sin(e);return t[4]=c*i+e*a,t[5]=c*r+e*s,t[6]=c*o+e*h,t[7]=c*n+e*l,t[8]=c*a-e*i,t[9]=c*s-e*r,t[10]=c*h-e*o,t[11]=c*l-e*n,this},rotateY:function(e){var t=this.elements,i=t[0],r=t[1],o=t[2],n=t[3],a=t[8],s=t[9],h=t[10],l=t[11],c=Math.cos(e);e=Math.sin(e);return t[0]=c*i-e*a,t[1]=c*r-e*s,t[2]=c*o-e*h,t[3]=c*n-e*l,t[8]=c*a+e*i,t[9]=c*s+e*r,t[10]=c*h+e*o,t[11]=c*l+e*n,this},rotateZ:function(e){var t=this.elements,i=t[0],r=t[1],o=t[2],n=t[3],a=t[4],s=t[5],h=t[6],l=t[7],c=Math.cos(e);e=Math.sin(e);return t[0]=c*i+e*a,t[1]=c*r+e*s,t[2]=c*o+e*h,t[3]=c*n+e*l,t[4]=c*a-e*i,t[5]=c*s-e*r,t[6]=c*h-e*o,t[7]=c*l-e*n,this},rotateByAxis:function(e,t){var i=this.elements;if(1===e.x&&0===e.y&&0===e.z)return this.rotateX(t);if(0===e.x&&1===e.y&&0===e.z)return this.rotateY(t);if(0===e.x&&0===e.y&&1===e.z)return this.rotateZ(t);var r=e.x,o=e.y,n=e.z,a=(o=o/(a=Math.sqrt(r*r+o*o+n*n)),n=n/a,(r=r/a)*r),s=o*o,h=n*n,l=r*o*(f=1-(p=Math.cos(t))),c=r*n*f,f=o*n*f,E=(r=r*(u=Math.sin(t)),o*u),u=n*u,p=(n=a+(1-a)*p,a=l+u,o=c-E,l=l-u,s=s+(1-s)*p,u=f+r,c=c+E,f=f-r,h=h+(1-h)*p,i[0]),d=(r=i[1],E=i[2],i[3]),m=i[4],g=i[5],v=i[6],T=i[7],R=i[8],y=i[9],x=i[10],H=i[11];return i[0]=n*p+a*m+o*R,i[1]=n*r+a*g+o*y,i[2]=n*E+a*v+o*x,i[3]=n*d+a*T+o*H,i[4]=l*p+s*m+u*R,i[5]=l*r+s*g+u*y,i[6]=l*E+s*v+u*x,i[7]=l*d+s*T+u*H,i[8]=c*p+f*m+h*R,i[9]=c*r+f*g+h*y,i[10]=c*E+f*v+h*x,i[11]=c*d+f*T+h*H,this},scale:function(e){var t=this.elements,i=e.x,r=e.y;e=e.z;return t[0]=t[0]*i,t[4]=t[4]*r,t[8]=t[8]*e,t[1]=t[1]*i,t[5]=t[5]*r,t[9]=t[9]*e,t[2]=t[2]*i,t[6]=t[6]*r,t[10]=t[10]*e,t[3]=t[3]*i,t[7]=t[7]*r,t[11]=t[11]*e,this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],Math.max(e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10])))},makeTranslation:function(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e);e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e);e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e);e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var i=Math.cos(t),r=Math.sin(t),o=1-i,n=e.x,a=e.y,s=e.z,h=o*n,l=o*a;return this.set(h*n+i,h*a-r*s,h*s+r*a,0,h*a+r*s,l*a+i,l*s-r*n,0,h*s-r*a,l*s+r*n,o*s*s+i,0,0,0,0,1),this},makeScale:function(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this},makeFrustum:function(e,t,i,r,o,n){var a=this.elements;return a[0]=2*o/(t-e),a[4]=0,a[8]=(t+e)/(t-e),a[12]=0,a[1]=0,a[5]=2*o/(r-i),a[9]=(r+i)/(r-i),a[13]=0,a[2]=0,a[6]=0,a[10]=-(n+o)/(n-o),a[14]=-2*n*o/(n-o),a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(e,t,i,r){var o=-(e=i*Math.tan(e*Math.PI/360));return this.makeFrustum(o*t,e*t,o,e,i,r)},makeOrthographic:function(e,t,i,r,o,n){var a=this.elements,s=t-e,h=i-r,l=n-o;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-(t+e)/s,a[1]=0,a[5]=2/h,a[9]=0,a[13]=-(i+r)/h,a[2]=0,a[6]=0,a[10]=-2/l,a[14]=-(n+o)/l,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Matrix4.__v1=new THREE.Vector3,THREE.Matrix4.__v2=new THREE.Vector3,THREE.Matrix4.__v3=new THREE.Vector3,THREE.Matrix4.__m1=new THREE.Matrix4,THREE.Matrix4.__m2=new THREE.Matrix4,THREE.Object3D=function(){this.id=THREE.Object3DCount++,this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.eulerOrder="XYZ",this.scale=new THREE.Vector3(1,1,1),this.flipSided=this.doubleSided=!1,this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixRotationWorld=new THREE.Matrix4,this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.boundRadius=0,this.boundRadiusScale=1,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this._vector=new THREE.Vector3},THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(e){this.matrix.multiply(e,this.matrix),this.scale.getScaleFromMatrix(this.matrix),this.rotation.getRotationFromMatrix(this.matrix,this.scale),this.position.getPositionFromMatrix(this.matrix)},translate:function(e,t){this.matrix.rotateAxis(t),this.position.addSelf(t.multiplyScalar(e))},translateX:function(e){this.translate(e,this._vector.set(1,0,0))},translateY:function(e){this.translate(e,this._vector.set(0,1,0))},translateZ:function(e){this.translate(e,this._vector.set(0,0,1))},lookAt:function(e){this.matrix.lookAt(e,this.position,this.up),this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)},add:function(e){if(e===this);else if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){for(e.parent=void 0,this.children.splice(t,1),t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__removeObject(e)}},getChildByName:function(e,t){var i,r,o;for(i=0,r=this.children.length;i<r;i++){if((o=this.children[i]).name===e)return o;if(t&&void 0!==(o=o.getChildByName(e,t)))return o}},updateMatrix:function(){this.matrix.setPosition(this.position),this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder),1===this.scale.x&&1===this.scale.y&&1===this.scale.z||(this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z))),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,i=this.children.length;t<i;t++)this.children[t].updateMatrixWorld(e)}},THREE.Object3DCount=0,THREE.Projector=function(){function e(){var e=d[n]=d[n]||new THREE.RenderableObject;return n++,e}function t(){var e=m[s]=m[s]||new THREE.RenderableVertex;return s++,e}function i(e,t){return t.z-e.z}function r(e,t){var i=0,r=1,o=e.z+e.w,n=t.z+t.w,a=-e.z+e.w,s=-t.z+t.w;return o>=0&&n>=0&&a>=0&&s>=0||!(o<0&&n<0||a<0&&s<0)&&(o<0?i=Math.max(i,o/(o-n)):n<0&&(r=Math.min(r,o/(o-n))),a<0?i=Math.max(i,a/(a-s)):s<0&&(r=Math.min(r,a/(a-s))),!(r<i)&&(e.lerpSelf(t,i),t.lerpSelf(e,1-r),!0))}var o,n,a,s,h,l,c,f,E,u,p,d=[],m=[],g=[],v=[],T=[],R=[],y={objects:[],sprites:[],lights:[],elements:[]},x=new THREE.Vector3,H=new THREE.Vector4,b=new THREE.Matrix4,w=new THREE.Matrix4,_=new THREE.Frustum,S=new THREE.Vector4,M=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),b.multiply(t.projectionMatrix,t.matrixWorldInverse),b.multiplyVector3(e),e},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),b.multiply(t.matrixWorld,t.projectionMatrixInverse),b.multiplyVector3(e),e},this.pickingRay=function(e,t){var i;return e.z=-1,i=new THREE.Vector3(e.x,e.y,1),this.unprojectVector(e,t),this.unprojectVector(i,t),i.subSelf(e).normalize(),new THREE.Ray(e,i)},this.projectGraph=function(t,r){n=0,y.objects.length=0,y.sprites.length=0,y.lights.length=0;var a=function(t){if(!1!==t.visible){(t instanceof THREE.Mesh||t instanceof THREE.Line)&&(!1===t.frustumCulled||_.contains(t))?(x.copy(t.matrixWorld.getPosition()),b.multiplyVector3(x),(o=e()).object=t,o.z=x.z,y.objects.push(o)):t instanceof THREE.Sprite||t instanceof THREE.Particle?(x.copy(t.matrixWorld.getPosition()),b.multiplyVector3(x),(o=e()).object=t,o.z=x.z,y.sprites.push(o)):t instanceof THREE.Light&&y.lights.push(t);for(var i=0,r=t.children.length;i<r;i++)a(t.children[i])}};return a(t),r&&y.objects.sort(i),y},this.projectScene=function(e,o,n){var d,x,A,C,L,P,F,U,D,V,B,z,N,k,O,I=o.near,W=o.far,G=!1;for(p=E=c=l=0,y.elements.length=0,void 0===o.parent&&e.add(o),e.updateMatrixWorld(),o.matrixWorldInverse.getInverse(o.matrixWorld),b.multiply(o.projectionMatrix,o.matrixWorldInverse),_.setFromMatrix(b),y=this.projectGraph(e,!1),e=0,d=y.objects.length;e<d;e++)if(V=(D=y.objects[e].object).matrixWorld,s=0,D instanceof THREE.Mesh){for(B=D.geometry,z=D.geometry.materials,C=B.vertices,N=B.faces,k=B.faceVertexUvs,B=D.matrixRotationWorld.extractRotation(V),x=0,A=C.length;x<A;x++)(a=t()).positionWorld.copy(C[x]),V.multiplyVector3(a.positionWorld),a.positionScreen.copy(a.positionWorld),b.multiplyVector4(a.positionScreen),a.positionScreen.x=a.positionScreen.x/a.positionScreen.w,a.positionScreen.y=a.positionScreen.y/a.positionScreen.w,a.visible=a.positionScreen.z>I&&a.positionScreen.z<W;for(C=0,x=N.length;C<x;C++){if((A=N[C])instanceof THREE.Face3){if(L=m[A.a],P=m[A.b],F=m[A.c],!(L.visible&&P.visible&&F.visible))continue;if(G=(F.positionScreen.x-L.positionScreen.x)*(P.positionScreen.y-L.positionScreen.y)-(F.positionScreen.y-L.positionScreen.y)*(P.positionScreen.x-L.positionScreen.x)<0,!D.doubleSided&&G==D.flipSided)continue;U=g[l]=g[l]||new THREE.RenderableFace3,l++,(h=U).v1.copy(L),h.v2.copy(P),h.v3.copy(F)}else if(A instanceof THREE.Face4){if(L=m[A.a],P=m[A.b],F=m[A.c],U=m[A.d],!(L.visible&&P.visible&&F.visible&&U.visible))continue;if(G=(U.positionScreen.x-L.positionScreen.x)*(P.positionScreen.y-L.positionScreen.y)-(U.positionScreen.y-L.positionScreen.y)*(P.positionScreen.x-L.positionScreen.x)<0||(P.positionScreen.x-F.positionScreen.x)*(U.positionScreen.y-F.positionScreen.y)-(P.positionScreen.y-F.positionScreen.y)*(U.positionScreen.x-F.positionScreen.x)<0,!D.doubleSided&&G==D.flipSided)continue;O=v[c]=v[c]||new THREE.RenderableFace4,c++,(h=O).v1.copy(L),h.v2.copy(P),h.v3.copy(F),h.v4.copy(U)}for(h.normalWorld.copy(A.normal),!G&&(D.flipSided||D.doubleSided)&&h.normalWorld.negate(),B.multiplyVector3(h.normalWorld),h.centroidWorld.copy(A.centroid),V.multiplyVector3(h.centroidWorld),h.centroidScreen.copy(h.centroidWorld),b.multiplyVector3(h.centroidScreen),L=0,P=(F=A.vertexNormals).length;L<P;L++)(U=h.vertexNormalsWorld[L]).copy(F[L]),!G&&(D.flipSided||D.doubleSided)&&U.negate(),B.multiplyVector3(U);for(L=0,P=k.length;L<P;L++)if(O=k[L][C])for(F=0,U=O.length;F<U;F++)h.uvs[L][F]=O[F];h.material=D.material,h.faceMaterial=null!==A.materialIndex?z[A.materialIndex]:null,h.z=h.centroidScreen.z,y.elements.push(h)}}else if(D instanceof THREE.Line)for(w.multiply(b,V),C=D.geometry.vertices,(L=t()).positionScreen.copy(C[0]),w.multiplyVector4(L.positionScreen),V=D.type===THREE.LinePieces?2:1,x=1,A=C.length;x<A;x++)(L=t()).positionScreen.copy(C[x]),w.multiplyVector4(L.positionScreen),(x+1)%V>0||(P=m[s-2],S.copy(L.positionScreen),M.copy(P.positionScreen),r(S,M)&&(S.multiplyScalar(1/S.w),M.multiplyScalar(1/M.w),z=T[E]=T[E]||new THREE.RenderableLine,E++,(f=z).v1.positionScreen.copy(S),f.v2.positionScreen.copy(M),f.z=Math.max(S.z,M.z),f.material=D.material,y.elements.push(f)));for(e=0,d=y.sprites.length;e<d;e++)V=(D=y.sprites[e].object).matrixWorld,D instanceof THREE.Particle&&(H.set(V.elements[12],V.elements[13],V.elements[14],1),b.multiplyVector4(H),H.z=H.z/H.w,H.z>0&&H.z<1&&(I=R[p]=R[p]||new THREE.RenderableParticle,p++,(u=I).x=H.x/H.w,u.y=H.y/H.w,u.z=H.z,u.rotation=D.rotation.z,u.scale.x=D.scale.x*Math.abs(u.x-(H.x+o.projectionMatrix.elements[0])/(H.w+o.projectionMatrix.elements[12])),u.scale.y=D.scale.y*Math.abs(u.y-(H.y+o.projectionMatrix.elements[5])/(H.w+o.projectionMatrix.elements[13])),u.material=D.material,y.elements.push(u)));return n&&y.elements.sort(i),y}},THREE.Quaternion=function(e,t,i,r){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==r?r:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},setFromEuler:function(e){var t=Math.PI/360,i=e.x*t,r=e.y*t,o=e.z*t,n=(e=Math.cos(r),r=Math.sin(r),t=Math.cos(-o),o=Math.sin(-o),Math.cos(i)),a=(i=Math.sin(i),e*t),s=r*o;return this.w=a*n-s*i,this.x=a*i+s*n,this.y=r*t*n+e*o*i,this.z=e*o*n-r*t*i,this},setFromAxisAngle:function(e,t){var i=t/2,r=Math.sin(i);return this.x=e.x*r,this.y=e.y*r,this.z=e.z*r,this.w=Math.cos(i),this},setFromRotationMatrix:function(e){var t=Math.pow(e.determinant(),1/3);return this.w=Math.sqrt(Math.max(0,t+e.elements[0]+e.elements[5]+e.elements[10]))/2,this.x=Math.sqrt(Math.max(0,t+e.elements[0]-e.elements[5]-e.elements[10]))/2,this.y=Math.sqrt(Math.max(0,t-e.elements[0]+e.elements[5]-e.elements[10]))/2,this.z=Math.sqrt(Math.max(0,t-e.elements[0]-e.elements[5]+e.elements[10]))/2,this.x=e.elements[6]-e.elements[9]<0?-Math.abs(this.x):Math.abs(this.x),this.y=e.elements[8]-e.elements[2]<0?-Math.abs(this.y):Math.abs(this.y),this.z=e.elements[1]-e.elements[4]<0?-Math.abs(this.z):Math.abs(this.z),this.normalize(),this},calculateW:function(){return this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z)),this},inverse:function(){return this.x=-1*this.x,this.y=-1*this.y,this.z=-1*this.z,this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===e?this.w=this.z=this.y=this.x=0:(e=1/e,this.x=this.x*e,this.y=this.y*e,this.z=this.z*e,this.w=this.w*e),this},multiply:function(e,t){return this.x=e.x*t.w+e.y*t.z-e.z*t.y+e.w*t.x,this.y=-e.x*t.z+e.y*t.w+e.z*t.x+e.w*t.y,this.z=e.x*t.y-e.y*t.x+e.z*t.w+e.w*t.z,this.w=-e.x*t.x-e.y*t.y-e.z*t.z+e.w*t.w,this},multiplySelf:function(e){var t=this.x,i=this.y,r=this.z,o=this.w,n=e.x,a=e.y,s=e.z;e=e.w;return this.x=t*e+o*n+i*s-r*a,this.y=i*e+o*a+r*n-t*s,this.z=r*e+o*s+t*a-i*n,this.w=o*e-t*n-i*a-r*s,this},multiplyVector3:function(e,t){t||(t=e);var i=e.x,r=e.y,o=e.z,n=this.x,a=this.y,s=this.z,h=this.w,l=h*i+a*o-s*r,c=h*r+s*i-n*o,f=h*o+n*r-a*i;i=-n*i-a*r-s*o;return t.x=l*h+i*-n+c*-s-f*-a,t.y=c*h+i*-a+f*-n-l*-s,t.z=f*h+i*-s+l*-a-c*-n,t},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}},THREE.Quaternion.slerp=function(e,t,i,r){if((n=e.w*t.w+e.x*t.x+e.y*t.y+e.z*t.z)<0?(i.w=-t.w,i.x=-t.x,i.y=-t.y,i.z=-t.z,n=-n):i.copy(t),Math.abs(n)>=1)return i.w=e.w,i.x=e.x,i.y=e.y,i.z=e.z,i;var o=Math.acos(n),n=Math.sqrt(1-n*n);return Math.abs(n)<.001?(i.w=.5*(e.w+t.w),i.x=.5*(e.x+t.x),i.y=.5*(e.y+t.y),i.z=.5*(e.z+t.z),i):(t=Math.sin((1-r)*o)/n,r=Math.sin(r*o)/n,i.w=e.w*t+i.w*r,i.x=e.x*t+i.x*r,i.y=e.y*t+i.y*r,i.z=e.z*t+i.z*r,i)},THREE.Vertex=function(){},THREE.Face3=function(e,t,i,r,o,n){this.a=e,this.b=t,this.c=i,this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3,this.vertexNormals=r instanceof Array?r:[],this.color=o instanceof THREE.Color?o:new THREE.Color,this.vertexColors=o instanceof Array?o:[],this.vertexTangents=[],this.materialIndex=n,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e,t,i=new THREE.Face3(this.a,this.b,this.c);for(i.normal.copy(this.normal),i.color.copy(this.color),i.centroid.copy(this.centroid),i.materialIndex=this.materialIndex,e=0,t=this.vertexNormals.length;e<t;e++)i.vertexNormals[e]=this.vertexNormals[e].clone();for(e=0,t=this.vertexColors.length;e<t;e++)i.vertexColors[e]=this.vertexColors[e].clone();for(e=0,t=this.vertexTangents.length;e<t;e++)i.vertexTangents[e]=this.vertexTangents[e].clone();return i}},THREE.Face4=function(e,t,i,r,o,n,a){this.a=e,this.b=t,this.c=i,this.d=r,this.normal=o instanceof THREE.Vector3?o:new THREE.Vector3,this.vertexNormals=o instanceof Array?o:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=a,this.centroid=new THREE.Vector3},THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var e,t,i=new THREE.Face4(this.a,this.b,this.c,this.d);for(i.normal.copy(this.normal),i.color.copy(this.color),i.centroid.copy(this.centroid),i.materialIndex=this.materialIndex,e=0,t=this.vertexNormals.length;e<t;e++)i.vertexNormals[e]=this.vertexNormals[e].clone();for(e=0,t=this.vertexColors.length;e<t;e++)i.vertexColors[e]=this.vertexColors[e].clone();for(e=0,t=this.vertexTangents.length;e<t;e++)i.vertexTangents[e]=this.vertexTangents[e].clone();return i}},THREE.UV=function(e,t){this.u=e||0,this.v=t||0},THREE.UV.prototype={constructor:THREE.UV,set:function(e,t){return this.u=e,this.v=t,this},copy:function(e){return this.u=e.u,this.v=e.v,this},lerpSelf:function(e,t){return this.u=this.u+(e.u-this.u)*t,this.v=this.v+(e.v-this.v)*t,this},clone:function(){return new THREE.UV(this.u,this.v)}},THREE.Geometry=function(){this.id=THREE.GeometryCount++,this.vertices=[],this.colors=[],this.materials=[],this.faces=[],this.faceUvs=[[]],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.boundingSphere=this.boundingBox=null,this.dynamic=this.hasTangents=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){var t=new THREE.Matrix4;t.extractRotation(e);for(var i=0,r=this.vertices.length;i<r;i++)e.multiplyVector3(this.vertices[i]);for(i=0,r=this.faces.length;i<r;i++){var o=this.faces[i];t.multiplyVector3(o.normal);for(var n=0,a=o.vertexNormals.length;n<a;n++)t.multiplyVector3(o.vertexNormals[n]);e.multiplyVector3(o.centroid)}},computeCentroids:function(){var e,t,i;for(e=0,t=this.faces.length;e<t;e++)(i=this.faces[e]).centroid.set(0,0,0),i instanceof THREE.Face3?(i.centroid.addSelf(this.vertices[i.a]),i.centroid.addSelf(this.vertices[i.b]),i.centroid.addSelf(this.vertices[i.c]),i.centroid.divideScalar(3)):i instanceof THREE.Face4&&(i.centroid.addSelf(this.vertices[i.a]),i.centroid.addSelf(this.vertices[i.b]),i.centroid.addSelf(this.vertices[i.c]),i.centroid.addSelf(this.vertices[i.d]),i.centroid.divideScalar(4))},computeFaceNormals:function(){var e,t,i,r,o,n,a=new THREE.Vector3,s=new THREE.Vector3;for(e=0,t=this.faces.length;e<t;e++)i=this.faces[e],r=this.vertices[i.a],o=this.vertices[i.b],n=this.vertices[i.c],a.sub(n,o),s.sub(r,o),a.crossSelf(s),a.isZero()||a.normalize(),i.normal.copy(a)},computeVertexNormals:function(){var e,t,i,r;if(void 0===this.__tmpVertices){for(r=this.__tmpVertices=Array(this.vertices.length),e=0,t=this.vertices.length;e<t;e++)r[e]=new THREE.Vector3;for(e=0,t=this.faces.length;e<t;e++)(i=this.faces[e])instanceof THREE.Face3?i.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:i instanceof THREE.Face4&&(i.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else for(r=this.__tmpVertices,e=0,t=this.vertices.length;e<t;e++)r[e].set(0,0,0);for(e=0,t=this.faces.length;e<t;e++)(i=this.faces[e])instanceof THREE.Face3?(r[i.a].addSelf(i.normal),r[i.b].addSelf(i.normal),r[i.c].addSelf(i.normal)):i instanceof THREE.Face4&&(r[i.a].addSelf(i.normal),r[i.b].addSelf(i.normal),r[i.c].addSelf(i.normal),r[i.d].addSelf(i.normal));for(e=0,t=this.vertices.length;e<t;e++)r[e].normalize();for(e=0,t=this.faces.length;e<t;e++)(i=this.faces[e])instanceof THREE.Face3?(i.vertexNormals[0].copy(r[i.a]),i.vertexNormals[1].copy(r[i.b]),i.vertexNormals[2].copy(r[i.c])):i instanceof THREE.Face4&&(i.vertexNormals[0].copy(r[i.a]),i.vertexNormals[1].copy(r[i.b]),i.vertexNormals[2].copy(r[i.c]),i.vertexNormals[3].copy(r[i.d]))},computeMorphNormals:function(){var e,t,i,r,o;for(i=0,r=this.faces.length;i<r;i++)for((o=this.faces[i]).__originalFaceNormal?o.__originalFaceNormal.copy(o.normal):o.__originalFaceNormal=o.normal.clone(),o.__originalVertexNormals||(o.__originalVertexNormals=[]),e=0,t=o.vertexNormals.length;e<t;e++)o.__originalVertexNormals[e]?o.__originalVertexNormals[e].copy(o.vertexNormals[e]):o.__originalVertexNormals[e]=o.vertexNormals[e].clone();var n=new THREE.Geometry;for(n.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var a,s,h=this.morphNormals[e].faceNormals,l=this.morphNormals[e].vertexNormals;for(i=0,r=this.faces.length;i<r;i++)o=this.faces[i],a=new THREE.Vector3,s=o instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},h.push(a),l.push(s)}for(h=this.morphNormals[e],n.vertices=this.morphTargets[e].vertices,n.computeFaceNormals(),n.computeVertexNormals(),i=0,r=this.faces.length;i<r;i++)o=this.faces[i],a=h.faceNormals[i],s=h.vertexNormals[i],a.copy(o.normal),o instanceof THREE.Face3?(s.a.copy(o.vertexNormals[0]),s.b.copy(o.vertexNormals[1]),s.c.copy(o.vertexNormals[2])):(s.a.copy(o.vertexNormals[0]),s.b.copy(o.vertexNormals[1]),s.c.copy(o.vertexNormals[2]),s.d.copy(o.vertexNormals[3]))}for(i=0,r=this.faces.length;i<r;i++)(o=this.faces[i]).normal=o.__originalFaceNormal,o.vertexNormals=o.__originalVertexNormals},computeTangents:function(){function e(e,t,i,r,o,n,b){s=e.vertices[t],h=e.vertices[i],l=e.vertices[r],c=a[o],f=a[n],E=a[b],u=h.x-s.x,p=l.x-s.x,d=h.y-s.y,m=l.y-s.y,g=h.z-s.z,v=l.z-s.z,T=f.u-c.u,R=E.u-c.u,y=f.v-c.v,x=E.v-c.v,H=1/(T*x-R*y),S.set((x*u-y*p)*H,(x*d-y*m)*H,(x*g-y*v)*H),M.set((T*p-R*u)*H,(T*m-R*d)*H,(T*v-R*g)*H),w[t].addSelf(S),w[i].addSelf(S),w[r].addSelf(S),_[t].addSelf(M),_[i].addSelf(M),_[r].addSelf(M)}var t,i,r,o,n,a,s,h,l,c,f,E,u,p,d,m,g,v,T,R,y,x,H,b,w=[],_=[],S=new THREE.Vector3,M=new THREE.Vector3,A=new THREE.Vector3,C=new THREE.Vector3,L=new THREE.Vector3;for(t=0,i=this.vertices.length;t<i;t++)w[t]=new THREE.Vector3,_[t]=new THREE.Vector3;for(t=0,i=this.faces.length;t<i;t++)n=this.faces[t],a=this.faceVertexUvs[0][t],n instanceof THREE.Face3?e(this,n.a,n.b,n.c,0,1,2):n instanceof THREE.Face4&&(e(this,n.a,n.b,n.d,0,1,3),e(this,n.b,n.c,n.d,1,2,3));var P=["a","b","c","d"];for(t=0,i=this.faces.length;t<i;t++)for(n=this.faces[t],r=0;r<n.vertexNormals.length;r++)L.copy(n.vertexNormals[r]),o=n[P[r]],b=w[o],A.copy(b),A.subSelf(L.multiplyScalar(L.dot(b))).normalize(),C.cross(n.vertexNormals[r],b),o=(o=C.dot(_[o]))<0?-1:1,n.vertexTangents[r]=new THREE.Vector4(A.x,A.y,A.z,o);this.hasTangents=!0},computeBoundingBox:function(){if(this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3}),this.vertices.length>0){var e;e=this.vertices[0],this.boundingBox.min.copy(e),this.boundingBox.max.copy(e);for(var t=this.boundingBox.min,i=this.boundingBox.max,r=1,o=this.vertices.length;r<o;r++)(e=this.vertices[r]).x<t.x?t.x=e.x:e.x>i.x&&(i.x=e.x),e.y<t.y?t.y=e.y:e.y>i.y&&(i.y=e.y),e.z<t.z?t.z=e.z:e.z>i.z&&(i.z=e.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});for(var e,t=0,i=0,r=this.vertices.length;i<r;i++)(e=this.vertices[i].length())>t&&(t=e);this.boundingSphere.radius=t},mergeVertices:function(){var e,t,i,r,o={},n=[],a=[],s=Math.pow(10,4);for(t=0,i=this.vertices.length;t<i;t++)e=this.vertices[t],void 0===o[e=[Math.round(e.x*s),Math.round(e.y*s),Math.round(e.z*s)].join("_")]?(o[e]=t,n.push(this.vertices[t]),a[t]=n.length-1):a[t]=a[o[e]];for(t=0,i=this.faces.length;t<i;t++)if((s=this.faces[t])instanceof THREE.Face3)s.a=a[s.a],s.b=a[s.b],s.c=a[s.c];else if(s instanceof THREE.Face4)for(s.a=a[s.a],s.b=a[s.b],s.c=a[s.c],s.d=a[s.d],e=[s.a,s.b,s.c,s.d],o=3;o>0;o--)if(e.indexOf(s["abcd"[o]])!=o){for(e.splice(o,1),this.faces[t]=new THREE.Face3(e[0],e[1],e[2]),s=0,e=this.faceVertexUvs.length;s<e;s++)(r=this.faceVertexUvs[s][t])&&r.splice(o,1);break}return a=this.vertices.length-n.length,this.vertices=n,a}},THREE.GeometryCount=0,THREE.Spline=function(e){function t(e,t,i,r,o,n,a){return(2*(t-i)+(e=.5*(i-e))+(r=.5*(r-t)))*a+(-3*(t-i)-2*e-r)*n+e*o+t}this.points=e;var i,r,o,n,a,s,h,l,c,f=[],E={x:0,y:0,z:0};this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return i=(this.points.length-1)*e,r=Math.floor(i),o=i-r,f[0]=0===r?r:r-1,f[1]=r,f[2]=r>this.points.length-2?this.points.length-1:r+1,f[3]=r>this.points.length-3?this.points.length-1:r+2,s=this.points[f[0]],h=this.points[f[1]],l=this.points[f[2]],c=this.points[f[3]],a=o*(n=o*o),E.x=t(s.x,h.x,l.x,c.x,o,n,a),E.y=t(s.y,h.y,l.y,c.y,o,n,a),E.z=t(s.z,h.z,l.z,c.z,o,n,a),E},this.getControlPointsArray=function(){var e,t,i=this.points.length,r=[];for(e=0;e<i;e++)t=this.points[e],r[e]=[t.x,t.y,t.z];return r},this.getLength=function(e){var t,i,r,o=t=t=0,n=new THREE.Vector3,a=new THREE.Vector3,s=[],h=0;for(s[0]=0,e||(e=100),i=this.points.length*e,n.copy(this.points[0]),e=1;e<i;e++)t=e/i,r=this.getPoint(t),a.copy(r),h+=a.distanceTo(n),n.copy(r),t=(this.points.length-1)*t,(t=Math.floor(t))!=o&&(s[t]=h,o=t);return s[s.length]=h,{chunks:s,total:h}},this.reparametrizeByArcLength=function(e){var t,i,r,o,n,a,s=[],h=new THREE.Vector3,l=this.getLength();for(s.push(h.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(i=l.chunks[t]-l.chunks[t-1],a=Math.ceil(e*i/l.total),o=(t-1)/(this.points.length-1),n=t/(this.points.length-1),i=1;i<a-1;i++)r=o+i*(1/a)*(n-o),r=this.getPoint(r),s.push(h.copy(r).clone());s.push(h.copy(this.points[t]).clone())}this.points=s}},THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=new THREE.Object3D,THREE.Camera.prototype.constructor=THREE.Camera,THREE.Camera.prototype.lookAt=function(e){this.matrix.lookAt(this.position,e,this.up),this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)},THREE.OrthographicCamera=function(e,t,i,r,o,n){THREE.Camera.call(this),this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=void 0!==o?o:.1,this.far=void 0!==n?n:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=new THREE.Camera,THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera,THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.PerspectiveCamera=function(e,t,i,r){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==i?i:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=new THREE.Camera,THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera,THREE.PerspectiveCamera.prototype.setLens=function(e,t){this.fov=2*Math.atan((void 0!==t?t:24)/(2*e))*(180/Math.PI),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,i,r,o,n){this.fullWidth=e,this.fullHeight=t,this.x=i,this.y=r,this.width=o,this.height=n,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(this.fov*Math.PI/360)*this.near,i=e*(r=-t),r=(e=Math.abs(e*t-i),Math.abs(t-r));this.projectionMatrix.makeFrustum(i+this.x*e/this.fullWidth,i+(this.x+this.width)*e/this.fullWidth,t-(this.y+this.height)*r/this.fullHeight,t-this.y*r/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=new THREE.Object3D,THREE.Light.prototype.constructor=THREE.Light,THREE.Light.prototype.supr=THREE.Object3D.prototype,THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=new THREE.Light,THREE.AmbientLight.prototype.constructor=THREE.AmbientLight,THREE.DirectionalLight=function(e,t,i){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==i?i:0,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=new THREE.Light,THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight,THREE.PointLight=function(e,t,i){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,0,0),this.intensity=void 0!==t?t:1,this.distance=void 0!==i?i:0},THREE.PointLight.prototype=new THREE.Light,THREE.PointLight.prototype.constructor=THREE.PointLight,THREE.SpotLight=function(e,t,i,r,o){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==i?i:0,this.angle=void 0!==r?r:Math.PI/2,this.exponent=void 0!==o?o:10,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=new THREE.Light,THREE.SpotLight.prototype.constructor=THREE.SpotLight,THREE.Loader=function(e){this.statusDomElement=(this.showStatus=e)?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ";t=e.total?t+((100*e.loaded/e.total).toFixed(0)+"%"):t+((e.loaded/1e3).toFixed(2)+" KB");this.statusDomElement.innerHTML=t},extractUrlBase:function(e){return(e=e.split("/")).pop(),(e.length<1?".":e.join("/"))+"/"},initMaterials:function(e,t,i){e.materials=[];for(var r=0;r<t.length;++r)e.materials[r]=THREE.Loader.prototype.createMaterial(t[r],i)},hasNormals:function(e){var t,i=e.materials.length;for(t=0;t<i;t++)if(e.materials[t]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(e,t){function i(e){return e=Math.log(e)/Math.LN2,Math.floor(e)==e}function r(e){return e=Math.log(e)/Math.LN2,Math.pow(2,Math.round(e))}function o(e,t){var o=new Image;o.onload=function(){if(i(this.width)&&i(this.height))e.image=this;else{var t=r(this.width),o=r(this.height);e.image.width=t,e.image.height=o,e.image.getContext("2d").drawImage(this,0,0,t,o)}e.needsUpdate=!0},o.crossOrigin=s.crossOrigin,o.src=t}function n(e,i,r,n,a,s){var h=document.createElement("canvas");e[i]=new THREE.Texture(h),e[i].sourceFile=r,n&&(e[i].repeat.set(n[0],n[1]),1!=n[0]&&(e[i].wrapS=THREE.RepeatWrapping),1!=n[1]&&(e[i].wrapT=THREE.RepeatWrapping)),a&&e[i].offset.set(a[0],a[1]),s&&(void 0!==(n={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping})[s[0]]&&(e[i].wrapS=n[s[0]]),void 0!==n[s[1]]&&(e[i].wrapT=n[s[1]])),o(e[i],t+"/"+r)}function a(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var s=this,h="MeshLambertMaterial",l={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,wireframe:e.wireframe};if(e.shading){var c=e.shading.toLowerCase();"phong"===c?h="MeshPhongMaterial":"basic"===c&&(h="MeshBasicMaterial")}return void 0!==e.blending&&void 0!==THREE[e.blending]&&(l.blending=THREE[e.blending]),(void 0!==e.transparent||e.opacity<1)&&(l.transparent=e.transparent),void 0!==e.depthTest&&(l.depthTest=e.depthTest),void 0!==e.depthWrite&&(l.depthWrite=e.depthWrite),void 0!==e.vertexColors&&("face"==e.vertexColors?l.vertexColors=THREE.FaceColors:e.vertexColors&&(l.vertexColors=THREE.VertexColors)),e.colorDiffuse?l.color=a(e.colorDiffuse):e.DbgColor&&(l.color=e.DbgColor),e.colorSpecular&&(l.specular=a(e.colorSpecular)),e.colorAmbient&&(l.ambient=a(e.colorAmbient)),e.transparency&&(l.opacity=e.transparency),e.specularCoef&&(l.shininess=e.specularCoef),e.mapDiffuse&&t&&n(l,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap),e.mapLight&&t&&n(l,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap),e.mapNormal&&t&&n(l,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap),e.mapSpecular&&t&&n(l,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap),e.mapNormal?(h=THREE.ShaderUtils.lib.normal,(c=THREE.UniformsUtils.clone(h.uniforms)).tNormal.texture=l.normalMap,e.mapNormalFactor&&(c.uNormalScale.value=e.mapNormalFactor),l.map&&(c.tDiffuse.texture=l.map,c.enableDiffuse.value=!0),l.specularMap&&(c.tSpecular.texture=l.specularMap,c.enableSpecular.value=!0),l.lightMap&&(c.tAO.texture=l.lightMap,c.enableAO.value=!0),c.uDiffuseColor.value.setHex(l.color),c.uSpecularColor.value.setHex(l.specular),c.uAmbientColor.value.setHex(l.ambient),c.uShininess.value=l.shininess,void 0!==l.opacity&&(c.uOpacity.value=l.opacity),l=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:c,lights:!0,fog:!0})):l=new THREE[h](l),void 0!==e.DbgName&&(l.name=e.DbgName),l}},THREE.BinaryLoader=function(e){THREE.Loader.call(this,e)},THREE.BinaryLoader.prototype=new THREE.Loader,THREE.BinaryLoader.prototype.constructor=THREE.BinaryLoader,THREE.BinaryLoader.prototype.load=function(e,t,i,r){i=i||this.extractUrlBase(e),r=r||this.extractUrlBase(e);var o=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart(),this.loadAjaxJSON(this,e,t,i,r,o)},THREE.BinaryLoader.prototype.loadAjaxJSON=function(e,t,i,r,o,n){var a=new XMLHttpRequest;a.onreadystatechange=function(){if(4==a.readyState&&(200==a.status||0==a.status)){var t=JSON.parse(a.responseText);e.loadAjaxBuffers(t,i,o,r,n)}},a.open("GET",t,!0),a.overrideMimeType&&a.overrideMimeType("text/plain; charset=x-user-defined"),a.setRequestHeader("Content-Type","text/plain"),a.send(null)},THREE.BinaryLoader.prototype.loadAjaxBuffers=function(e,t,i,r,o){var n=new XMLHttpRequest,a=i+"/"+e.buffers,s=0;n.onreadystatechange=function(){4==n.readyState?(200==n.status||0==n.status)&&THREE.BinaryLoader.prototype.createBinModel(n.response,t,r,e.materials):3==n.readyState?o&&(0==s&&(s=n.getResponseHeader("Content-Length")),o({total:s,loaded:n.responseText.length})):2==n.readyState&&(s=n.getResponseHeader("Content-Length"))},n.open("GET",a,!0),n.responseType="arraybuffer",n.send(null)},THREE.BinaryLoader.prototype.createBinModel=function(e,t,i,r){var o=function(t){var i,o,n,a,s,h,l,c,f,E,u,p,d,m,g;function v(e){return e%4?4-e%4:0}function T(e,t){return new Uint8Array(e,t,1)[0]}function R(e,t){return new Uint32Array(e,t,1)[0]}function y(t,i){var r,o,n,a,s,h,l,c,f=new Uint32Array(e,i,3*t);for(r=0;r<t;r++){o=f[3*r],n=f[3*r+1],a=f[3*r+2],s=F[2*o],o=F[2*o+1],h=F[2*n],l=F[2*n+1],n=F[2*a],c=F[2*a+1],a=C.faceVertexUvs[0];var E=[];E.push(new THREE.UV(s,o)),E.push(new THREE.UV(h,l)),E.push(new THREE.UV(n,c)),a.push(E)}}function x(t,i){var r,o,n,a,s,h,l,c,f,E,u=new Uint32Array(e,i,4*t);for(r=0;r<t;r++){o=u[4*r],n=u[4*r+1],a=u[4*r+2],s=u[4*r+3],h=F[2*o],o=F[2*o+1],l=F[2*n],f=F[2*n+1],c=F[2*a],E=F[2*a+1],a=F[2*s],n=F[2*s+1],s=C.faceVertexUvs[0];var p=[];p.push(new THREE.UV(h,o)),p.push(new THREE.UV(l,f)),p.push(new THREE.UV(c,E)),p.push(new THREE.UV(a,n)),s.push(p)}}function H(t,i,r){i=new Uint32Array(e,i,3*t);var o,n,a,s,h=new Uint16Array(e,r,t);for(r=0;r<t;r++)o=i[3*r],n=i[3*r+1],a=i[3*r+2],s=h[r],C.faces.push(new THREE.Face3(o,n,a,null,null,s))}function b(t,i,r){i=new Uint32Array(e,i,4*t);var o,n,a,s,h,l=new Uint16Array(e,r,t);for(r=0;r<t;r++)o=i[4*r],n=i[4*r+1],a=i[4*r+2],s=i[4*r+3],h=l[r],C.faces.push(new THREE.Face4(o,n,a,s,null,null,h))}function w(t,i,r,o){i=new Uint32Array(e,i,3*t),r=new Uint32Array(e,r,3*t);var n,a,s,h,l,c,f,E=new Uint16Array(e,o,t);for(o=0;o<t;o++){n=i[3*o],a=i[3*o+1],s=i[3*o+2],l=r[3*o],c=r[3*o+1],f=r[3*o+2],h=E[o];var u=P[3*c],p=P[3*c+1];c=P[3*c+2];var d=P[3*f],m=P[3*f+1];f=P[3*f+2],C.faces.push(new THREE.Face3(n,a,s,[new THREE.Vector3(P[3*l],P[3*l+1],P[3*l+2]),new THREE.Vector3(u,p,c),new THREE.Vector3(d,m,f)],null,h))}}function _(t,i,r,o){i=new Uint32Array(e,i,4*t),r=new Uint32Array(e,r,4*t);var n,a,s,h,l,c,f,E,u,p=new Uint16Array(e,o,t);for(o=0;o<t;o++){n=i[4*o],a=i[4*o+1],s=i[4*o+2],h=i[4*o+3],c=r[4*o],f=r[4*o+1],E=r[4*o+2],u=r[4*o+3],l=p[o];var d=P[3*f],m=P[3*f+1];f=P[3*f+2];var g=P[3*E],v=P[3*E+1];E=P[3*E+2];var T=P[3*u],R=P[3*u+1];u=P[3*u+2],C.faces.push(new THREE.Face4(n,a,s,h,[new THREE.Vector3(P[3*c],P[3*c+1],P[3*c+2]),new THREE.Vector3(d,m,f),new THREE.Vector3(g,v,E),new THREE.Vector3(T,R,u)],null,l))}}var S,M,A,C=this,L=0,P=[],F=[];THREE.Geometry.call(this),THREE.Loader.prototype.initMaterials(C,r,t),function(e,t,i){e=new Uint8Array(e,t,12);for(var r="",o=0;o<12;o++)r+=String.fromCharCode(e[t+o])}(e,L),i=T(e,L+12),T(e,L+13),T(e,L+14),T(e,L+15),o=T(e,L+16),n=T(e,L+17),a=T(e,L+18),s=T(e,L+19),h=R(e,L+20),l=R(e,L+20+4),c=R(e,L+20+8),t=R(e,L+20+12),f=R(e,L+20+16),E=R(e,L+20+20),u=R(e,L+20+24),p=R(e,L+20+28),d=R(e,L+20+32),m=R(e,L+20+36),g=R(e,L+20+40),L+=i,A=4*o+s,S=t*(i=3*o+s),M=f*(i+3*n),o=E*(i+3*a),s=u*(i+3*n+3*a),i=p*A,n=d*(A+4*n),a=m*(A+4*a),L+=function(t){var i,r,o,n;t=new Float32Array(e,t,3*h);for(i=0;i<h;i++)r=t[3*i],o=t[3*i+1],n=t[3*i+2],C.vertices.push(new THREE.Vector3(r,o,n));return 3*h*Float32Array.BYTES_PER_ELEMENT}(L),L+=function(t){if(l){var i,r,o,n;t=new Int8Array(e,t,3*l);for(i=0;i<l;i++)r=t[3*i],o=t[3*i+1],n=t[3*i+2],P.push(r/127,o/127,n/127)}return 3*l*Int8Array.BYTES_PER_ELEMENT}(L),L+=v(3*l),L+=function(t){if(c){var i,r,o;t=new Float32Array(e,t,2*c);for(i=0;i<c;i++)r=t[2*i],o=t[2*i+1],F.push(r,o)}return 2*c*Float32Array.BYTES_PER_ELEMENT}(L),a=(n=(i=(s=(o=(M=(S=L+S+v(2*t))+M+v(2*f))+o+v(2*E))+s+v(2*u))+i+v(2*p))+n+v(2*d))+a+v(2*m),function(e){if(E){var t=e+E*Uint32Array.BYTES_PER_ELEMENT*3;H(E,e,t+E*Uint32Array.BYTES_PER_ELEMENT*3),y(E,t)}}(M),function(e){if(u){var t=e+u*Uint32Array.BYTES_PER_ELEMENT*3,i=t+u*Uint32Array.BYTES_PER_ELEMENT*3;w(u,e,t,i+u*Uint32Array.BYTES_PER_ELEMENT*3),y(u,i)}}(o),function(e){if(m){var t=e+m*Uint32Array.BYTES_PER_ELEMENT*4;b(m,e,t+m*Uint32Array.BYTES_PER_ELEMENT*4),x(m,t)}}(n),function(e){if(g){var t=e+g*Uint32Array.BYTES_PER_ELEMENT*4,i=t+g*Uint32Array.BYTES_PER_ELEMENT*4;_(g,e,t,i+g*Uint32Array.BYTES_PER_ELEMENT*4),x(g,i)}}(a),t&&H(t,L,L+t*Uint32Array.BYTES_PER_ELEMENT*3),function(e){if(f){var t=e+f*Uint32Array.BYTES_PER_ELEMENT*3;w(f,e,t,t+f*Uint32Array.BYTES_PER_ELEMENT*3)}}(S),p&&b(p,s,s+p*Uint32Array.BYTES_PER_ELEMENT*4),function(e){if(d){var t=e+d*Uint32Array.BYTES_PER_ELEMENT*4;_(d,e,t,t+d*Uint32Array.BYTES_PER_ELEMENT*4)}}(i),this.computeCentroids(),this.computeFaceNormals(),THREE.Loader.prototype.hasNormals(this)&&this.computeTangents()};(o.prototype=new THREE.Geometry).constructor=o,t(new o(i))},THREE.JSONLoader=function(e){THREE.Loader.call(this,e)},THREE.JSONLoader.prototype=new THREE.Loader,THREE.JSONLoader.prototype.constructor=THREE.JSONLoader,THREE.JSONLoader.prototype.load=function(e,t,i){i=i||this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,i)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,i,r,o){var n=new XMLHttpRequest,a=0;n.onreadystatechange=function(){if(n.readyState===n.DONE){if(200===n.status||0===n.status){if(n.responseText){var t=JSON.parse(n.responseText);e.createModel(t,i,r)}e.onLoadComplete()}}else n.readyState===n.LOADING?o&&(0===a&&(a=n.getResponseHeader("Content-Length")),o({total:a,loaded:n.responseText.length})):n.readyState===n.HEADERS_RECEIVED&&(a=n.getResponseHeader("Content-Length"))},n.open("GET",t,!0),n.overrideMimeType&&n.overrideMimeType("text/plain; charset=x-user-defined"),n.setRequestHeader("Content-Type","text/plain"),n.send(null)},THREE.JSONLoader.prototype.createModel=function(e,t,i){var r=new THREE.Geometry,o=void 0!==e.scale?1/e.scale:1;this.initMaterials(r,e.materials,i),function(t){var i,o,n,a,s,h,l,c,f,E,u,p,d,m,g=e.faces;h=e.vertices;var v=e.normals,T=e.colors,R=0;for(i=0;i<e.uvs.length;i++)e.uvs[i].length&&R++;for(i=0;i<R;i++)r.faceUvs[i]=[],r.faceVertexUvs[i]=[];for(a=0,s=h.length;a<s;)(l=new THREE.Vector3).x=h[a++]*t,l.y=h[a++]*t,l.z=h[a++]*t,r.vertices.push(l);for(a=0,s=g.length;a<s;){if(h=1&(t=g[a++]),n=2&t,i=4&t,o=8&t,c=16&t,l=32&t,E=64&t,t&=128,h?((u=new THREE.Face4).a=g[a++],u.b=g[a++],u.c=g[a++],u.d=g[a++],h=4):((u=new THREE.Face3).a=g[a++],u.b=g[a++],u.c=g[a++],h=3),n&&(n=g[a++],u.materialIndex=n),n=r.faces.length,i)for(i=0;i<R;i++)m=(p=e.uvs[i])[2*(f=g[a++])],f=p[2*f+1],r.faceUvs[i][n]=new THREE.UV(m,f);if(o)for(i=0;i<R;i++){for(p=e.uvs[i],d=[],o=0;o<h;o++)m=p[2*(f=g[a++])],f=p[2*f+1],d[o]=new THREE.UV(m,f);r.faceVertexUvs[i][n]=d}if(c&&(c=3*g[a++],(o=new THREE.Vector3).x=v[c++],o.y=v[c++],o.z=v[c],u.normal=o),l)for(i=0;i<h;i++)c=3*g[a++],(o=new THREE.Vector3).x=v[c++],o.y=v[c++],o.z=v[c],u.vertexNormals.push(o);if(E&&(l=g[a++],l=new THREE.Color(T[l]),u.color=l),t)for(i=0;i<h;i++)l=g[a++],l=new THREE.Color(T[l]),u.vertexColors.push(l);r.faces.push(u)}}(o),function(){var t,i,o,n;if(e.skinWeights)for(t=0,i=e.skinWeights.length;t<i;t+=2)o=e.skinWeights[t],n=e.skinWeights[t+1],r.skinWeights.push(new THREE.Vector4(o,n,0,0));if(e.skinIndices)for(t=0,i=e.skinIndices.length;t<i;t+=2)o=e.skinIndices[t],n=e.skinIndices[t+1],r.skinIndices.push(new THREE.Vector4(o,n,0,0));r.bones=e.bones,r.animation=e.animation}(),function(t){var i,o,n,a,s,h;if(void 0!==e.morphTargets)for(i=0,o=e.morphTargets.length;i<o;i++)for(r.morphTargets[i]={},r.morphTargets[i].name=e.morphTargets[i].name,r.morphTargets[i].vertices=[],s=r.morphTargets[i].vertices,n=0,a=(h=e.morphTargets[i].vertices).length;n<a;n+=3){var l=new THREE.Vector3;l.x=h[n]*t,l.y=h[n+1]*t,l.z=h[n+2]*t,s.push(l)}if(void 0!==e.morphColors)for(i=0,o=e.morphColors.length;i<o;i++)for(r.morphColors[i]={},r.morphColors[i].name=e.morphColors[i].name,r.morphColors[i].colors=[],a=r.morphColors[i].colors,t=0,n=(s=e.morphColors[i].colors).length;t<n;t+=3)(h=new THREE.Color(16755200)).setRGB(s[t],s[t+1],s[t+2]),a.push(h)}(o),r.computeCentroids(),r.computeFaceNormals(),this.hasNormals(r)&&r.computeTangents(),t(r)},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){}},THREE.SceneLoader.prototype.constructor=THREE.SceneLoader,THREE.SceneLoader.prototype.load=function(e,t){var i=this,r=new XMLHttpRequest;r.onreadystatechange=function(){if(4==r.readyState&&(200==r.status||0==r.status)){var o=JSON.parse(r.responseText);i.createScene(o,t,e)}},r.open("GET",e,!0),r.overrideMimeType&&r.overrideMimeType("text/plain; charset=x-user-defined"),r.setRequestHeader("Content-Type","text/plain"),r.send(null)},THREE.SceneLoader.prototype.createScene=function(e,t,i){function r(e,t){return"relativeToHTML"==t?e:B+"/"+e}function o(){var e;for(c in A.objects)D.objects[c]||(void 0!==(d=A.objects[c]).geometry?(w=D.geometries[d.geometry])&&(e=!1,(e=(_=D.materials[d.materials[0]])instanceof THREE.ShaderMaterial)&&w.computeTangents(),T=d.position,R=d.rotation,y=d.quaternion,x=d.scale,m=d.matrix,y=0,0==d.materials.length&&(_=new THREE.MeshFaceMaterial),d.materials.length>1&&(_=new THREE.MeshFaceMaterial),(e=new THREE.Mesh(w,_)).name=c,m?(e.matrixAutoUpdate=!1,e.matrix.set(m[0],m[1],m[2],m[3],m[4],m[5],m[6],m[7],m[8],m[9],m[10],m[11],m[12],m[13],m[14],m[15])):(e.position.set(T[0],T[1],T[2]),y?(e.quaternion.set(y[0],y[1],y[2],y[3]),e.useQuaternion=!0):e.rotation.set(R[0],R[1],R[2]),e.scale.set(x[0],x[1],x[2])),e.visible=d.visible,e.doubleSided=d.doubleSided,e.castShadow=d.castShadow,e.receiveShadow=d.receiveShadow,D.scene.add(e),D.objects[c]=e):(T=d.position,R=d.rotation,y=d.quaternion,x=d.scale,y=0,(e=new THREE.Object3D).name=c,e.position.set(T[0],T[1],T[2]),y?(e.quaternion.set(y[0],y[1],y[2],y[3]),e.useQuaternion=!0):e.rotation.set(R[0],R[1],R[2]),e.scale.set(x[0],x[1],x[2]),e.visible=void 0!==d.visible&&d.visible,D.scene.add(e),D.objects[c]=e,D.empties[c]=e))}function n(e){return function(t){D.geometries[e]=t,o(),L-=1,V.onLoadComplete(),s()}}function a(e){return function(t){D.geometries[e]=t}}function s(){V.callbackProgress({totalModels:F,totalTextures:U,loadedModels:F-L,loadedTextures:U-P},D),V.onLoadProgress(),0==L&&0==P&&t(D)}var h,l,c,f,E,u,p,d,m,g,v,T,R,y,x,H,b,w,_,S,M,A,C,L,P,F,U,D,V=this,B=THREE.Loader.prototype.extractUrlBase(i);for(E in A=e,i=new THREE.BinaryLoader,C=new THREE.JSONLoader,P=L=0,D={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}},A.transform&&(e=A.transform.position,g=A.transform.rotation,H=A.transform.scale,e&&D.scene.position.set(e[0],e[1],e[2]),g&&D.scene.rotation.set(g[0],g[1],g[2]),H&&D.scene.scale.set(H[0],H[1],H[2]),(e||g||H)&&(D.scene.updateMatrix(),D.scene.updateMatrixWorld())),e=function(){P-=1,s(),V.onLoadComplete()},A.cameras)"perspective"==(H=A.cameras[E]).type?S=new THREE.PerspectiveCamera(H.fov,H.aspect,H.near,H.far):"ortho"==H.type&&(S=new THREE.OrthographicCamera(H.left,H.right,H.top,H.bottom,H.near,H.far)),T=H.position,g=H.target,H=H.up,S.position.set(T[0],T[1],T[2]),S.target=new THREE.Vector3(g[0],g[1],g[2]),H&&S.up.set(H[0],H[1],H[2]),D.cameras[E]=S;for(f in A.lights)E=void 0!==(g=A.lights[f]).color?g.color:16777215,S=void 0!==g.intensity?g.intensity:1,"directional"==g.type?(T=g.direction,(v=new THREE.DirectionalLight(E,S)).position.set(T[0],T[1],T[2]),v.position.normalize()):"point"==g.type?(T=g.position,v=g.distance,(v=new THREE.PointLight(E,S,v)).position.set(T[0],T[1],T[2])):"ambient"==g.type&&(v=new THREE.AmbientLight(E)),D.scene.add(v),D.lights[f]=v;for(u in A.fogs)"linear"==(f=A.fogs[u]).type?M=new THREE.Fog(0,f.near,f.far):"exp2"==f.type&&(M=new THREE.FogExp2(0,f.density)),H=f.color,M.color.setRGB(H[0],H[1],H[2]),D.fogs[u]=M;for(h in D.cameras&&A.defaults.camera&&(D.currentCamera=D.cameras[A.defaults.camera]),D.fogs&&A.defaults.fog&&(D.scene.fog=D.fogs[A.defaults.fog]),H=A.defaults.bgcolor,D.bgColor=new THREE.Color,D.bgColor.setRGB(H[0],H[1],H[2]),D.bgColorAlpha=A.defaults.bgalpha,A.geometries)"bin_mesh"!=(u=A.geometries[h]).type&&"ascii_mesh"!=u.type||(L+=1,V.onLoadStart());for(h in F=L,A.geometries)"cube"==(u=A.geometries[h]).type?(w=new THREE.CubeGeometry(u.width,u.height,u.depth,u.segmentsWidth,u.segmentsHeight,u.segmentsDepth,null,u.flipped,u.sides),D.geometries[h]=w):"plane"==u.type?(w=new THREE.PlaneGeometry(u.width,u.height,u.segmentsWidth,u.segmentsHeight),D.geometries[h]=w):"sphere"==u.type?(w=new THREE.SphereGeometry(u.radius,u.segmentsWidth,u.segmentsHeight),D.geometries[h]=w):"cylinder"==u.type?(w=new THREE.CylinderGeometry(u.topRad,u.botRad,u.height,u.radSegs,u.heightSegs),D.geometries[h]=w):"torus"==u.type?(w=new THREE.TorusGeometry(u.radius,u.tube,u.segmentsR,u.segmentsT),D.geometries[h]=w):"icosahedron"==u.type?(w=new THREE.IcosahedronGeometry(u.radius,u.subdivisions),D.geometries[h]=w):"bin_mesh"==u.type?i.load(r(u.url,A.urlBaseType),n(h)):"ascii_mesh"==u.type?C.load(r(u.url,A.urlBaseType),n(h)):"embedded_mesh"==u.type&&((u=A.embeds[u.id]).metadata=A.metadata,u&&C.createModel(u,a(h),""));for(p in A.textures)if((h=A.textures[p]).url instanceof Array)for(P+=h.url.length,u=0;u<h.url.length;u++)V.onLoadStart();else P+=1,V.onLoadStart();for(p in U=P,A.textures){if(null!=(h=A.textures[p]).mapping&&null!=THREE[h.mapping]&&(h.mapping=new THREE[h.mapping]),h.url instanceof Array){for(u=[],M=0;M<h.url.length;M++)u[M]=r(h.url[M],A.urlBaseType);u=THREE.ImageUtils.loadTextureCube(u,h.mapping,e)}else u=THREE.ImageUtils.loadTexture(r(h.url,A.urlBaseType),h.mapping,e),null!=THREE[h.minFilter]&&(u.minFilter=THREE[h.minFilter]),null!=THREE[h.magFilter]&&(u.magFilter=THREE[h.magFilter]),h.repeat&&(u.repeat.set(h.repeat[0],h.repeat[1]),1!=h.repeat[0]&&(u.wrapS=THREE.RepeatWrapping),1!=h.repeat[1]&&(u.wrapT=THREE.RepeatWrapping)),h.offset&&u.offset.set(h.offset[0],h.offset[1]),h.wrap&&(void 0!==(M={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping})[h.wrap[0]]&&(u.wrapS=M[h.wrap[0]]),void 0!==M[h.wrap[1]]&&(u.wrapT=M[h.wrap[1]]));D.textures[p]=u}for(l in A.materials){for(b in(m=A.materials[l]).parameters)"envMap"==b||"map"==b||"lightMap"==b?m.parameters[b]=D.textures[m.parameters[b]]:"shading"==b?m.parameters[b]="flat"==m.parameters[b]?THREE.FlatShading:THREE.SmoothShading:"blending"==b?m.parameters[b]=THREE[m.parameters[b]]?THREE[m.parameters[b]]:THREE.NormalBlending:"combine"==b?m.parameters[b]="MixOperation"==m.parameters[b]?THREE.MixOperation:THREE.MultiplyOperation:"vertexColors"==b&&("face"==m.parameters[b]?m.parameters[b]=THREE.FaceColors:m.parameters[b]&&(m.parameters[b]=THREE.VertexColors));void 0!==m.parameters.opacity&&m.parameters.opacity<1&&(m.parameters.transparent=!0),m.parameters.normalMap?(p=THREE.ShaderUtils.lib.normal,e=THREE.UniformsUtils.clone(p.uniforms),h=m.parameters.color,u=m.parameters.specular,M=m.parameters.ambient,i=m.parameters.shininess,e.tNormal.texture=D.textures[m.parameters.normalMap],m.parameters.normalMapFactor&&(e.uNormalScale.value=m.parameters.normalMapFactor),m.parameters.map&&(e.tDiffuse.texture=m.parameters.map,e.enableDiffuse.value=!0),m.parameters.lightMap&&(e.tAO.texture=m.parameters.lightMap,e.enableAO.value=!0),m.parameters.specularMap&&(e.tSpecular.texture=D.textures[m.parameters.specularMap],e.enableSpecular.value=!0),e.uDiffuseColor.value.setHex(h),e.uSpecularColor.value.setHex(u),e.uAmbientColor.value.setHex(M),e.uShininess.value=i,m.parameters.opacity&&(e.uOpacity.value=m.parameters.opacity),_=new THREE.ShaderMaterial({fragmentShader:p.fragmentShader,vertexShader:p.vertexShader,uniforms:e,lights:!0,fog:!0})):_=new THREE[m.type](m.parameters),D.materials[l]=_}o(),V.callbackSync(D),s()},THREE.Material=function(e){e=e||{},this.id=THREE.MaterialCount++,this.name="",this.opacity=void 0!==e.opacity?e.opacity:1,this.transparent=void 0!==e.transparent&&e.transparent,this.blending=void 0!==e.blending?e.blending:THREE.NormalBlending,this.blendSrc=void 0!==e.blendSrc?e.blendSrc:THREE.SrcAlphaFactor,this.blendDst=void 0!==e.blendDst?e.blendDst:THREE.OneMinusSrcAlphaFactor,this.blendEquation=void 0!==e.blendEquation?e.blendEquation:THREE.AddEquation,this.depthTest=void 0===e.depthTest||e.depthTest,this.depthWrite=void 0===e.depthWrite||e.depthWrite,this.polygonOffset=void 0!==e.polygonOffset&&e.polygonOffset,this.polygonOffsetFactor=void 0!==e.polygonOffsetFactor?e.polygonOffsetFactor:0,this.polygonOffsetUnits=void 0!==e.polygonOffsetUnits?e.polygonOffsetUnits:0,this.alphaTest=void 0!==e.alphaTest?e.alphaTest:0,this.overdraw=void 0!==e.overdraw&&e.overdraw,this.needsUpdate=this.visible=!0},THREE.MaterialCount=0,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.AdditiveAlphaBlending=5,THREE.CustomBlending=6,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.LineBasicMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.color=void 0!==e.color?new THREE.Color(e.color):new THREE.Color(16777215),this.linewidth=void 0!==e.linewidth?e.linewidth:1,this.linecap=void 0!==e.linecap?e.linecap:"round",this.linejoin=void 0!==e.linejoin?e.linejoin:"round",this.vertexColors=!!e.vertexColors&&e.vertexColors,this.fog=void 0===e.fog||e.fog},THREE.LineBasicMaterial.prototype=new THREE.Material,THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial,THREE.MeshBasicMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.color=void 0!==e.color?new THREE.Color(e.color):new THREE.Color(16777215),this.map=void 0!==e.map?e.map:null,this.lightMap=void 0!==e.lightMap?e.lightMap:null,this.envMap=void 0!==e.envMap?e.envMap:null,this.combine=void 0!==e.combine?e.combine:THREE.MultiplyOperation,this.reflectivity=void 0!==e.reflectivity?e.reflectivity:1,this.refractionRatio=void 0!==e.refractionRatio?e.refractionRatio:.98,this.fog=void 0===e.fog||e.fog,this.shading=void 0!==e.shading?e.shading:THREE.SmoothShading,this.wireframe=void 0!==e.wireframe&&e.wireframe,this.wireframeLinewidth=void 0!==e.wireframeLinewidth?e.wireframeLinewidth:1,this.wireframeLinecap=void 0!==e.wireframeLinecap?e.wireframeLinecap:"round",this.wireframeLinejoin=void 0!==e.wireframeLinejoin?e.wireframeLinejoin:"round",this.vertexColors=void 0!==e.vertexColors?e.vertexColors:THREE.NoColors,this.skinning=void 0!==e.skinning&&e.skinning,this.morphTargets=void 0!==e.morphTargets&&e.morphTargets},THREE.MeshBasicMaterial.prototype=new THREE.Material,THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial,THREE.MeshLambertMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.color=void 0!==e.color?new THREE.Color(e.color):new THREE.Color(16777215),this.ambient=void 0!==e.ambient?new THREE.Color(e.ambient):new THREE.Color(16777215),this.emissive=void 0!==e.emissive?new THREE.Color(e.emissive):new THREE.Color(0),this.wrapAround=void 0!==e.wrapAround&&e.wrapAround,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=void 0!==e.map?e.map:null,this.lightMap=void 0!==e.lightMap?e.lightMap:null,this.envMap=void 0!==e.envMap?e.envMap:null,this.combine=void 0!==e.combine?e.combine:THREE.MultiplyOperation,this.reflectivity=void 0!==e.reflectivity?e.reflectivity:1,this.refractionRatio=void 0!==e.refractionRatio?e.refractionRatio:.98,this.fog=void 0===e.fog||e.fog,this.shading=void 0!==e.shading?e.shading:THREE.SmoothShading,this.wireframe=void 0!==e.wireframe&&e.wireframe,this.wireframeLinewidth=void 0!==e.wireframeLinewidth?e.wireframeLinewidth:1,this.wireframeLinecap=void 0!==e.wireframeLinecap?e.wireframeLinecap:"round",this.wireframeLinejoin=void 0!==e.wireframeLinejoin?e.wireframeLinejoin:"round",this.vertexColors=void 0!==e.vertexColors?e.vertexColors:THREE.NoColors,this.skinning=void 0!==e.skinning&&e.skinning,this.morphTargets=void 0!==e.morphTargets&&e.morphTargets,this.morphNormals=void 0!==e.morphNormals&&e.morphNormals},THREE.MeshLambertMaterial.prototype=new THREE.Material,THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial,THREE.MeshPhongMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.color=void 0!==e.color?new THREE.Color(e.color):new THREE.Color(16777215),this.ambient=void 0!==e.ambient?new THREE.Color(e.ambient):new THREE.Color(16777215),this.emissive=void 0!==e.emissive?new THREE.Color(e.emissive):new THREE.Color(0),this.specular=void 0!==e.specular?new THREE.Color(e.specular):new THREE.Color(1118481),this.shininess=void 0!==e.shininess?e.shininess:30,this.metal=void 0!==e.metal&&e.metal,this.perPixel=void 0!==e.perPixel&&e.perPixel,this.wrapAround=void 0!==e.wrapAround&&e.wrapAround,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=void 0!==e.map?e.map:null,this.lightMap=void 0!==e.lightMap?e.lightMap:null,this.envMap=void 0!==e.envMap?e.envMap:null,this.combine=void 0!==e.combine?e.combine:THREE.MultiplyOperation,this.reflectivity=void 0!==e.reflectivity?e.reflectivity:1,this.refractionRatio=void 0!==e.refractionRatio?e.refractionRatio:.98,this.fog=void 0===e.fog||e.fog,this.shading=void 0!==e.shading?e.shading:THREE.SmoothShading,this.wireframe=void 0!==e.wireframe&&e.wireframe,this.wireframeLinewidth=void 0!==e.wireframeLinewidth?e.wireframeLinewidth:1,this.wireframeLinecap=void 0!==e.wireframeLinecap?e.wireframeLinecap:"round",this.wireframeLinejoin=void 0!==e.wireframeLinejoin?e.wireframeLinejoin:"round",this.vertexColors=void 0!==e.vertexColors?e.vertexColors:THREE.NoColors,this.skinning=void 0!==e.skinning&&e.skinning,this.morphTargets=void 0!==e.morphTargets&&e.morphTargets,this.morphNormals=void 0!==e.morphNormals&&e.morphNormals},THREE.MeshPhongMaterial.prototype=new THREE.Material,THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial,THREE.MeshDepthMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.shading=void 0!==e.shading?e.shading:THREE.SmoothShading,this.wireframe=void 0!==e.wireframe&&e.wireframe,this.wireframeLinewidth=void 0!==e.wireframeLinewidth?e.wireframeLinewidth:1},THREE.MeshDepthMaterial.prototype=new THREE.Material,THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial,THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.shading=e.shading?e.shading:THREE.FlatShading,this.wireframe=!!e.wireframe&&e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth?e.wireframeLinewidth:1},THREE.MeshNormalMaterial.prototype=new THREE.Material,THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial,THREE.MeshFaceMaterial=function(){},THREE.ParticleBasicMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.color=void 0!==e.color?new THREE.Color(e.color):new THREE.Color(16777215),this.map=void 0!==e.map?e.map:null,this.size=void 0!==e.size?e.size:1,this.sizeAttenuation=void 0===e.sizeAttenuation||e.sizeAttenuation,this.vertexColors=void 0!==e.vertexColors&&e.vertexColors,this.fog=void 0===e.fog||e.fog},THREE.ParticleBasicMaterial.prototype=new THREE.Material,THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial,THREE.ParticleCanvasMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.color=void 0!==e.color?new THREE.Color(e.color):new THREE.Color(16777215),this.program=void 0!==e.program?e.program:function(){}},THREE.ParticleCanvasMaterial.prototype=new THREE.Material,THREE.ParticleCanvasMaterial.prototype.constructor=THREE.ParticleCanvasMaterial,THREE.ParticleDOMMaterial=function(e){THREE.Material.call(this),this.domElement=e},THREE.ShaderMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.fragmentShader=void 0!==e.fragmentShader?e.fragmentShader:"void main() {}",this.vertexShader=void 0!==e.vertexShader?e.vertexShader:"void main() {}",this.uniforms=void 0!==e.uniforms?e.uniforms:{},this.attributes=e.attributes,this.shading=void 0!==e.shading?e.shading:THREE.SmoothShading,this.wireframe=void 0!==e.wireframe&&e.wireframe,this.wireframeLinewidth=void 0!==e.wireframeLinewidth?e.wireframeLinewidth:1,this.fog=void 0!==e.fog&&e.fog,this.lights=void 0!==e.lights&&e.lights,this.vertexColors=void 0!==e.vertexColors?e.vertexColors:THREE.NoColors,this.skinning=void 0!==e.skinning&&e.skinning,this.morphTargets=void 0!==e.morphTargets&&e.morphTargets,this.morphNormals=void 0!==e.morphNormals&&e.morphNormals},THREE.ShaderMaterial.prototype=new THREE.Material,THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial,THREE.Texture=function(e,t,i,r,o,n,a,s){this.id=THREE.TextureCount++,this.image=e,this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==i?i:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r?r:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==o?o:THREE.LinearFilter,this.minFilter=void 0!==n?n:THREE.LinearMipMapLinearFilter,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.needsUpdate=this.premultiplyAlpha=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var e=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter,this.format,this.type);return e.offset.copy(this.offset),e.repeat.copy(this.repeat),e}},THREE.TextureCount=0,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=0,THREE.ClampToEdgeWrapping=1,THREE.MirroredRepeatWrapping=2,THREE.NearestFilter=3,THREE.NearestMipMapNearestFilter=4,THREE.NearestMipMapLinearFilter=5,THREE.LinearFilter=6,THREE.LinearMipMapNearestFilter=7,THREE.LinearMipMapLinearFilter=8,THREE.ByteType=9,THREE.UnsignedByteType=10,THREE.ShortType=11,THREE.UnsignedShortType=12,THREE.IntType=13,THREE.UnsignedIntType=14,THREE.FloatType=15,THREE.AlphaFormat=16,THREE.RGBFormat=17,THREE.RGBAFormat=18,THREE.LuminanceFormat=19,THREE.LuminanceAlphaFormat=20,THREE.DataTexture=function(e,t,i,r,o,n,a,s,h,l){THREE.Texture.call(this,null,n,a,s,h,l,r,o),this.image={data:e,width:t,height:i}},THREE.DataTexture.prototype=new THREE.Texture,THREE.DataTexture.prototype.constructor=THREE.DataTexture,THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);return e.offset.copy(this.offset),e.repeat.copy(this.repeat),e},THREE.Particle=function(e){THREE.Object3D.call(this),this.material=e},THREE.Particle.prototype=new THREE.Object3D,THREE.Particle.prototype.constructor=THREE.Particle,THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=e.boundingSphere.radius),this.frustumCulled=!1},THREE.ParticleSystem.prototype=new THREE.Object3D,THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem,THREE.Line=function(e,t,i){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==i?i:THREE.LineStrip,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=new THREE.Object3D,THREE.Line.prototype.constructor=THREE.Line,THREE.Mesh=function(e,t){if(THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0}),this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=e.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var i=0;i<this.geometry.morphTargets.length;i++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[i].name]=i}},THREE.Mesh.prototype=new THREE.Object3D,THREE.Mesh.prototype.constructor=THREE.Mesh,THREE.Mesh.prototype.supr=THREE.Object3D.prototype,THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:0},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=new THREE.Object3D,THREE.Bone.prototype.constructor=THREE.Bone,THREE.Bone.prototype.supr=THREE.Object3D.prototype,THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiply(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);var i,r=this.children.length;for(i=0;i<r;i++)this.children[i].update(this.skinMatrix,t)},THREE.SkinnedMesh=function(e,t){var i,r,o,n,a,s;if(THREE.Mesh.call(this,e,t),this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[],void 0!==this.geometry.bones){for(i=0;i<this.geometry.bones.length;i++)n=(o=this.geometry.bones[i]).pos,a=o.rotq,s=o.scl,(r=this.addBone()).name=o.name,r.position.set(n[0],n[1],n[2]),r.quaternion.set(a[0],a[1],a[2],a[3]),r.useQuaternion=!0,void 0!==s?r.scale.set(s[0],s[1],s[2]):r.scale.set(1,1,1);for(i=0;i<this.bones.length;i++)o=this.geometry.bones[i],r=this.bones[i],-1===o.parent?this.add(r):this.bones[o.parent].add(r);this.boneMatrices=new Float32Array(16*this.bones.length),this.pose()}},THREE.SkinnedMesh.prototype=new THREE.Mesh,THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh,THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1);e=0;for(var t=this.children.length;e<t;e++){(i=this.children[e])instanceof THREE.Bone?i.update(this.identityMatrix,!1):i.updateMatrixWorld(!0)}t=this.bones.length;var i=this.bones,r=this.boneMatrices;for(e=0;e<t;e++)i[e].skinMatrix.flattenToArrayOffset(r,16*e)},THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var e,t=[],i=0;i<this.bones.length;i++){e=this.bones[i],(n=new THREE.Matrix4).getInverse(e.skinMatrix),t.push(n),e.skinMatrix.flattenToArrayOffset(this.boneMatrices,16*i)}if(void 0===this.geometry.skinVerticesA)for(this.geometry.skinVerticesA=[],this.geometry.skinVerticesB=[],e=0;e<this.geometry.skinIndices.length;e++){i=this.geometry.vertices[e];var r=this.geometry.skinIndices[e].x,o=this.geometry.skinIndices[e].y,n=new THREE.Vector3(i.x,i.y,i.z);this.geometry.skinVerticesA.push(t[r].multiplyVector3(n)),n=new THREE.Vector3(i.x,i.y,i.z),this.geometry.skinVerticesB.push(t[o].multiplyVector3(n)),this.geometry.skinWeights[e].x+this.geometry.skinWeights[e].y!==1&&(i=.5*(1-(this.geometry.skinWeights[e].x+this.geometry.skinWeights[e].y)),this.geometry.skinWeights[e].x=this.geometry.skinWeights[e].x+i,this.geometry.skinWeights[e].y=this.geometry.skinWeights[e].y+i)}},THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.currentKeyframe=this.lastKeyframe=this.time=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=new THREE.Mesh,THREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh,THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,i=e.animations,r=/([a-z]+)(\d+)/,o=0,n=e.morphTargets.length;o<n;o++){var a=e.morphTargets[o].name.match(r);if(a&&a.length>1){i[a=a[1]]||(i[a]={start:1/0,end:-1/0});var s=i[a];o<s.start&&(s.start=o),o>s.end&&(s.end=o),t||(t=a)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,i){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:i}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var i=this.geometry.animations[e];i&&(this.setFrameRange(i.start,i.end),this.duration=(i.end-i.start)/t*1e3,this.time=0)},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time=this.time+this.direction*e,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction=-1*this.direction,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time=this.time+this.duration)),(e=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1))!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[e]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=e),t=this.time%t/t,this.directionBackwards&&(t=1-t),this.morphTargetInfluences[this.currentKeyframe]=t,this.morphTargetInfluences[this.lastKeyframe]=1-t},THREE.Ribbon=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=t},THREE.Ribbon.prototype=new THREE.Object3D,THREE.Ribbon.prototype.constructor=THREE.Ribbon,THREE.LOD=function(){THREE.Object3D.call(this),this.LODs=[]},THREE.LOD.prototype=new THREE.Object3D,THREE.LOD.prototype.constructor=THREE.LOD,THREE.LOD.prototype.supr=THREE.Object3D.prototype,THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0);t=Math.abs(t);for(var i=0;i<this.LODs.length&&!(t<this.LODs[i].visibleAtDistance);i++);this.LODs.splice(i,0,{visibleAtDistance:t,object3D:e}),this.add(e)},THREE.LOD.prototype.update=function(e){if(this.LODs.length>1){e.matrixWorldInverse.getInverse(e.matrixWorld),e=-((e=e.matrixWorldInverse).elements[2]*this.matrixWorld.elements[12]+e.elements[6]*this.matrixWorld.elements[13]+e.elements[10]*this.matrixWorld.elements[14]+e.elements[14]),this.LODs[0].object3D.visible=!0;for(var t=1;t<this.LODs.length&&e>=this.LODs[t].visibleAtDistance;t++)this.LODs[t-1].object3D.visible=!1,this.LODs[t].object3D.visible=!0;for(;t<this.LODs.length;t++)this.LODs[t].object3D.visible=!1}},THREE.Sprite=function(e){THREE.Object3D.call(this),this.color=void 0!==e.color?new THREE.Color(e.color):new THREE.Color(16777215),this.map=void 0!==e.map?e.map:new THREE.Texture,this.blending=void 0!==e.blending?e.blending:THREE.NormalBlending,this.blendSrc=void 0!==e.blendSrc?e.blendSrc:THREE.SrcAlphaFactor,this.blendDst=void 0!==e.blendDst?e.blendDst:THREE.OneMinusSrcAlphaFactor,this.blendEquation=void 0!==e.blendEquation?e.blendEquation:THREE.AddEquation,this.useScreenCoordinates=void 0===e.useScreenCoordinates||e.useScreenCoordinates,this.mergeWith3D=void 0!==e.mergeWith3D?e.mergeWith3D:!this.useScreenCoordinates,this.affectedByDistance=void 0!==e.affectedByDistance?e.affectedByDistance:!this.useScreenCoordinates,this.scaleByViewport=void 0!==e.scaleByViewport?e.scaleByViewport:!this.affectedByDistance,this.alignment=e.alignment instanceof THREE.Vector2?e.alignment:THREE.SpriteAlignment.center,this.rotation3d=this.rotation,this.rotation=0,this.opacity=1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1)},THREE.Sprite.prototype=new THREE.Object3D,THREE.Sprite.prototype.constructor=THREE.Sprite,THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position),this.rotation3d.set(0,0,this.rotation),this.matrix.setRotationFromEuler(this.rotation3d),1===this.scale.x&&1===this.scale.y||(this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y)),this.matrixWorldNeedsUpdate=!0},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Scene=function(){THREE.Object3D.call(this),this.overrideMaterial=this.fog=null,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=new THREE.Object3D,THREE.Scene.prototype.constructor=THREE.Scene,THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)&&-1===this.__objects.indexOf(e)){this.__objects.push(e),this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(t=0;t<e.children.length;t++)this.__addObject(e.children[t])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);-1!==t&&this.__lights.splice(t,1)}else e instanceof THREE.Camera||-1!==(t=this.__objects.indexOf(e))&&(this.__objects.splice(t,1),this.__objectsRemoved.push(e),-1!==(t=this.__objectsAdded.indexOf(e))&&this.__objectsAdded.splice(t,1));for(t=0;t<e.children.length;t++)this.__removeObject(e.children[t])},THREE.Fog=function(e,t,i){this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==i?i:1e3},THREE.FogExp2=function(e,t){this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.DOMRenderer=function(){var e,t,i,r,o,n=new THREE.Projector;o=function(e){for(var t=document.documentElement,i=0;i<e.length;i++)if("string"==typeof t.style[e[i]])return e[i];return null}(["transform","MozTransform","WebkitTransform","msTransform","OTransform"]),this.domElement=document.createElement("div"),this.setSize=function(e,t){i=e/2,r=t/2},this.render=function(a,s){var h,l,c,f,E,u;for(e=n.projectScene(a,s),h=0,l=(t=e.elements).length;h<l;h++)(c=t[h])instanceof THREE.RenderableParticle&&c.material instanceof THREE.ParticleDOMMaterial&&(f=c.material.domElement,E=c.x*i+i-(f.offsetWidth>>1),u=c.y*r+r-(f.offsetHeight>>1),f.style.left=E+"px",f.style.top=u+"px",f.style.zIndex=Math.abs(Math.floor((1-c.z)*s.far/s.near)),o&&(f.style[o]="scale("+c.scale.x*i+","+c.scale.y*r+")"))}},THREE.CanvasRenderer=function(e){function t(e){Q!=e&&(Y.globalAlpha=Q=e)}function i(e){if(Z!=e){switch(e){case THREE.NormalBlending:Y.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:Y.globalCompositeOperation="lighter"}Z=e}}function r(e){J!=e&&(Y.strokeStyle=J=e)}function o(e){$!=e&&(Y.fillStyle=$=e)}e=e||{};var n,a,s,h,l,c,f,E,u,p,d,m,g,v,T,R,y,x,H,b,w,_,S,M,A,C,L,P,F,U,D,V,B,z,N,k,O,I,W,G=this,j=new THREE.Projector,X=void 0!==e.canvas?e.canvas:document.createElement("canvas"),Y=X.getContext("2d"),q=new THREE.Color(0),K=0,Q=1,Z=0,J=null,$=null,ee=null,te=null,ie=null,re=new THREE.RenderableVertex,oe=new THREE.RenderableVertex,ne=new THREE.Color,ae=new THREE.Color,se=new THREE.Color,he=new THREE.Color,le=new THREE.Color,ce=[],fe=[],Ee=new THREE.Rectangle,ue=new THREE.Rectangle,pe=new THREE.Rectangle,de=!1,me=new THREE.Color,ge=new THREE.Color,ve=new THREE.Color,Te=new THREE.Vector3;e=16;(z=document.createElement("canvas")).width=z.height=2,(N=z.getContext("2d")).fillStyle="rgba(0,0,0,1)",N.fillRect(0,0,2,2),k=N.getImageData(0,0,2,2),O=k.data,(I=document.createElement("canvas")).width=I.height=e,(W=I.getContext("2d")).translate(-e/2,-e/2),W.scale(e,e),e--,this.domElement=X,this.sortElements=this.sortObjects=this.autoClear=!0,this.info={render:{vertices:0,faces:0}},this.setSize=function(e,t){h=e,l=t,c=Math.floor(h/2),f=Math.floor(l/2),X.width=h,X.height=l,Ee.set(-c,-f,c,f),ue.set(-c,-f,c,f),Q=1,Z=0,ie=te=ee=$=J=null},this.setClearColor=function(e,t){q.copy(e),K=void 0!==t?t:1,ue.set(-c,-f,c,f)},this.setClearColorHex=function(e,t){q.setHex(e),K=void 0!==t?t:1,ue.set(-c,-f,c,f)},this.clear=function(){Y.setTransform(1,0,0,-1,c,f),ue.isEmpty()||(ue.minSelf(Ee),ue.inflate(2),K<1&&Y.clearRect(Math.floor(ue.getX()),Math.floor(ue.getY()),Math.floor(ue.getWidth()),Math.floor(ue.getHeight())),K>0&&(i(THREE.NormalBlending),t(1),o("rgba("+Math.floor(255*q.r)+","+Math.floor(255*q.g)+","+Math.floor(255*q.b)+","+K+")"),Y.fillRect(Math.floor(ue.getX()),Math.floor(ue.getY()),Math.floor(ue.getWidth()),Math.floor(ue.getHeight()))),ue.empty())},this.render=function(e,h){function l(e,t,i,r){var o,n,a,s,h,l;for(o=0,n=e.length;o<n;o++)s=(a=e[o]).color,a instanceof THREE.DirectionalLight?(h=a.matrixWorld.getPosition(),(l=i.dot(h))<=0||(l*=a.intensity,r.r=r.r+s.r*l,r.g=r.g+s.g*l,r.b=r.b+s.b*l)):a instanceof THREE.PointLight&&(h=a.matrixWorld.getPosition(),(l=i.dot(Te.sub(h,t).normalize()))<=0||0!=(l*=0==a.distance?1:1-Math.min(t.distanceTo(h)/a.distance,1))&&(l*=a.intensity,r.r=r.r+s.r*l,r.g=r.g+s.g*l,r.b=r.b+s.b*l))}function X(e,n,a){var s,h,l,E,u,p;t(a.opacity),i(a.blending),a instanceof THREE.ParticleBasicMaterial?a.map&&(u=(E=a.map.image).width>>1,p=E.height>>1,s=(a=n.scale.x*c)*u,h=(l=n.scale.y*f)*p,pe.set(e.x-s,e.y-h,e.x+s,e.y+h),Ee.intersects(pe)&&(Y.save(),Y.translate(e.x,e.y),Y.rotate(-n.rotation),Y.scale(a,-l),Y.translate(-u,-p),Y.drawImage(E,0,0),Y.restore())):a instanceof THREE.ParticleCanvasMaterial&&(s=n.scale.x*c,h=n.scale.y*f,pe.set(e.x-s,e.y-h,e.x+s,e.y+h),Ee.intersects(pe)&&(r(a.color.getContextStyle()),o(a.color.getContextStyle()),Y.save(),Y.translate(e.x,e.y),Y.rotate(-n.rotation),Y.scale(s,h),a.program(Y),Y.restore()))}function q(e,o,n,a){t(a.opacity),i(a.blending),Y.beginPath(),Y.moveTo(e.positionScreen.x,e.positionScreen.y),Y.lineTo(o.positionScreen.x,o.positionScreen.y),Y.closePath(),a instanceof THREE.LineBasicMaterial&&(e=a.linewidth,ee!=e&&(Y.lineWidth=ee=e),e=a.linecap,te!=e&&(Y.lineCap=te=e),e=a.linejoin,ie!=e&&(Y.lineJoin=ie=e),r(a.color.getContextStyle()),Y.stroke(),pe.inflate(2*a.linewidth))}function K(e,r,o,n,a,c,f,E){G.info.render.vertices=G.info.render.vertices+3,G.info.render.faces++,t(E.opacity),i(E.blending),m=e.positionScreen.x,g=e.positionScreen.y,v=r.positionScreen.x,T=r.positionScreen.y,R=o.positionScreen.x,y=o.positionScreen.y,Z(m,g,v,T,R,y),E instanceof THREE.MeshBasicMaterial?E.map?E.map.mapping instanceof THREE.UVMapping&&(L=f.uvs[0],ye(m,g,v,T,R,y,L[n].u,L[n].v,L[a].u,L[a].v,L[c].u,L[c].v,E.map)):E.envMap?E.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(e=h.matrixWorldInverse,Te.copy(f.vertexNormalsWorld[n]),P=.5*(Te.x*e.elements[0]+Te.y*e.elements[4]+Te.z*e.elements[8])+.5,F=.5*-(Te.x*e.elements[1]+Te.y*e.elements[5]+Te.z*e.elements[9])+.5,Te.copy(f.vertexNormalsWorld[a]),U=.5*(Te.x*e.elements[0]+Te.y*e.elements[4]+Te.z*e.elements[8])+.5,D=.5*-(Te.x*e.elements[1]+Te.y*e.elements[5]+Te.z*e.elements[9])+.5,Te.copy(f.vertexNormalsWorld[c]),V=.5*(Te.x*e.elements[0]+Te.y*e.elements[4]+Te.z*e.elements[8])+.5,B=.5*-(Te.x*e.elements[1]+Te.y*e.elements[5]+Te.z*e.elements[9])+.5,ye(m,g,v,T,R,y,P,F,U,D,V,B,E.envMap)):E.wireframe?$(E.color,E.wireframeLinewidth,E.wireframeLinecap,E.wireframeLinejoin):Re(E.color):E instanceof THREE.MeshLambertMaterial?de?E.wireframe||E.shading!=THREE.SmoothShading||3!=f.vertexNormalsWorld.length?(ne.r=me.r,ne.g=me.g,ne.b=me.b,l(s,f.centroidWorld,f.normalWorld,ne),ne.r=Math.max(0,Math.min(E.color.r*ne.r,1)),ne.g=Math.max(0,Math.min(E.color.g*ne.g,1)),ne.b=Math.max(0,Math.min(E.color.b*ne.b,1)),E.wireframe?$(ne,E.wireframeLinewidth,E.wireframeLinecap,E.wireframeLinejoin):Re(ne)):(ae.r=se.r=he.r=me.r,ae.g=se.g=he.g=me.g,ae.b=se.b=he.b=me.b,l(s,f.v1.positionWorld,f.vertexNormalsWorld[0],ae),l(s,f.v2.positionWorld,f.vertexNormalsWorld[1],se),l(s,f.v3.positionWorld,f.vertexNormalsWorld[2],he),ae.r=Math.max(0,Math.min(E.color.r*ae.r,1)),ae.g=Math.max(0,Math.min(E.color.g*ae.g,1)),ae.b=Math.max(0,Math.min(E.color.b*ae.b,1)),se.r=Math.max(0,Math.min(E.color.r*se.r,1)),se.g=Math.max(0,Math.min(E.color.g*se.g,1)),se.b=Math.max(0,Math.min(E.color.b*se.b,1)),he.r=Math.max(0,Math.min(E.color.r*he.r,1)),he.g=Math.max(0,Math.min(E.color.g*he.g,1)),he.b=Math.max(0,Math.min(E.color.b*he.b,1)),le.r=.5*(se.r+he.r),le.g=.5*(se.g+he.g),le.b=.5*(se.b+he.b),C=He(ae,se,he,le),xe(m,g,v,T,R,y,0,0,1,0,0,1,C)):E.wireframe?$(E.color,E.wireframeLinewidth,E.wireframeLinecap,E.wireframeLinejoin):Re(E.color):E instanceof THREE.MeshDepthMaterial?(M=h.near,A=h.far,ae.r=ae.g=ae.b=1-be(e.positionScreen.z,M,A),se.r=se.g=se.b=1-be(r.positionScreen.z,M,A),he.r=he.g=he.b=1-be(o.positionScreen.z,M,A),le.r=.5*(se.r+he.r),le.g=.5*(se.g+he.g),le.b=.5*(se.b+he.b),C=He(ae,se,he,le),xe(m,g,v,T,R,y,0,0,1,0,0,1,C)):E instanceof THREE.MeshNormalMaterial&&(ne.r=we(f.normalWorld.x),ne.g=we(f.normalWorld.y),ne.b=we(f.normalWorld.z),E.wireframe?$(ne,E.wireframeLinewidth,E.wireframeLinecap,E.wireframeLinejoin):Re(ne))}function Q(e,r,o,n,a,c,f,E,u){G.info.render.vertices=G.info.render.vertices+4,G.info.render.faces++,t(E.opacity),i(E.blending),E.map||E.envMap?(K(e,r,n,0,1,3,f,E),K(a,o,c,1,2,3,f,E)):(m=e.positionScreen.x,g=e.positionScreen.y,v=r.positionScreen.x,T=r.positionScreen.y,R=o.positionScreen.x,y=o.positionScreen.y,x=n.positionScreen.x,H=n.positionScreen.y,b=a.positionScreen.x,w=a.positionScreen.y,_=c.positionScreen.x,S=c.positionScreen.y,E instanceof THREE.MeshBasicMaterial?(J(m,g,v,T,R,y,x,H),E.wireframe?$(E.color,E.wireframeLinewidth,E.wireframeLinecap,E.wireframeLinejoin):Re(E.color)):E instanceof THREE.MeshLambertMaterial?de?E.wireframe||E.shading!=THREE.SmoothShading||4!=f.vertexNormalsWorld.length?(ne.r=me.r,ne.g=me.g,ne.b=me.b,l(s,f.centroidWorld,f.normalWorld,ne),ne.r=Math.max(0,Math.min(E.color.r*ne.r,1)),ne.g=Math.max(0,Math.min(E.color.g*ne.g,1)),ne.b=Math.max(0,Math.min(E.color.b*ne.b,1)),J(m,g,v,T,R,y,x,H),E.wireframe?$(ne,E.wireframeLinewidth,E.wireframeLinecap,E.wireframeLinejoin):Re(ne)):(ae.r=se.r=he.r=le.r=me.r,ae.g=se.g=he.g=le.g=me.g,ae.b=se.b=he.b=le.b=me.b,l(s,f.v1.positionWorld,f.vertexNormalsWorld[0],ae),l(s,f.v2.positionWorld,f.vertexNormalsWorld[1],se),l(s,f.v4.positionWorld,f.vertexNormalsWorld[3],he),l(s,f.v3.positionWorld,f.vertexNormalsWorld[2],le),ae.r=Math.max(0,Math.min(E.color.r*ae.r,1)),ae.g=Math.max(0,Math.min(E.color.g*ae.g,1)),ae.b=Math.max(0,Math.min(E.color.b*ae.b,1)),se.r=Math.max(0,Math.min(E.color.r*se.r,1)),se.g=Math.max(0,Math.min(E.color.g*se.g,1)),se.b=Math.max(0,Math.min(E.color.b*se.b,1)),he.r=Math.max(0,Math.min(E.color.r*he.r,1)),he.g=Math.max(0,Math.min(E.color.g*he.g,1)),he.b=Math.max(0,Math.min(E.color.b*he.b,1)),le.r=Math.max(0,Math.min(E.color.r*le.r,1)),le.g=Math.max(0,Math.min(E.color.g*le.g,1)),le.b=Math.max(0,Math.min(E.color.b*le.b,1)),C=He(ae,se,he,le),Z(m,g,v,T,x,H),xe(m,g,v,T,x,H,0,0,1,0,0,1,C),Z(b,w,R,y,_,S),xe(b,w,R,y,_,S,1,0,1,1,0,1,C)):(J(m,g,v,T,R,y,x,H),E.wireframe?$(E.color,E.wireframeLinewidth,E.wireframeLinecap,E.wireframeLinejoin):Re(E.color)):E instanceof THREE.MeshNormalMaterial?(ne.r=we(f.normalWorld.x),ne.g=we(f.normalWorld.y),ne.b=we(f.normalWorld.z),J(m,g,v,T,R,y,x,H),E.wireframe?$(ne,E.wireframeLinewidth,E.wireframeLinecap,E.wireframeLinejoin):Re(ne)):E instanceof THREE.MeshDepthMaterial&&(M=h.near,A=h.far,ae.r=ae.g=ae.b=1-be(e.positionScreen.z,M,A),se.r=se.g=se.b=1-be(r.positionScreen.z,M,A),he.r=he.g=he.b=1-be(n.positionScreen.z,M,A),le.r=le.g=le.b=1-be(o.positionScreen.z,M,A),C=He(ae,se,he,le),Z(m,g,v,T,x,H),xe(m,g,v,T,x,H,0,0,1,0,0,1,C),Z(b,w,R,y,_,S),xe(b,w,R,y,_,S,1,0,1,1,0,1,C)))}function Z(e,t,i,r,o,n){Y.beginPath(),Y.moveTo(e,t),Y.lineTo(i,r),Y.lineTo(o,n),Y.lineTo(e,t),Y.closePath()}function J(e,t,i,r,o,n,a,s){Y.beginPath(),Y.moveTo(e,t),Y.lineTo(i,r),Y.lineTo(o,n),Y.lineTo(a,s),Y.lineTo(e,t),Y.closePath()}function $(e,t,i,o){ee!=t&&(Y.lineWidth=ee=t),te!=i&&(Y.lineCap=te=i),ie!=o&&(Y.lineJoin=ie=o),r(e.getContextStyle()),Y.stroke(),pe.inflate(2*t)}function Re(e){o(e.getContextStyle()),Y.fill()}function ye(e,t,i,r,n,a,s,h,l,c,f,E,u){if(0!=u.image.width){if(1==u.needsUpdate||null==ce[u.id]){var p=u.wrapS==THREE.RepeatWrapping,d=u.wrapT==THREE.RepeatWrapping;ce[u.id]=Y.createPattern(u.image,p&&d?"repeat":p&&!d?"repeat-x":!p&&d?"repeat-y":"no-repeat"),u.needsUpdate=!1}o(ce[u.id]);p=u.offset.x/u.repeat.x,d=u.offset.y/u.repeat.y;var m=u.image.width*u.repeat.x,g=u.image.height*u.repeat.y;i=i-e,r=r-t,n=n-e,a=a-t;0==(p=(l=(l+p)*m-(s=(s+p)*m))*(E=(E+d)*g-(h=(h+d)*g))-(f=(f+p)*m-s)*(c=(c+d)*g-h))?(void 0===fe[u.id]&&((t=document.createElement("canvas")).width=u.image.width,t.height=u.image.height,(t=t.getContext("2d")).drawImage(u.image,0,0),fe[u.id]=t.getImageData(0,0,u.image.width,u.image.height).data),t=fe[u.id],s=4*(Math.floor(s)+Math.floor(h)*u.image.width),ne.setRGB(t[s]/255,t[s+1]/255,t[s+2]/255),Re(ne)):(e=e-(u=(E*i-c*n)*(p=1/p))*s-(i=(l*n-f*i)*p)*h,s=t-(c=(E*r-c*a)*p)*s-(r=(l*a-f*r)*p)*h,Y.save(),Y.transform(u,c,i,r,e,s),Y.fill(),Y.restore())}}function xe(e,t,i,r,o,n,a,s,h,l,c,f,E){var u,p;u=E.width-1,e=e-(u=((f=f*(p=E.height-1)-(s*=p))*(i-=e)-(l=l*p-s)*(o-=e))*(p=1/((h=h*u-(a*=u))*f-(c=c*u-a)*l)))*a-(i=(h*o-c*i)*p)*s,t=t-(l=(f*(r-=t)-l*(n-=t))*p)*a-(r=(h*n-c*r)*p)*s,Y.save(),Y.transform(u,l,i,r,e,t),Y.clip(),Y.drawImage(E,0,0),Y.restore()}function He(e,t,i,r){var o=~~(255*e.r),n=~~(255*e.g),a=(e=~~(255*e.b),~~(255*t.r)),s=~~(255*t.g),h=(t=~~(255*t.b),~~(255*i.r)),l=~~(255*i.g),c=(i=~~(255*i.b),~~(255*r.r)),f=~~(255*r.g);r=~~(255*r.b);return O[0]=o<0?0:o>255?255:o,O[1]=n<0?0:n>255?255:n,O[2]=e<0?0:e>255?255:e,O[4]=a<0?0:a>255?255:a,O[5]=s<0?0:s>255?255:s,O[6]=t<0?0:t>255?255:t,O[8]=h<0?0:h>255?255:h,O[9]=l<0?0:l>255?255:l,O[10]=i<0?0:i>255?255:i,O[12]=c<0?0:c>255?255:c,O[13]=f<0?0:f>255?255:f,O[14]=r<0?0:r>255?255:r,N.putImageData(k,0,0),W.drawImage(z,0,0),I}function be(e,t,i){return(e=(e-t)/(i-t))*e*(3-2*e)}function we(e){return(e=.5*(e+1))<0?0:e>1?1:e}function _e(e,t){var i=t.x-e.x,r=t.y-e.y,o=i*i+r*r;0!=o&&(i*=o=1/Math.sqrt(o),r*=o,t.x=t.x+i,t.y=t.y+r,e.x=e.x-i,e.y=e.y-r)}var Se,Me,Ae,Ce;for(this.autoClear?this.clear():Y.setTransform(1,0,0,-1,c,f),G.info.render.vertices=0,G.info.render.faces=0,n=j.projectScene(e,h,this.sortElements),a=n.elements,s=n.lights,(de=s.length>0)&&function(e){var t,i,r,o;for(me.setRGB(0,0,0),ge.setRGB(0,0,0),ve.setRGB(0,0,0),t=0,i=e.length;t<i;t++)o=(r=e[t]).color,r instanceof THREE.AmbientLight?(me.r=me.r+o.r,me.g=me.g+o.g,me.b=me.b+o.b):r instanceof THREE.DirectionalLight?(ge.r=ge.r+o.r,ge.g=ge.g+o.g,ge.b=ge.b+o.b):r instanceof THREE.PointLight&&(ve.r=ve.r+o.r,ve.g=ve.g+o.g,ve.b=ve.b+o.b)}(s),Se=0,Me=a.length;Se<Me;Se++)void 0!==(Ce=(Ce=(Ae=a[Se]).material)instanceof THREE.MeshFaceMaterial?Ae.faceMaterial:Ce)&&!1!==Ce.visible&&(pe.empty(),Ae instanceof THREE.RenderableParticle?((E=Ae).x=E.x*c,E.y=E.y*f,X(E,Ae,Ce)):Ae instanceof THREE.RenderableLine?(E=Ae.v1,u=Ae.v2,E.positionScreen.x=E.positionScreen.x*c,E.positionScreen.y=E.positionScreen.y*f,u.positionScreen.x=u.positionScreen.x*c,u.positionScreen.y=u.positionScreen.y*f,pe.addPoint(E.positionScreen.x,E.positionScreen.y),pe.addPoint(u.positionScreen.x,u.positionScreen.y),Ee.intersects(pe)&&q(E,u,0,Ce)):Ae instanceof THREE.RenderableFace3?(E=Ae.v1,u=Ae.v2,p=Ae.v3,E.positionScreen.x=E.positionScreen.x*c,E.positionScreen.y=E.positionScreen.y*f,u.positionScreen.x=u.positionScreen.x*c,u.positionScreen.y=u.positionScreen.y*f,p.positionScreen.x=p.positionScreen.x*c,p.positionScreen.y=p.positionScreen.y*f,Ce.overdraw&&(_e(E.positionScreen,u.positionScreen),_e(u.positionScreen,p.positionScreen),_e(p.positionScreen,E.positionScreen)),pe.add3Points(E.positionScreen.x,E.positionScreen.y,u.positionScreen.x,u.positionScreen.y,p.positionScreen.x,p.positionScreen.y),Ee.intersects(pe)&&K(E,u,p,0,1,2,Ae,Ce)):Ae instanceof THREE.RenderableFace4&&(E=Ae.v1,u=Ae.v2,p=Ae.v3,d=Ae.v4,E.positionScreen.x=E.positionScreen.x*c,E.positionScreen.y=E.positionScreen.y*f,u.positionScreen.x=u.positionScreen.x*c,u.positionScreen.y=u.positionScreen.y*f,p.positionScreen.x=p.positionScreen.x*c,p.positionScreen.y=p.positionScreen.y*f,d.positionScreen.x=d.positionScreen.x*c,d.positionScreen.y=d.positionScreen.y*f,re.positionScreen.copy(u.positionScreen),oe.positionScreen.copy(d.positionScreen),Ce.overdraw&&(_e(E.positionScreen,u.positionScreen),_e(u.positionScreen,d.positionScreen),_e(d.positionScreen,E.positionScreen),_e(p.positionScreen,re.positionScreen),_e(p.positionScreen,oe.positionScreen)),pe.addPoint(E.positionScreen.x,E.positionScreen.y),pe.addPoint(u.positionScreen.x,u.positionScreen.y),pe.addPoint(p.positionScreen.x,p.positionScreen.y),pe.addPoint(d.positionScreen.x,d.positionScreen.y),Ee.intersects(pe)&&Q(E,u,p,d,re,oe,Ae,Ce)),ue.addRectangle(pe));Y.setTransform(1,0,0,1,0,0)}},THREE.SVGRenderer=function(){function e(e,t,i,r){var o,n,a,s,h,l;for(o=0,n=e.length;o<n;o++)s=(a=e[o]).color,a instanceof THREE.DirectionalLight?(h=a.matrixWorld.getPosition(),(l=i.dot(h))<=0||(l*=a.intensity,r.r=r.r+s.r*l,r.g=r.g+s.g*l,r.b=r.b+s.b*l)):a instanceof THREE.PointLight&&(h=a.matrixWorld.getPosition(),(l=i.dot(M.sub(h,t).normalize()))<=0||0!=(l*=0==a.distance?1:1-Math.min(t.distanceTo(h)/a.distance,1))&&(l*=a.intensity,r.r=r.r+s.r*l,r.g=r.g+s.g*l,r.b=r.b+s.b*l))}function t(e){return null==A[e]&&(A[e]=document.createElementNS("http://www.w3.org/2000/svg","path"),0==L&&A[e].setAttribute("shape-rendering","crispEdges")),A[e]}function i(e){return(e=.5*(e+1))<0?0:e>1?1:e}var r,o,n,a,s,h,l,c,f,E,u,p,d,m,g,v=this,T=new THREE.Projector,R=document.createElementNS("http://www.w3.org/2000/svg","svg"),y=new THREE.Rectangle,x=new THREE.Rectangle,H=!1,b=new THREE.Color,w=new THREE.Color,_=new THREE.Color,S=new THREE.Color,M=new THREE.Vector3,A=[],C=[],L=1;this.domElement=R,this.sortElements=this.sortObjects=this.autoClear=!0,this.info={render:{vertices:0,faces:0}},this.setQuality=function(e){switch(e){case"high":L=1;break;case"low":L=0}},this.setSize=function(e,t){h=(a=e)/2,l=(s=t)/2,R.setAttribute("viewBox",-h+" "+-l+" "+a+" "+s),R.setAttribute("width",a),R.setAttribute("height",s),y.set(-h,-l,h,l)},this.clear=function(){for(;R.childNodes.length>0;)R.removeChild(R.childNodes[0])},this.render=function(a,s){var M,A,P,F;if(this.autoClear&&this.clear(),v.info.render.vertices=0,v.info.render.faces=0,r=T.projectScene(a,s,this.sortElements),o=r.elements,n=r.lights,g=m=0,H=n.length>0)for(w.setRGB(0,0,0),_.setRGB(0,0,0),S.setRGB(0,0,0),M=0,A=n.length;M<A;M++)P=(F=n[M]).color,F instanceof THREE.AmbientLight?(w.r=w.r+P.r,w.g=w.g+P.g,w.b=w.b+P.b):F instanceof THREE.DirectionalLight?(_.r=_.r+P.r,_.g=_.g+P.g,_.b=_.b+P.b):F instanceof THREE.PointLight&&(S.r=S.r+P.r,S.g=S.g+P.g,S.b=S.b+P.b);for(M=0,A=o.length;M<A;M++)if(void 0!==(F=(F=(P=o[M]).material)instanceof THREE.MeshFaceMaterial?P.faceMaterial:F)&&!1!==F.visible)if(x.empty(),P instanceof THREE.RenderableParticle)(c=P).x=c.x*h,c.y=c.y*-l;else if(P instanceof THREE.RenderableLine){if(c=P.v1,f=P.v2,c.positionScreen.x=c.positionScreen.x*h,c.positionScreen.y=c.positionScreen.y*-l,f.positionScreen.x=f.positionScreen.x*h,f.positionScreen.y=f.positionScreen.y*-l,x.addPoint(c.positionScreen.x,c.positionScreen.y),x.addPoint(f.positionScreen.x,f.positionScreen.y),y.intersects(x)){P=c;var U=f,D=g++;null==C[D]&&(C[D]=document.createElementNS("http://www.w3.org/2000/svg","line"),0==L&&C[D].setAttribute("shape-rendering","crispEdges")),(d=C[D]).setAttribute("x1",P.positionScreen.x),d.setAttribute("y1",P.positionScreen.y),d.setAttribute("x2",U.positionScreen.x),d.setAttribute("y2",U.positionScreen.y),F instanceof THREE.LineBasicMaterial&&(d.setAttribute("style","fill: none; stroke: "+F.color.getContextStyle()+"; stroke-width: "+F.linewidth+"; stroke-opacity: "+F.opacity+"; stroke-linecap: "+F.linecap+"; stroke-linejoin: "+F.linejoin),R.appendChild(d))}}else if(P instanceof THREE.RenderableFace3){if(c=P.v1,f=P.v2,E=P.v3,c.positionScreen.x=c.positionScreen.x*h,c.positionScreen.y=c.positionScreen.y*-l,f.positionScreen.x=f.positionScreen.x*h,f.positionScreen.y=f.positionScreen.y*-l,E.positionScreen.x=E.positionScreen.x*h,E.positionScreen.y=E.positionScreen.y*-l,x.addPoint(c.positionScreen.x,c.positionScreen.y),x.addPoint(f.positionScreen.x,f.positionScreen.y),x.addPoint(E.positionScreen.x,E.positionScreen.y),y.intersects(x)){U=c,D=f;var V=E;v.info.render.vertices=v.info.render.vertices+3,v.info.render.faces++,(d=t(m++)).setAttribute("d","M "+U.positionScreen.x+" "+U.positionScreen.y+" L "+D.positionScreen.x+" "+D.positionScreen.y+" L "+V.positionScreen.x+","+V.positionScreen.y+"z"),F instanceof THREE.MeshBasicMaterial?b.copy(F.color):F instanceof THREE.MeshLambertMaterial?H?(b.r=w.r,b.g=w.g,b.b=w.b,e(n,P.centroidWorld,P.normalWorld,b),b.r=Math.max(0,Math.min(F.color.r*b.r,1)),b.g=Math.max(0,Math.min(F.color.g*b.g,1)),b.b=Math.max(0,Math.min(F.color.b*b.b,1))):b.copy(F.color):F instanceof THREE.MeshDepthMaterial?(p=1-F.__2near/(F.__farPlusNear-P.z*F.__farMinusNear),b.setRGB(p,p,p)):F instanceof THREE.MeshNormalMaterial&&b.setRGB(i(P.normalWorld.x),i(P.normalWorld.y),i(P.normalWorld.z)),F.wireframe?d.setAttribute("style","fill: none; stroke: "+b.getContextStyle()+"; stroke-width: "+F.wireframeLinewidth+"; stroke-opacity: "+F.opacity+"; stroke-linecap: "+F.wireframeLinecap+"; stroke-linejoin: "+F.wireframeLinejoin):d.setAttribute("style","fill: "+b.getContextStyle()+"; fill-opacity: "+F.opacity),R.appendChild(d)}}else if(P instanceof THREE.RenderableFace4&&(c=P.v1,f=P.v2,E=P.v3,u=P.v4,c.positionScreen.x=c.positionScreen.x*h,c.positionScreen.y=c.positionScreen.y*-l,f.positionScreen.x=f.positionScreen.x*h,f.positionScreen.y=f.positionScreen.y*-l,E.positionScreen.x=E.positionScreen.x*h,E.positionScreen.y=E.positionScreen.y*-l,u.positionScreen.x=u.positionScreen.x*h,u.positionScreen.y=u.positionScreen.y*-l,x.addPoint(c.positionScreen.x,c.positionScreen.y),x.addPoint(f.positionScreen.x,f.positionScreen.y),x.addPoint(E.positionScreen.x,E.positionScreen.y),x.addPoint(u.positionScreen.x,u.positionScreen.y),y.intersects(x))){U=c,D=f,V=E;var B=u;v.info.render.vertices=v.info.render.vertices+4,v.info.render.faces++,(d=t(m++)).setAttribute("d","M "+U.positionScreen.x+" "+U.positionScreen.y+" L "+D.positionScreen.x+" "+D.positionScreen.y+" L "+V.positionScreen.x+","+V.positionScreen.y+" L "+B.positionScreen.x+","+B.positionScreen.y+"z"),F instanceof THREE.MeshBasicMaterial?b.copy(F.color):F instanceof THREE.MeshLambertMaterial?H?(b.r=w.r,b.g=w.g,b.b=w.b,e(n,P.centroidWorld,P.normalWorld,b),b.r=Math.max(0,Math.min(F.color.r*b.r,1)),b.g=Math.max(0,Math.min(F.color.g*b.g,1)),b.b=Math.max(0,Math.min(F.color.b*b.b,1))):b.copy(F.color):F instanceof THREE.MeshDepthMaterial?(p=1-F.__2near/(F.__farPlusNear-P.z*F.__farMinusNear),b.setRGB(p,p,p)):F instanceof THREE.MeshNormalMaterial&&b.setRGB(i(P.normalWorld.x),i(P.normalWorld.y),i(P.normalWorld.z)),F.wireframe?d.setAttribute("style","fill: none; stroke: "+b.getContextStyle()+"; stroke-width: "+F.wireframeLinewidth+"; stroke-opacity: "+F.opacity+"; stroke-linecap: "+F.wireframeLinecap+"; stroke-linejoin: "+F.wireframeLinejoin):d.setAttribute("style","fill: "+b.getContextStyle()+"; fill-opacity: "+F.opacity),R.appendChild(d)}}},THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvWorldPosition = mPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * modelViewMatrix * gl_Position;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\nvec3 transformedNormal = normalMatrix * morphedNormal;\n#else\nvec3 transformedNormal = normalMatrix * normal;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n#ifdef USE_MORPHTARGETS\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( morphed, 1.0 );\n#else\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n#endif\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"},THREE.UniformsUtils={merge:function(e){var t,i,r,o={};for(t=0;t<e.length;t++)for(i in r=this.clone(e[t]))o[i]=r[i];return o},clone:function(e){var t,i,r,o={};for(t in e)for(i in o[t]={},e[t])r=e[t][i],o[t][i]=r instanceof THREE.Color||r instanceof THREE.Vector2||r instanceof THREE.Vector3||r instanceof THREE.Vector4||r instanceof THREE.Matrix4||r instanceof THREE.Texture?r.clone():r instanceof Array?r.slice():r;return o}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalMatrix * normal;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["varying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif",THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["varying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.morphnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}},THREE.WebGLRenderer=function(e){function t(e,t){var i=e.vertices.length,r=t.material;if(r.attributes)for(var o in void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]),r.attributes){var n=r.attributes[o];if(!n.__webglInitialized||n.createUniqueBuffers){n.__webglInitialized=!0;var a=1;"v2"===n.type?a=2:"v3"===n.type?a=3:"v4"===n.type?a=4:"c"===n.type&&(a=3),n.size=a,n.array=new Float32Array(i*a),n.buffer=F.createBuffer(),n.buffer.belongsToAttribute=o,n.needsUpdate=!0}e.__webglCustomAttributesList.push(n)}}function i(e,t){return!e.material||e.material instanceof THREE.MeshFaceMaterial?t.materialIndex>=0?e.geometry.materials[t.materialIndex]:void 0:e.material}function r(e){return!(e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial)&&(e&&void 0!==e.shading&&e.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading)}function o(e){return!!(e.map||e.lightMap||e instanceof THREE.ShaderMaterial)}function n(e,t,i){var r,o,n,a,s=e.vertices;a=s.length;var h=e.colors,l=h.length,c=e.__vertexArray,f=e.__colorArray,E=e.__sortArray,u=e.verticesNeedUpdate,p=e.colorsNeedUpdate,d=e.__webglCustomAttributesList;if(i.sortParticles){for(he.copy(se),he.multiplySelf(i.matrixWorld),r=0;r<a;r++)o=s[r],le.copy(o),he.multiplyVector3(le),E[r]=[le.z,r];for(E.sort((function(e,t){return t[0]-e[0]})),r=0;r<a;r++)o=s[E[r][1]],c[n=3*r]=o.x,c[n+1]=o.y,c[n+2]=o.z;for(r=0;r<l;r++)n=3*r,o=h[E[r][1]],f[n]=o.r,f[n+1]=o.g,f[n+2]=o.b;if(d)for(h=0,l=d.length;h<l;h++)if(void 0===(s=d[h]).boundTo||"vertices"===s.boundTo)if(n=0,o=s.value.length,1===s.size)for(r=0;r<o;r++)a=E[r][1],s.array[r]=s.value[a];else if(2===s.size)for(r=0;r<o;r++)a=E[r][1],a=s.value[a],s.array[n]=a.x,s.array[n+1]=a.y,n+=2;else if(3===s.size)if("c"===s.type)for(r=0;r<o;r++)a=E[r][1],a=s.value[a],s.array[n]=a.r,s.array[n+1]=a.g,s.array[n+2]=a.b,n+=3;else for(r=0;r<o;r++)a=E[r][1],a=s.value[a],s.array[n]=a.x,s.array[n+1]=a.y,s.array[n+2]=a.z,n+=3;else if(4===s.size)for(r=0;r<o;r++)a=E[r][1],a=s.value[a],s.array[n]=a.x,s.array[n+1]=a.y,s.array[n+2]=a.z,s.array[n+3]=a.w,n+=4}else{if(u)for(r=0;r<a;r++)o=s[r],c[n=3*r]=o.x,c[n+1]=o.y,c[n+2]=o.z;if(p)for(r=0;r<l;r++)o=h[r],f[n=3*r]=o.r,f[n+1]=o.g,f[n+2]=o.b;if(d)for(h=0,l=d.length;h<l;h++)if((s=d[h]).needsUpdate&&(void 0===s.boundTo||"vertices"===s.boundTo))if(o=s.value.length,n=0,1===s.size)for(r=0;r<o;r++)s.array[r]=s.value[r];else if(2===s.size)for(r=0;r<o;r++)a=s.value[r],s.array[n]=a.x,s.array[n+1]=a.y,n+=2;else if(3===s.size)if("c"===s.type)for(r=0;r<o;r++)a=s.value[r],s.array[n]=a.r,s.array[n+1]=a.g,s.array[n+2]=a.b,n+=3;else for(r=0;r<o;r++)a=s.value[r],s.array[n]=a.x,s.array[n+1]=a.y,s.array[n+2]=a.z,n+=3;else if(4===s.size)for(r=0;r<o;r++)a=s.value[r],s.array[n]=a.x,s.array[n+1]=a.y,s.array[n+2]=a.z,s.array[n+3]=a.w,n+=4}if((u||i.sortParticles)&&(F.bindBuffer(F.ARRAY_BUFFER,e.__webglVertexBuffer),F.bufferData(F.ARRAY_BUFFER,c,t)),(p||i.sortParticles)&&(F.bindBuffer(F.ARRAY_BUFFER,e.__webglColorBuffer),F.bufferData(F.ARRAY_BUFFER,f,t)),d)for(h=0,l=d.length;h<l;h++)((s=d[h]).needsUpdate||i.sortParticles)&&(F.bindBuffer(F.ARRAY_BUFFER,s.buffer),F.bufferData(F.ARRAY_BUFFER,s.array,t))}function a(e,t){return t.z-e.z}function s(e,t,i){if(e.length)for(var r=0,o=e.length;r<o;r++)k=V=null,z=N=W=I=K=q=G=-1,fe=!0,e[r].render(t,i,oe,ne),k=V=null,z=N=W=I=K=q=G=-1,fe=!0}function h(e,t,i,r,o,n,a,s){var h,l,c,f;t?(l=e.length-1,f=t=-1):(l=0,t=e.length,f=1);for(var E=l;E!==t;E+=f)if((h=e[E]).render){if(l=h.object,c=h.buffer,s)h=s;else{if(!(h=h[i]))continue;a&&U.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),U.setDepthTest(h.depthTest),U.setDepthWrite(h.depthWrite),g(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}U.setObjectFaces(l),c instanceof THREE.BufferGeometry?U.renderBufferDirect(r,o,n,h,c,l):U.renderBuffer(r,o,n,h,c,l)}}function l(e,t,i,r,o,n,a){for(var s,h,l=0,c=e.length;l<c;l++)if((h=(s=e[l]).object).visible){if(a)s=a;else{if(!(s=s[t]))continue;n&&U.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst),U.setDepthTest(s.depthTest),U.setDepthWrite(s.depthWrite),g(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits)}U.renderImmediateObject(i,r,o,s,h)}}function c(e,t,i){e.push({buffer:t,object:i,opaque:null,transparent:null})}function f(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function E(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function u(e,t){for(var i=e.length-1;i>=0;i--)e[i].object===t&&e.splice(i,1)}function p(e,t){for(var i=e.length-1;i>=0;i--)e[i]===t&&e.splice(i,1)}function d(e,t,i,r,o){if(r.program&&!r.needsUpdate||(U.initMaterial(r,t,i,o),r.needsUpdate=!1),r.morphTargets&&!o.__webglMorphTargetInfluences){o.__webglMorphTargetInfluences=new Float32Array(U.maxMorphTargets);for(var n=0,a=U.maxMorphTargets;n<a;n++)o.__webglMorphTargetInfluences[n]=0}var s=!1,h=(a=(n=r.program).uniforms,r.uniforms);if(n!==V&&(F.useProgram(n),V=n,s=!0),r.id!==z&&(z=r.id,s=!0),(s||e!==k)&&(F.uniformMatrix4fv(a.projectionMatrix,!1,e._projectionMatrixArray),e!==k&&(k=e)),s){if(i&&r.fog&&(h.fogColor.value=i.color,i instanceof THREE.Fog?(h.fogNear.value=i.near,h.fogFar.value=i.far):i instanceof THREE.FogExp2&&(h.fogDensity.value=i.density)),r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r.lights){if(fe){var l,c,f,E,u=0,p=0,d=0,m=Ee,g=m.directional.colors,v=m.directional.positions,R=m.point.colors,y=m.point.positions,b=m.point.distances,w=m.spot.colors,_=m.spot.positions,S=m.spot.distances,M=m.spot.directions,A=m.spot.angles,C=m.spot.exponents,L=0,P=0,D=0,B=E=0;for(i=B=0,s=t.length;i<s;i++)(l=t[i]).onlyShadow||(c=l.color,f=l.intensity,E=l.distance,l instanceof THREE.AmbientLight?U.gammaInput?(u+=c.r*c.r,p+=c.g*c.g,d+=c.b*c.b):(u+=c.r,p+=c.g,d+=c.b):l instanceof THREE.DirectionalLight?(E=3*L,U.gammaInput?(g[E]=c.r*c.r*f*f,g[E+1]=c.g*c.g*f*f,g[E+2]=c.b*c.b*f*f):(g[E]=c.r*f,g[E+1]=c.g*f,g[E+2]=c.b*f),ce.copy(l.matrixWorld.getPosition()),ce.subSelf(l.target.matrixWorld.getPosition()),ce.normalize(),v[E]=ce.x,v[E+1]=ce.y,v[E+2]=ce.z,L+=1):l instanceof THREE.PointLight?(B=3*P,U.gammaInput?(R[B]=c.r*c.r*f*f,R[B+1]=c.g*c.g*f*f,R[B+2]=c.b*c.b*f*f):(R[B]=c.r*f,R[B+1]=c.g*f,R[B+2]=c.b*f),c=l.matrixWorld.getPosition(),y[B]=c.x,y[B+1]=c.y,y[B+2]=c.z,b[P]=E,P+=1):l instanceof THREE.SpotLight&&(B=3*D,U.gammaInput?(w[B]=c.r*c.r*f*f,w[B+1]=c.g*c.g*f*f,w[B+2]=c.b*c.b*f*f):(w[B]=c.r*f,w[B+1]=c.g*f,w[B+2]=c.b*f),c=l.matrixWorld.getPosition(),_[B]=c.x,_[B+1]=c.y,_[B+2]=c.z,S[D]=E,ce.copy(c),ce.subSelf(l.target.matrixWorld.getPosition()),ce.normalize(),M[B]=ce.x,M[B+1]=ce.y,M[B+2]=ce.z,A[D]=Math.cos(l.angle),C[D]=l.exponent,D+=1));for(i=3*L,s=g.length;i<s;i++)g[i]=0;for(i=3*P,s=R.length;i<s;i++)R[i]=0;for(i=3*D,s=w.length;i<s;i++)w[i]=0;m.directional.length=L,m.point.length=P,m.spot.length=D,m.ambient[0]=u,m.ambient[1]=p,m.ambient[2]=d,fe=!1}i=Ee,h.ambientLightColor.value=i.ambient,h.directionalLightColor.value=i.directional.colors,h.directionalLightDirection.value=i.directional.positions,h.pointLightColor.value=i.point.colors,h.pointLightPosition.value=i.point.positions,h.pointLightDistance.value=i.point.distances,h.spotLightColor.value=i.spot.colors,h.spotLightPosition.value=i.spot.positions,h.spotLightDistance.value=i.spot.distances,h.spotLightDirection.value=i.spot.directions,h.spotLightAngle.value=i.spot.angles,h.spotLightExponent.value=i.spot.exponents}if((r instanceof THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial)&&(h.opacity.value=r.opacity,U.gammaInput?h.diffuse.value.copyGammaToLinear(r.color):h.diffuse.value=r.color,(h.map.texture=r.map)&&h.offsetRepeat.value.set(r.map.offset.x,r.map.offset.y,r.map.repeat.x,r.map.repeat.y),h.lightMap.texture=r.lightMap,h.envMap.texture=r.envMap,h.flipEnvMap.value=r.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,h.reflectivity.value=r.reflectivity,h.refractionRatio.value=r.refractionRatio,h.combine.value=r.combine,h.useRefract.value=r.envMap&&r.envMap.mapping instanceof THREE.CubeRefractionMapping),r instanceof THREE.LineBasicMaterial?(h.diffuse.value=r.color,h.opacity.value=r.opacity):r instanceof THREE.ParticleBasicMaterial?(h.psColor.value=r.color,h.opacity.value=r.opacity,h.size.value=r.size,h.scale.value=H.height/2,h.map.texture=r.map):r instanceof THREE.MeshPhongMaterial?(h.shininess.value=r.shininess,U.gammaInput?(h.ambient.value.copyGammaToLinear(r.ambient),h.emissive.value.copyGammaToLinear(r.emissive),h.specular.value.copyGammaToLinear(r.specular)):(h.ambient.value=r.ambient,h.emissive.value=r.emissive,h.specular.value=r.specular),r.wrapAround&&h.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshLambertMaterial?(U.gammaInput?(h.ambient.value.copyGammaToLinear(r.ambient),h.emissive.value.copyGammaToLinear(r.emissive)):(h.ambient.value=r.ambient,h.emissive.value=r.emissive),r.wrapAround&&h.wrapRGB.value.copy(r.wrapRGB)):r instanceof THREE.MeshDepthMaterial?(h.mNear.value=e.near,h.mFar.value=e.far,h.opacity.value=r.opacity):r instanceof THREE.MeshNormalMaterial&&(h.opacity.value=r.opacity),o.receiveShadow&&!r._shadowPass&&h.shadowMatrix)for(s=i=0,l=t.length;s<l;s++)(u=t[s]).castShadow&&(u instanceof THREE.SpotLight||u instanceof THREE.DirectionalLight&&!u.shadowCascade)&&(h.shadowMap.texture[i]=u.shadowMap,h.shadowMapSize.value[i]=u.shadowMapSize,h.shadowMatrix.value[i]=u.shadowMatrix,h.shadowDarkness.value[i]=u.shadowDarkness,h.shadowBias.value[i]=u.shadowBias,i++);for(h=0,i=(t=r.uniformsList).length;h<i;h++)if(u=n.uniforms[t[h][1]])switch(p=(s=t[h][0]).type,l=s.value,p){case"i":F.uniform1i(u,l);break;case"f":F.uniform1f(u,l);break;case"v2":F.uniform2f(u,l.x,l.y);break;case"v3":F.uniform3f(u,l.x,l.y,l.z);break;case"v4":F.uniform4f(u,l.x,l.y,l.z,l.w);break;case"c":F.uniform3f(u,l.r,l.g,l.b);break;case"fv1":F.uniform1fv(u,l);break;case"fv":F.uniform3fv(u,l);break;case"v2v":for(s._array||(s._array=new Float32Array(2*l.length)),p=0,d=l.length;p<d;p++)m=2*p,s._array[m]=l[p].x,s._array[m+1]=l[p].y;F.uniform2fv(u,s._array);break;case"v3v":for(s._array||(s._array=new Float32Array(3*l.length)),p=0,d=l.length;p<d;p++)m=3*p,s._array[m]=l[p].x,s._array[m+1]=l[p].y,s._array[m+2]=l[p].z;F.uniform3fv(u,s._array);break;case"v4v":for(s._array||(s._array=new Float32Array(4*l.length)),p=0,d=l.length;p<d;p++)m=4*p,s._array[m]=l[p].x,s._array[m+1]=l[p].y,s._array[m+2]=l[p].z,s._array[m+3]=l[p].w;F.uniform4fv(u,s._array);break;case"m4":s._array||(s._array=new Float32Array(16)),l.flattenToArray(s._array),F.uniformMatrix4fv(u,!1,s._array);break;case"m4v":for(s._array||(s._array=new Float32Array(16*l.length)),p=0,d=l.length;p<d;p++)l[p].flattenToArrayOffset(s._array,16*p);F.uniformMatrix4fv(u,!1,s._array);break;case"t":if(F.uniform1i(u,l),!(u=s.texture))continue;if(u.image instanceof Array&&6===u.image.length){if(6===(s=u).image.length)if(s.needsUpdate){for(s.image.__webglTextureCube||(s.image.__webglTextureCube=F.createTexture()),F.activeTexture(F.TEXTURE0+l),F.bindTexture(F.TEXTURE_CUBE_MAP,s.image.__webglTextureCube),l=[],u=0;u<6;u++)p=l,d=u,U.autoScaleCubemaps?(m=s.image[u],v=pe,m.width<=v&&m.height<=v||(R=Math.max(m.width,m.height),g=Math.floor(m.width*v/R),v=Math.floor(m.height*v/R),(R=document.createElement("canvas")).width=g,R.height=v,R.getContext("2d").drawImage(m,0,0,m.width,m.height,0,0,g,v),m=R)):m=s.image[u],p[d]=m;for(p=0==((u=l[0]).width&u.width-1)&&0==(u.height&u.height-1),d=x(s.format),m=x(s.type),T(F.TEXTURE_CUBE_MAP,s,p),u=0;u<6;u++)F.texImage2D(F.TEXTURE_CUBE_MAP_POSITIVE_X+u,0,d,d,m,l[u]);s.generateMipmaps&&p&&F.generateMipmap(F.TEXTURE_CUBE_MAP),s.needsUpdate=!1,s.onUpdate&&s.onUpdate()}else F.activeTexture(F.TEXTURE0+l),F.bindTexture(F.TEXTURE_CUBE_MAP,s.image.__webglTextureCube)}else u instanceof THREE.WebGLRenderTargetCube?(s=u,F.activeTexture(F.TEXTURE0+l),F.bindTexture(F.TEXTURE_CUBE_MAP,s.__webglTexture)):U.setTexture(u,l);break;case"tv":if(!s._array)for(s._array=[],p=0,d=s.texture.length;p<d;p++)s._array[p]=l+p;for(F.uniform1iv(u,s._array),p=0,d=s.texture.length;p<d;p++)(u=s.texture[p])&&U.setTexture(u,s._array[p])}(r instanceof THREE.ShaderMaterial||r instanceof THREE.MeshPhongMaterial||r.envMap)&&null!==a.cameraPosition&&(t=e.matrixWorld.getPosition(),F.uniform3f(a.cameraPosition,t.x,t.y,t.z)),(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.ShaderMaterial||r.skinning)&&null!==a.viewMatrix&&F.uniformMatrix4fv(a.viewMatrix,!1,e._viewMatrixArray),r.skinning&&F.uniformMatrix4fv(a.boneGlobalMatrices,!1,o.boneMatrices)}return F.uniformMatrix4fv(a.modelViewMatrix,!1,o._modelViewMatrix.elements),a.normalMatrix&&F.uniformMatrix3fv(a.normalMatrix,!1,o._normalMatrix.elements),null!==a.objectMatrix&&F.uniformMatrix4fv(a.objectMatrix,!1,o.matrixWorld.elements),n}function m(e,t){e._modelViewMatrix.multiply(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getInverse(e._modelViewMatrix),e._normalMatrix.transpose()}function g(e,t,i){Q!==e&&(e?F.enable(F.POLYGON_OFFSET_FILL):F.disable(F.POLYGON_OFFSET_FILL),Q=e),!e||Z===t&&J===i||(F.polygonOffset(t,i),Z=t,J=i)}function v(e,t){var i;return"fragment"===e?i=F.createShader(F.FRAGMENT_SHADER):"vertex"===e&&(i=F.createShader(F.VERTEX_SHADER)),F.shaderSource(i,t),F.compileShader(i),F.getShaderParameter(i,F.COMPILE_STATUS)?i:null}function T(e,t,i){i?(F.texParameteri(e,F.TEXTURE_WRAP_S,x(t.wrapS)),F.texParameteri(e,F.TEXTURE_WRAP_T,x(t.wrapT)),F.texParameteri(e,F.TEXTURE_MAG_FILTER,x(t.magFilter)),F.texParameteri(e,F.TEXTURE_MIN_FILTER,x(t.minFilter))):(F.texParameteri(e,F.TEXTURE_WRAP_S,F.CLAMP_TO_EDGE),F.texParameteri(e,F.TEXTURE_WRAP_T,F.CLAMP_TO_EDGE),F.texParameteri(e,F.TEXTURE_MAG_FILTER,y(t.magFilter)),F.texParameteri(e,F.TEXTURE_MIN_FILTER,y(t.minFilter)))}function R(e,t){F.bindRenderbuffer(F.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(F.renderbufferStorage(F.RENDERBUFFER,F.DEPTH_COMPONENT16,t.width,t.height),F.framebufferRenderbuffer(F.FRAMEBUFFER,F.DEPTH_ATTACHMENT,F.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(F.renderbufferStorage(F.RENDERBUFFER,F.DEPTH_STENCIL,t.width,t.height),F.framebufferRenderbuffer(F.FRAMEBUFFER,F.DEPTH_STENCIL_ATTACHMENT,F.RENDERBUFFER,e)):F.renderbufferStorage(F.RENDERBUFFER,F.RGBA4,t.width,t.height)}function y(e){switch(e){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return F.NEAREST;default:return F.LINEAR}}function x(e){switch(e){case THREE.RepeatWrapping:return F.REPEAT;case THREE.ClampToEdgeWrapping:return F.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return F.MIRRORED_REPEAT;case THREE.NearestFilter:return F.NEAREST;case THREE.NearestMipMapNearestFilter:return F.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return F.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return F.LINEAR;case THREE.LinearMipMapNearestFilter:return F.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return F.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return F.BYTE;case THREE.UnsignedByteType:return F.UNSIGNED_BYTE;case THREE.ShortType:return F.SHORT;case THREE.UnsignedShortType:return F.UNSIGNED_SHORT;case THREE.IntType:return F.INT;case THREE.UnsignedIntType:return F.UNSIGNED_INT;case THREE.FloatType:return F.FLOAT;case THREE.AlphaFormat:return F.ALPHA;case THREE.RGBFormat:return F.RGB;case THREE.RGBAFormat:return F.RGBA;case THREE.LuminanceFormat:return F.LUMINANCE;case THREE.LuminanceAlphaFormat:return F.LUMINANCE_ALPHA;case THREE.AddEquation:return F.FUNC_ADD;case THREE.SubtractEquation:return F.FUNC_SUBTRACT;case THREE.ReverseSubtractEquation:return F.FUNC_REVERSE_SUBTRACT;case THREE.ZeroFactor:return F.ZERO;case THREE.OneFactor:return F.ONE;case THREE.SrcColorFactor:return F.SRC_COLOR;case THREE.OneMinusSrcColorFactor:return F.ONE_MINUS_SRC_COLOR;case THREE.SrcAlphaFactor:return F.SRC_ALPHA;case THREE.OneMinusSrcAlphaFactor:return F.ONE_MINUS_SRC_ALPHA;case THREE.DstAlphaFactor:return F.DST_ALPHA;case THREE.OneMinusDstAlphaFactor:return F.ONE_MINUS_DST_ALPHA;case THREE.DstColorFactor:return F.DST_COLOR;case THREE.OneMinusDstColorFactor:return F.ONE_MINUS_DST_COLOR;case THREE.SrcAlphaSaturateFactor:return F.SRC_ALPHA_SATURATE}return 0}var H=void 0!==(e=e||{}).canvas?e.canvas:document.createElement("canvas"),b=void 0!==e.precision?e.precision:"highp",w=void 0===e.alpha||e.alpha,_=void 0===e.premultipliedAlpha||e.premultipliedAlpha,S=void 0!==e.antialias&&e.antialias,M=void 0===e.stencil||e.stencil,A=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,C=void 0!==e.clearColor?new THREE.Color(e.clearColor):new THREE.Color(0),L=void 0!==e.clearAlpha?e.clearAlpha:0,P=void 0!==e.maxLights?e.maxLights:4;this.domElement=H,this.context=null,this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1,this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=!0,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var F,U=this,D=[],V=null,B=null,z=-1,N=null,k=null,O=0,I=-1,W=-1,G=-1,j=-1,X=-1,Y=-1,q=-1,K=-1,Q=null,Z=null,J=null,$=null,ee=0,te=0,ie=0,re=0,oe=0,ne=0,ae=new THREE.Frustum,se=new THREE.Matrix4,he=new THREE.Matrix4,le=new THREE.Vector4,ce=new THREE.Vector3,fe=!0,Ee={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],angles:[],exponents:[]}};F=function(){var e;try{if(!(e=H.getContext("experimental-webgl",{alpha:w,premultipliedAlpha:_,antialias:S,stencil:M,preserveDrawingBuffer:A})))throw"Error creating WebGL context."}catch(e){}return e.getExtension("OES_texture_float"),e}(),F.clearColor(0,0,0,1),F.clearDepth(1),F.clearStencil(0),F.enable(F.DEPTH_TEST),F.depthFunc(F.LEQUAL),F.frontFace(F.CCW),F.cullFace(F.BACK),F.enable(F.CULL_FACE),F.enable(F.BLEND),F.blendEquation(F.FUNC_ADD),F.blendFunc(F.SRC_ALPHA,F.ONE_MINUS_SRC_ALPHA),F.clearColor(C.r,C.g,C.b,L),this.context=F;var ue=F.getParameter(F.MAX_VERTEX_TEXTURE_IMAGE_UNITS);F.getParameter(F.MAX_TEXTURE_SIZE);var pe=F.getParameter(F.MAX_CUBE_MAP_TEXTURE_SIZE);this.getContext=function(){return F},this.supportsVertexTextures=function(){return ue>0},this.setSize=function(e,t){H.width=e,H.height=t,this.setViewport(0,0,H.width,H.height)},this.setViewport=function(e,t,i,r){ee=e,te=t,ie=i,re=r,F.viewport(ee,te,ie,re)},this.setScissor=function(e,t,i,r){F.scissor(e,t,i,r)},this.enableScissorTest=function(e){e?F.enable(F.SCISSOR_TEST):F.disable(F.SCISSOR_TEST)},this.setClearColorHex=function(e,t){C.setHex(e),L=t,F.clearColor(C.r,C.g,C.b,L)},this.setClearColor=function(e,t){C.copy(e),L=t,F.clearColor(C.r,C.g,C.b,L)},this.getClearColor=function(){return C},this.getClearAlpha=function(){return L},this.clear=function(e,t,i){var r=0;(void 0===e||e)&&(r|=F.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=F.DEPTH_BUFFER_BIT),(void 0===i||i)&&(r|=F.STENCIL_BUFFER_BIT),F.clear(r)},this.clearTarget=function(e,t,i,r){this.setRenderTarget(e),this.clear(t,i,r)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.deallocateObject=function(e){if(e.__webglInit)if(e.__webglInit=!1,delete e._modelViewMatrix,delete e._normalMatrix,delete e._normalMatrixArray,delete e._modelViewMatrixArray,delete e._objectMatrixArray,e instanceof THREE.Mesh)for(var t in e.geometry.geometryGroups){var i=e.geometry.geometryGroups[t];F.deleteBuffer(i.__webglVertexBuffer),F.deleteBuffer(i.__webglNormalBuffer),F.deleteBuffer(i.__webglTangentBuffer),F.deleteBuffer(i.__webglColorBuffer),F.deleteBuffer(i.__webglUVBuffer),F.deleteBuffer(i.__webglUV2Buffer),F.deleteBuffer(i.__webglSkinVertexABuffer),F.deleteBuffer(i.__webglSkinVertexBBuffer),F.deleteBuffer(i.__webglSkinIndicesBuffer),F.deleteBuffer(i.__webglSkinWeightsBuffer),F.deleteBuffer(i.__webglFaceBuffer),F.deleteBuffer(i.__webglLineBuffer);var r=void 0,o=void 0;if(i.numMorphTargets)for(r=0,o=i.numMorphTargets;r<o;r++)F.deleteBuffer(i.__webglMorphTargetsBuffers[r]);if(i.numMorphNormals)for(r=0,o=i.numMorphNormals;r<o;r++)F.deleteBuffer(i.__webglMorphNormalsBuffers[r]);if(i.__webglCustomAttributesList)for(r in r=void 0,i.__webglCustomAttributesList)F.deleteBuffer(i.__webglCustomAttributesList[r].buffer);U.info.memory.geometries--}else(e instanceof THREE.Ribbon||e instanceof THREE.Line||e instanceof THREE.ParticleSystem)&&(e=e.geometry,F.deleteBuffer(e.__webglVertexBuffer),F.deleteBuffer(e.__webglColorBuffer),U.info.memory.geometries--)},this.deallocateTexture=function(e){e.__webglInit&&(e.__webglInit=!1,F.deleteTexture(e.__webglTexture),U.info.memory.textures--)},this.deallocateRenderTarget=function(e){if(e&&e.__webglTexture)if(F.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;t<6;t++)F.deleteFramebuffer(e.__webglFramebuffer[t]),F.deleteRenderbuffer(e.__webglRenderbuffer[t]);else F.deleteFramebuffer(e.__webglFramebuffer),F.deleteRenderbuffer(e.__webglRenderbuffer)},this.updateShadowMap=function(e,t){V=null,z=N=K=q=G=-1,fe=!0,W=I=-1,this.shadowMapPlugin.update(e,t)},this.renderBufferImmediate=function(e,t,i){if(e.__webglVertexBuffer||(e.__webglVertexBuffer=F.createBuffer()),e.__webglNormalBuffer||(e.__webglNormalBuffer=F.createBuffer()),e.hasPos&&(F.bindBuffer(F.ARRAY_BUFFER,e.__webglVertexBuffer),F.bufferData(F.ARRAY_BUFFER,e.positionArray,F.DYNAMIC_DRAW),F.enableVertexAttribArray(t.attributes.position),F.vertexAttribPointer(t.attributes.position,3,F.FLOAT,!1,0,0)),e.hasNormal){if(F.bindBuffer(F.ARRAY_BUFFER,e.__webglNormalBuffer),i===THREE.FlatShading){var r,o,n,a,s,h,l,c=3*e.count;for(l=0;l<c;l+=9)r=(i=e.normalArray)[l],o=i[l+1],n=i[l+2],a=i[l+3],s=i[l+4],h=i[l+5],r=(r+a+i[l+6])/3,o=(o+s+i[l+7])/3,n=(n+h+i[l+8])/3,i[l]=r,i[l+1]=o,i[l+2]=n,i[l+3]=r,i[l+4]=o,i[l+5]=n,i[l+6]=r,i[l+7]=o,i[l+8]=n}F.bufferData(F.ARRAY_BUFFER,e.normalArray,F.DYNAMIC_DRAW),F.enableVertexAttribArray(t.attributes.normal),F.vertexAttribPointer(t.attributes.normal,3,F.FLOAT,!1,0,0)}F.drawArrays(F.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,i,r,o,n){if(!1!==r.visible&&(e=(i=d(e,t,i,r,n)).attributes,t=!1,(r=16777215*o.id+2*i.id+(r.wireframe?1:0))!==N&&(N=r,t=!0),n instanceof THREE.Mesh))for(r=0,i=(n=o.offsets).length;r<i;++r)t&&(F.bindBuffer(F.ARRAY_BUFFER,o.vertexPositionBuffer),F.vertexAttribPointer(e.position,o.vertexPositionBuffer.itemSize,F.FLOAT,!1,0,12*n[r].index),e.normal>=0&&o.vertexNormalBuffer&&(F.bindBuffer(F.ARRAY_BUFFER,o.vertexNormalBuffer),F.vertexAttribPointer(e.normal,o.vertexNormalBuffer.itemSize,F.FLOAT,!1,0,12*n[r].index)),e.uv>=0&&o.vertexUvBuffer&&(o.vertexUvBuffer?(F.bindBuffer(F.ARRAY_BUFFER,o.vertexUvBuffer),F.vertexAttribPointer(e.uv,o.vertexUvBuffer.itemSize,F.FLOAT,!1,0,8*n[r].index),F.enableVertexAttribArray(e.uv)):F.disableVertexAttribArray(e.uv)),e.color>=0&&o.vertexColorBuffer&&(F.bindBuffer(F.ARRAY_BUFFER,o.vertexColorBuffer),F.vertexAttribPointer(e.color,o.vertexColorBuffer.itemSize,F.FLOAT,!1,0,16*n[r].index)),F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,o.vertexIndexBuffer)),F.drawElements(F.TRIANGLES,n[r].count,F.UNSIGNED_SHORT,2*n[r].start),U.info.render.calls++,U.info.render.vertices=U.info.render.vertices+n[r].count,U.info.render.faces=U.info.render.faces+n[r].count/3},this.renderBuffer=function(e,t,i,r,o,n){if(!1!==r.visible){var a,s;t=(i=d(e,t,i,r,n)).attributes,e=!1;if((i=16777215*o.id+2*i.id+(r.wireframe?1:0))!==N&&(N=i,e=!0),!r.morphTargets&&t.position>=0)e&&(F.bindBuffer(F.ARRAY_BUFFER,o.__webglVertexBuffer),F.vertexAttribPointer(t.position,3,F.FLOAT,!1,0,0));else if(n.morphTargetBase){if(i=r.program.attributes,-1!==n.morphTargetBase?(F.bindBuffer(F.ARRAY_BUFFER,o.__webglMorphTargetsBuffers[n.morphTargetBase]),F.vertexAttribPointer(i.position,3,F.FLOAT,!1,0,0)):i.position>=0&&(F.bindBuffer(F.ARRAY_BUFFER,o.__webglVertexBuffer),F.vertexAttribPointer(i.position,3,F.FLOAT,!1,0,0)),n.morphTargetForcedOrder.length){a=0;var h=n.morphTargetForcedOrder;for(s=n.morphTargetInfluences;a<r.numSupportedMorphTargets&&a<h.length;)F.bindBuffer(F.ARRAY_BUFFER,o.__webglMorphTargetsBuffers[h[a]]),F.vertexAttribPointer(i["morphTarget"+a],3,F.FLOAT,!1,0,0),r.morphNormals&&(F.bindBuffer(F.ARRAY_BUFFER,o.__webglMorphNormalsBuffers[h[a]]),F.vertexAttribPointer(i["morphNormal"+a],3,F.FLOAT,!1,0,0)),n.__webglMorphTargetInfluences[a]=s[h[a]],a++}else{h=[];var l,c=-1,f=0,E=(s=n.morphTargetInfluences).length;for(a=0,-1!==n.morphTargetBase&&(h[n.morphTargetBase]=!0);a<r.numSupportedMorphTargets;){for(l=0;l<E;l++)!h[l]&&s[l]>c&&(c=s[f=l]);F.bindBuffer(F.ARRAY_BUFFER,o.__webglMorphTargetsBuffers[f]),F.vertexAttribPointer(i["morphTarget"+a],3,F.FLOAT,!1,0,0),r.morphNormals&&(F.bindBuffer(F.ARRAY_BUFFER,o.__webglMorphNormalsBuffers[f]),F.vertexAttribPointer(i["morphNormal"+a],3,F.FLOAT,!1,0,0)),n.__webglMorphTargetInfluences[a]=c,h[f]=1,c=-1,a++}}null!==r.program.uniforms.morphTargetInfluences&&F.uniform1fv(r.program.uniforms.morphTargetInfluences,n.__webglMorphTargetInfluences)}if(e){if(o.__webglCustomAttributesList)for(a=0,s=o.__webglCustomAttributesList.length;a<s;a++)t[(i=o.__webglCustomAttributesList[a]).buffer.belongsToAttribute]>=0&&(F.bindBuffer(F.ARRAY_BUFFER,i.buffer),F.vertexAttribPointer(t[i.buffer.belongsToAttribute],i.size,F.FLOAT,!1,0,0));t.color>=0&&(F.bindBuffer(F.ARRAY_BUFFER,o.__webglColorBuffer),F.vertexAttribPointer(t.color,3,F.FLOAT,!1,0,0)),t.normal>=0&&(F.bindBuffer(F.ARRAY_BUFFER,o.__webglNormalBuffer),F.vertexAttribPointer(t.normal,3,F.FLOAT,!1,0,0)),t.tangent>=0&&(F.bindBuffer(F.ARRAY_BUFFER,o.__webglTangentBuffer),F.vertexAttribPointer(t.tangent,4,F.FLOAT,!1,0,0)),t.uv>=0&&(o.__webglUVBuffer?(F.bindBuffer(F.ARRAY_BUFFER,o.__webglUVBuffer),F.vertexAttribPointer(t.uv,2,F.FLOAT,!1,0,0),F.enableVertexAttribArray(t.uv)):F.disableVertexAttribArray(t.uv)),t.uv2>=0&&(o.__webglUV2Buffer?(F.bindBuffer(F.ARRAY_BUFFER,o.__webglUV2Buffer),F.vertexAttribPointer(t.uv2,2,F.FLOAT,!1,0,0),F.enableVertexAttribArray(t.uv2)):F.disableVertexAttribArray(t.uv2)),r.skinning&&t.skinVertexA>=0&&t.skinVertexB>=0&&t.skinIndex>=0&&t.skinWeight>=0&&(F.bindBuffer(F.ARRAY_BUFFER,o.__webglSkinVertexABuffer),F.vertexAttribPointer(t.skinVertexA,4,F.FLOAT,!1,0,0),F.bindBuffer(F.ARRAY_BUFFER,o.__webglSkinVertexBBuffer),F.vertexAttribPointer(t.skinVertexB,4,F.FLOAT,!1,0,0),F.bindBuffer(F.ARRAY_BUFFER,o.__webglSkinIndicesBuffer),F.vertexAttribPointer(t.skinIndex,4,F.FLOAT,!1,0,0),F.bindBuffer(F.ARRAY_BUFFER,o.__webglSkinWeightsBuffer),F.vertexAttribPointer(t.skinWeight,4,F.FLOAT,!1,0,0))}n instanceof THREE.Mesh?(r.wireframe?((r=r.wireframeLinewidth)!==$&&(F.lineWidth(r),$=r),e&&F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,o.__webglLineBuffer),F.drawElements(F.LINES,o.__webglLineCount,F.UNSIGNED_SHORT,0)):(e&&F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,o.__webglFaceBuffer),F.drawElements(F.TRIANGLES,o.__webglFaceCount,F.UNSIGNED_SHORT,0)),U.info.render.calls++,U.info.render.vertices=U.info.render.vertices+o.__webglFaceCount,U.info.render.faces=U.info.render.faces+o.__webglFaceCount/3):n instanceof THREE.Line?(n=n.type===THREE.LineStrip?F.LINE_STRIP:F.LINES,(r=r.linewidth)!==$&&(F.lineWidth(r),$=r),F.drawArrays(n,0,o.__webglLineCount),U.info.render.calls++):n instanceof THREE.ParticleSystem?(F.drawArrays(F.POINTS,0,o.__webglParticleCount),U.info.render.calls++,U.info.render.points=U.info.render.points+o.__webglParticleCount):n instanceof THREE.Ribbon&&(F.drawArrays(F.TRIANGLE_STRIP,0,o.__webglVertexCount),U.info.render.calls++)}},this.render=function(e,t,i,r){var o,n,c,f,E=e.__lights,u=e.fog;for(z=-1,fe=!0,void 0===t.parent&&e.add(t),this.autoUpdateScene&&e.updateMatrixWorld(),t._viewMatrixArray||(t._viewMatrixArray=new Float32Array(16)),t._projectionMatrixArray||(t._projectionMatrixArray=new Float32Array(16)),t.matrixWorldInverse.getInverse(t.matrixWorld),t.matrixWorldInverse.flattenToArray(t._viewMatrixArray),t.projectionMatrix.flattenToArray(t._projectionMatrixArray),se.multiply(t.projectionMatrix,t.matrixWorldInverse),ae.setFromMatrix(se),this.autoUpdateObjects&&this.initWebGLObjects(e),s(this.renderPluginsPre,e,t),U.info.render.calls=0,U.info.render.vertices=0,U.info.render.faces=0,U.info.render.points=0,this.setRenderTarget(i),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),r=0,o=(f=e.__webglObjects).length;r<o;r++)if(c=(n=f[r]).object,n.render=!1,c.visible&&(!(c instanceof THREE.Mesh||c instanceof THREE.ParticleSystem)||!c.frustumCulled||ae.contains(c))){m(c,t);var p=n,d=p.object,v=p.buffer,T=void 0;T=T=void 0;(T=d.material)instanceof THREE.MeshFaceMaterial?(T=v.materialIndex)>=0&&((T=d.geometry.materials[T]).transparent?(p.transparent=T,p.opaque=null):(p.opaque=T,p.transparent=null)):T&&(T.transparent?(p.transparent=T,p.opaque=null):(p.opaque=T,p.transparent=null)),n.render=!0,this.sortObjects&&(c.renderDepth?n.z=c.renderDepth:(le.copy(c.matrixWorld.getPosition()),se.multiplyVector3(le),n.z=le.z))}for(this.sortObjects&&f.sort(a),r=0,o=(f=e.__webglObjectsImmediate).length;r<o;r++)(c=(n=f[r]).object).visible&&(m(c,t),(c=n.object.material).transparent?(n.transparent=c,n.opaque=null):(n.opaque=c,n.transparent=null));e.overrideMaterial?(r=e.overrideMaterial,this.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst),this.setDepthTest(r.depthTest),this.setDepthWrite(r.depthWrite),g(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits),h(e.__webglObjects,!1,"",t,E,u,!0,r),l(e.__webglObjectsImmediate,"",t,E,u,!1,r)):(this.setBlending(THREE.NormalBlending),h(e.__webglObjects,!0,"opaque",t,E,u,!1),l(e.__webglObjectsImmediate,"opaque",t,E,u,!1),h(e.__webglObjects,!1,"transparent",t,E,u,!0),l(e.__webglObjectsImmediate,"transparent",t,E,u,!0)),s(this.renderPluginsPost,e,t),i&&i.generateMipmaps&&i.minFilter!==THREE.NearestFilter&&i.minFilter!==THREE.LinearFilter&&(i instanceof THREE.WebGLRenderTargetCube?(F.bindTexture(F.TEXTURE_CUBE_MAP,i.__webglTexture),F.generateMipmap(F.TEXTURE_CUBE_MAP),F.bindTexture(F.TEXTURE_CUBE_MAP,null)):(F.bindTexture(F.TEXTURE_2D,i.__webglTexture),F.generateMipmap(F.TEXTURE_2D),F.bindTexture(F.TEXTURE_2D,null))),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(e,t,i,r,o){var n=d(e,t,i,r,o);N=-1,U.setObjectFaces(o),o.immediateRenderCallback?o.immediateRenderCallback(n,F,ae):o.render((function(e){U.renderBufferImmediate(e,n,r.shading)}))},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;){var a=e.__objectsAdded[0],s=e,h=void 0,l=void 0,d=void 0;if(!a.__webglInit)if(a.__webglInit=!0,a._modelViewMatrix=new THREE.Matrix4,a._normalMatrix=new THREE.Matrix3,a instanceof THREE.Mesh){if((l=a.geometry)instanceof THREE.Geometry){if(void 0===l.geometryGroups){var m,g=l,v=void 0,T=void 0,R=void 0,y=void 0,x=void 0,H=void 0,b={},w=g.morphTargets.length,_=g.morphNormals.length;for(g.geometryGroups={},v=0,m=g.faces.length;v<m;v++)void 0===b[x=void 0!==(R=(T=g.faces[v]).materialIndex)?R:-1]&&(b[x]={hash:x,counter:0}),H=b[x].hash+"_"+b[x].counter,void 0===g.geometryGroups[H]&&(g.geometryGroups[H]={faces3:[],faces4:[],materialIndex:R,vertices:0,numMorphTargets:w,numMorphNormals:_}),y=T instanceof THREE.Face3?3:4,g.geometryGroups[H].vertices+y>65535&&(b[x].counter=b[x].counter+1,H=b[x].hash+"_"+b[x].counter,void 0===g.geometryGroups[H]&&(g.geometryGroups[H]={faces3:[],faces4:[],materialIndex:R,vertices:0,numMorphTargets:w,numMorphNormals:_})),T instanceof THREE.Face3?g.geometryGroups[H].faces3.push(v):g.geometryGroups[H].faces4.push(v),g.geometryGroups[H].vertices=g.geometryGroups[H].vertices+y;g.geometryGroupsList=[];var S=void 0;for(S in g.geometryGroups)g.geometryGroups[S].id=O++,g.geometryGroupsList.push(g.geometryGroups[S])}for(h in l.geometryGroups)if(!(d=l.geometryGroups[h]).__webglVertexBuffer){var M=d;M.__webglVertexBuffer=F.createBuffer(),M.__webglNormalBuffer=F.createBuffer(),M.__webglTangentBuffer=F.createBuffer(),M.__webglColorBuffer=F.createBuffer(),M.__webglUVBuffer=F.createBuffer(),M.__webglUV2Buffer=F.createBuffer(),M.__webglSkinVertexABuffer=F.createBuffer(),M.__webglSkinVertexBBuffer=F.createBuffer(),M.__webglSkinIndicesBuffer=F.createBuffer(),M.__webglSkinWeightsBuffer=F.createBuffer(),M.__webglFaceBuffer=F.createBuffer(),M.__webglLineBuffer=F.createBuffer();var A=void 0,C=void 0;if(M.numMorphTargets)for(M.__webglMorphTargetsBuffers=[],A=0,C=M.numMorphTargets;A<C;A++)M.__webglMorphTargetsBuffers.push(F.createBuffer());if(M.numMorphNormals)for(M.__webglMorphNormalsBuffers=[],A=0,C=M.numMorphNormals;A<C;A++)M.__webglMorphNormalsBuffers.push(F.createBuffer());U.info.memory.geometries++;var L=d,P=a,D=P.geometry,V=L.faces3,B=L.faces4,z=3*V.length+4*B.length,N=1*V.length+2*B.length,k=3*V.length+4*B.length,I=i(P,L),W=o(I),G=r(I),j=!!I.vertexColors&&I.vertexColors;L.__vertexArray=new Float32Array(3*z),G&&(L.__normalArray=new Float32Array(3*z)),D.hasTangents&&(L.__tangentArray=new Float32Array(4*z)),j&&(L.__colorArray=new Float32Array(3*z)),W&&((D.faceUvs.length>0||D.faceVertexUvs.length>0)&&(L.__uvArray=new Float32Array(2*z)),(D.faceUvs.length>1||D.faceVertexUvs.length>1)&&(L.__uv2Array=new Float32Array(2*z))),P.geometry.skinWeights.length&&P.geometry.skinIndices.length&&(L.__skinVertexAArray=new Float32Array(4*z),L.__skinVertexBArray=new Float32Array(4*z),L.__skinIndexArray=new Float32Array(4*z),L.__skinWeightArray=new Float32Array(4*z)),L.__faceArray=new Uint16Array(3*N),L.__lineArray=new Uint16Array(2*k);var X=void 0,Y=void 0;if(L.numMorphTargets)for(L.__morphTargetsArrays=[],X=0,Y=L.numMorphTargets;X<Y;X++)L.__morphTargetsArrays.push(new Float32Array(3*z));if(L.numMorphNormals)for(L.__morphNormalsArrays=[],X=0,Y=L.numMorphNormals;X<Y;X++)L.__morphNormalsArrays.push(new Float32Array(3*z));if(L.__webglFaceCount=3*N,L.__webglLineCount=2*k,I.attributes){void 0===L.__webglCustomAttributesList&&(L.__webglCustomAttributesList=[]);var q=void 0;for(q in I.attributes){var K,Q=I.attributes[q],Z={};for(K in Q)Z[K]=Q[K];if(!Z.__webglInitialized||Z.createUniqueBuffers){Z.__webglInitialized=!0;var J=1;"v2"===Z.type?J=2:"v3"===Z.type?J=3:"v4"===Z.type?J=4:"c"===Z.type&&(J=3),Z.size=J,Z.array=new Float32Array(z*J),Z.buffer=F.createBuffer(),Z.buffer.belongsToAttribute=q,Q.needsUpdate=!0,Z.__original=Q}L.__webglCustomAttributesList.push(Z)}}L.__inittedArrays=!0,l.verticesNeedUpdate=!0,l.morphTargetsNeedUpdate=!0,l.elementsNeedUpdate=!0,l.uvsNeedUpdate=!0,l.normalsNeedUpdate=!0,l.tangetsNeedUpdate=!0,l.colorsNeedUpdate=!0}}}else if(a instanceof THREE.Ribbon){if(!(l=a.geometry).__webglVertexBuffer){var $=l;$.__webglVertexBuffer=F.createBuffer(),$.__webglColorBuffer=F.createBuffer(),U.info.memory.geometries++;var ee=l,te=ee.vertices.length;ee.__vertexArray=new Float32Array(3*te),ee.__colorArray=new Float32Array(3*te),ee.__webglVertexCount=te,l.verticesNeedUpdate=!0,l.colorsNeedUpdate=!0}}else if(a instanceof THREE.Line){if(!(l=a.geometry).__webglVertexBuffer){var ie=l;ie.__webglVertexBuffer=F.createBuffer(),ie.__webglColorBuffer=F.createBuffer(),U.info.memory.geometries++;var re=l,oe=a,ne=re.vertices.length;re.__vertexArray=new Float32Array(3*ne),re.__colorArray=new Float32Array(3*ne),re.__webglLineCount=ne,t(re,oe),l.verticesNeedUpdate=!0,l.colorsNeedUpdate=!0}}else if(a instanceof THREE.ParticleSystem&&!(l=a.geometry).__webglVertexBuffer){var ae=l;ae.__webglVertexBuffer=F.createBuffer(),ae.__webglColorBuffer=F.createBuffer(),U.info.geometries++;var se=l,he=a,le=se.vertices.length;se.__vertexArray=new Float32Array(3*le),se.__colorArray=new Float32Array(3*le),se.__sortArray=[],se.__webglParticleCount=le,t(se,he),l.verticesNeedUpdate=!0,l.colorsNeedUpdate=!0}if(!a.__webglActive){if(a instanceof THREE.Mesh)if((l=a.geometry)instanceof THREE.BufferGeometry)c(s.__webglObjects,l,a);else for(h in l.geometryGroups)d=l.geometryGroups[h],c(s.__webglObjects,d,a);else a instanceof THREE.Ribbon||a instanceof THREE.Line||a instanceof THREE.ParticleSystem?(l=a.geometry,c(s.__webglObjects,l,a)):a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback?s.__webglObjectsImmediate.push({object:a,opaque:null,transparent:null}):a instanceof THREE.Sprite?s.__webglSprites.push(a):a instanceof THREE.LensFlare&&s.__webglFlares.push(a);a.__webglActive=!0}e.__objectsAdded.splice(0,1)}for(;e.__objectsRemoved.length;){var ce=e.__objectsRemoved[0],fe=e;ce instanceof THREE.Mesh||ce instanceof THREE.ParticleSystem||ce instanceof THREE.Ribbon||ce instanceof THREE.Line?u(fe.__webglObjects,ce):ce instanceof THREE.Sprite?p(fe.__webglSprites,ce):ce instanceof THREE.LensFlare?p(fe.__webglFlares,ce):(ce instanceof THREE.ImmediateRenderObject||ce.immediateRenderCallback)&&u(fe.__webglObjectsImmediate,ce),ce.__webglActive=!1,e.__objectsRemoved.splice(0,1)}for(var Ee=0,ue=e.__webglObjects.length;Ee<ue;Ee++){var pe=e.__webglObjects[Ee].object,de=pe.geometry,me=void 0,ge=void 0,ve=void 0;if(pe instanceof THREE.Mesh)if(de instanceof THREE.BufferGeometry)de.verticesNeedUpdate=!1,de.elementsNeedUpdate=!1,de.uvsNeedUpdate=!1,de.normalsNeedUpdate=!1,de.colorsNeedUpdate=!1;else{for(var Te=0,Re=de.geometryGroupsList.length;Te<Re;Te++)if(ge=(ve=i(pe,me=de.geometryGroupsList[Te])).attributes&&f(ve),de.verticesNeedUpdate||de.morphTargetsNeedUpdate||de.elementsNeedUpdate||de.uvsNeedUpdate||de.normalsNeedUpdate||de.colorsNeedUpdate||de.tangetsNeedUpdate||ge){var ye=me,xe=pe,He=F.DYNAMIC_DRAW,be=!de.dynamic,we=ve;if(ye.__inittedArrays){var _e=r(we),Se=!!we.vertexColors&&we.vertexColors,Me=o(we),Ae=_e===THREE.SmoothShading,Ce=void 0,Le=void 0,Pe=void 0,Fe=void 0,Ue=void 0,De=void 0,Ve=void 0,Be=void 0,ze=void 0,Ne=void 0,ke=void 0,Oe=void 0,Ie=void 0,We=void 0,Ge=void 0,je=void 0,Xe=void 0,Ye=void 0,qe=void 0,Ke=void 0,Qe=void 0,Ze=void 0,Je=void 0,$e=void 0,et=void 0,tt=void 0,it=void 0,rt=void 0,ot=void 0,nt=void 0,at=void 0,st=void 0,ht=void 0,lt=void 0,ct=void 0,ft=void 0,Et=void 0,ut=void 0,pt=void 0,dt=void 0,mt=void 0,gt=void 0,vt=void 0,Tt=void 0,Rt=void 0,yt=void 0,xt=void 0,Ht=void 0,bt=void 0,wt=void 0,_t=void 0,St=void 0,Mt=void 0,At=void 0,Ct=0,Lt=0,Pt=0,Ft=0,Ut=0,Dt=0,Vt=0,Bt=0,zt=0,Nt=0,kt=0,Ot=0,It=void 0,Wt=ye.__vertexArray,Gt=ye.__uvArray,jt=ye.__uv2Array,Xt=ye.__normalArray,Yt=ye.__tangentArray,qt=ye.__colorArray,Kt=ye.__skinVertexAArray,Qt=ye.__skinVertexBArray,Zt=ye.__skinIndexArray,Jt=ye.__skinWeightArray,$t=ye.__morphTargetsArrays,ei=ye.__morphNormalsArrays,ti=ye.__webglCustomAttributesList,ii=void 0,ri=ye.__faceArray,oi=ye.__lineArray,ni=xe.geometry,ai=ni.elementsNeedUpdate,si=ni.uvsNeedUpdate,hi=ni.normalsNeedUpdate,li=ni.tangetsNeedUpdate,ci=ni.colorsNeedUpdate,fi=ni.morphTargetsNeedUpdate,Ei=ni.vertices,ui=ye.faces3,pi=ye.faces4,di=ni.faces,mi=ni.faceVertexUvs[0],gi=ni.faceVertexUvs[1],vi=ni.skinVerticesA,Ti=ni.skinVerticesB,Ri=ni.skinIndices,yi=ni.skinWeights,xi=ni.morphTargets,Hi=ni.morphNormals;if(ni.verticesNeedUpdate){for(Ce=0,Le=ui.length;Ce<Le;Ce++)Oe=Ei[(Fe=di[ui[Ce]]).a],Ie=Ei[Fe.b],We=Ei[Fe.c],Wt[Lt]=Oe.x,Wt[Lt+1]=Oe.y,Wt[Lt+2]=Oe.z,Wt[Lt+3]=Ie.x,Wt[Lt+4]=Ie.y,Wt[Lt+5]=Ie.z,Wt[Lt+6]=We.x,Wt[Lt+7]=We.y,Wt[Lt+8]=We.z,Lt+=9;for(Ce=0,Le=pi.length;Ce<Le;Ce++)Oe=Ei[(Fe=di[pi[Ce]]).a],Ie=Ei[Fe.b],We=Ei[Fe.c],Ge=Ei[Fe.d],Wt[Lt]=Oe.x,Wt[Lt+1]=Oe.y,Wt[Lt+2]=Oe.z,Wt[Lt+3]=Ie.x,Wt[Lt+4]=Ie.y,Wt[Lt+5]=Ie.z,Wt[Lt+6]=We.x,Wt[Lt+7]=We.y,Wt[Lt+8]=We.z,Wt[Lt+9]=Ge.x,Wt[Lt+10]=Ge.y,Wt[Lt+11]=Ge.z,Lt+=12;F.bindBuffer(F.ARRAY_BUFFER,ye.__webglVertexBuffer),F.bufferData(F.ARRAY_BUFFER,Wt,He)}if(fi)for(bt=0,wt=xi.length;bt<wt;bt++){for(Ce=kt=0,Le=ui.length;Ce<Le;Ce++)Fe=di[Mt=ui[Ce]],Oe=xi[bt].vertices[Fe.a],Ie=xi[bt].vertices[Fe.b],We=xi[bt].vertices[Fe.c],(_t=$t[bt])[kt]=Oe.x,_t[kt+1]=Oe.y,_t[kt+2]=Oe.z,_t[kt+3]=Ie.x,_t[kt+4]=Ie.y,_t[kt+5]=Ie.z,_t[kt+6]=We.x,_t[kt+7]=We.y,_t[kt+8]=We.z,we.morphNormals&&(Ae?(Ke=(At=Hi[bt].vertexNormals[Mt]).a,Qe=At.b,Ze=At.c):Ze=Qe=Ke=Hi[bt].faceNormals[Mt],(St=ei[bt])[kt]=Ke.x,St[kt+1]=Ke.y,St[kt+2]=Ke.z,St[kt+3]=Qe.x,St[kt+4]=Qe.y,St[kt+5]=Qe.z,St[kt+6]=Ze.x,St[kt+7]=Ze.y,St[kt+8]=Ze.z),kt+=9;for(Ce=0,Le=pi.length;Ce<Le;Ce++)Fe=di[Mt=pi[Ce]],Oe=xi[bt].vertices[Fe.a],Ie=xi[bt].vertices[Fe.b],We=xi[bt].vertices[Fe.c],Ge=xi[bt].vertices[Fe.d],(_t=$t[bt])[kt]=Oe.x,_t[kt+1]=Oe.y,_t[kt+2]=Oe.z,_t[kt+3]=Ie.x,_t[kt+4]=Ie.y,_t[kt+5]=Ie.z,_t[kt+6]=We.x,_t[kt+7]=We.y,_t[kt+8]=We.z,_t[kt+9]=Ge.x,_t[kt+10]=Ge.y,_t[kt+11]=Ge.z,we.morphNormals&&(Ae?(Ke=(At=Hi[bt].vertexNormals[Mt]).a,Qe=At.b,Ze=At.c,Je=At.d):Je=Ze=Qe=Ke=Hi[bt].faceNormals[Mt],(St=ei[bt])[kt]=Ke.x,St[kt+1]=Ke.y,St[kt+2]=Ke.z,St[kt+3]=Qe.x,St[kt+4]=Qe.y,St[kt+5]=Qe.z,St[kt+6]=Ze.x,St[kt+7]=Ze.y,St[kt+8]=Ze.z,St[kt+9]=Je.x,St[kt+10]=Je.y,St[kt+11]=Je.z),kt+=12;F.bindBuffer(F.ARRAY_BUFFER,ye.__webglMorphTargetsBuffers[bt]),F.bufferData(F.ARRAY_BUFFER,$t[bt],He),we.morphNormals&&(F.bindBuffer(F.ARRAY_BUFFER,ye.__webglMorphNormalsBuffers[bt]),F.bufferData(F.ARRAY_BUFFER,ei[bt],He))}if(yi.length){for(Ce=0,Le=ui.length;Ce<Le;Ce++)rt=yi[(Fe=di[ui[Ce]]).a],ot=yi[Fe.b],nt=yi[Fe.c],Jt[Nt]=rt.x,Jt[Nt+1]=rt.y,Jt[Nt+2]=rt.z,Jt[Nt+3]=rt.w,Jt[Nt+4]=ot.x,Jt[Nt+5]=ot.y,Jt[Nt+6]=ot.z,Jt[Nt+7]=ot.w,Jt[Nt+8]=nt.x,Jt[Nt+9]=nt.y,Jt[Nt+10]=nt.z,Jt[Nt+11]=nt.w,st=Ri[Fe.a],ht=Ri[Fe.b],lt=Ri[Fe.c],Zt[Nt]=st.x,Zt[Nt+1]=st.y,Zt[Nt+2]=st.z,Zt[Nt+3]=st.w,Zt[Nt+4]=ht.x,Zt[Nt+5]=ht.y,Zt[Nt+6]=ht.z,Zt[Nt+7]=ht.w,Zt[Nt+8]=lt.x,Zt[Nt+9]=lt.y,Zt[Nt+10]=lt.z,Zt[Nt+11]=lt.w,ft=vi[Fe.a],Et=vi[Fe.b],ut=vi[Fe.c],Kt[Nt]=ft.x,Kt[Nt+1]=ft.y,Kt[Nt+2]=ft.z,Kt[Nt+3]=1,Kt[Nt+4]=Et.x,Kt[Nt+5]=Et.y,Kt[Nt+6]=Et.z,Kt[Nt+7]=1,Kt[Nt+8]=ut.x,Kt[Nt+9]=ut.y,Kt[Nt+10]=ut.z,Kt[Nt+11]=1,dt=Ti[Fe.a],mt=Ti[Fe.b],gt=Ti[Fe.c],Qt[Nt]=dt.x,Qt[Nt+1]=dt.y,Qt[Nt+2]=dt.z,Qt[Nt+3]=1,Qt[Nt+4]=mt.x,Qt[Nt+5]=mt.y,Qt[Nt+6]=mt.z,Qt[Nt+7]=1,Qt[Nt+8]=gt.x,Qt[Nt+9]=gt.y,Qt[Nt+10]=gt.z,Qt[Nt+11]=1,Nt+=12;for(Ce=0,Le=pi.length;Ce<Le;Ce++)rt=yi[(Fe=di[pi[Ce]]).a],ot=yi[Fe.b],nt=yi[Fe.c],at=yi[Fe.d],Jt[Nt]=rt.x,Jt[Nt+1]=rt.y,Jt[Nt+2]=rt.z,Jt[Nt+3]=rt.w,Jt[Nt+4]=ot.x,Jt[Nt+5]=ot.y,Jt[Nt+6]=ot.z,Jt[Nt+7]=ot.w,Jt[Nt+8]=nt.x,Jt[Nt+9]=nt.y,Jt[Nt+10]=nt.z,Jt[Nt+11]=nt.w,Jt[Nt+12]=at.x,Jt[Nt+13]=at.y,Jt[Nt+14]=at.z,Jt[Nt+15]=at.w,st=Ri[Fe.a],ht=Ri[Fe.b],lt=Ri[Fe.c],ct=Ri[Fe.d],Zt[Nt]=st.x,Zt[Nt+1]=st.y,Zt[Nt+2]=st.z,Zt[Nt+3]=st.w,Zt[Nt+4]=ht.x,Zt[Nt+5]=ht.y,Zt[Nt+6]=ht.z,Zt[Nt+7]=ht.w,Zt[Nt+8]=lt.x,Zt[Nt+9]=lt.y,Zt[Nt+10]=lt.z,Zt[Nt+11]=lt.w,Zt[Nt+12]=ct.x,Zt[Nt+13]=ct.y,Zt[Nt+14]=ct.z,Zt[Nt+15]=ct.w,ft=vi[Fe.a],Et=vi[Fe.b],ut=vi[Fe.c],pt=vi[Fe.d],Kt[Nt]=ft.x,Kt[Nt+1]=ft.y,Kt[Nt+2]=ft.z,Kt[Nt+3]=1,Kt[Nt+4]=Et.x,Kt[Nt+5]=Et.y,Kt[Nt+6]=Et.z,Kt[Nt+7]=1,Kt[Nt+8]=ut.x,Kt[Nt+9]=ut.y,Kt[Nt+10]=ut.z,Kt[Nt+11]=1,Kt[Nt+12]=pt.x,Kt[Nt+13]=pt.y,Kt[Nt+14]=pt.z,Kt[Nt+15]=1,dt=Ti[Fe.a],mt=Ti[Fe.b],gt=Ti[Fe.c],vt=Ti[Fe.d],Qt[Nt]=dt.x,Qt[Nt+1]=dt.y,Qt[Nt+2]=dt.z,Qt[Nt+3]=1,Qt[Nt+4]=mt.x,Qt[Nt+5]=mt.y,Qt[Nt+6]=mt.z,Qt[Nt+7]=1,Qt[Nt+8]=gt.x,Qt[Nt+9]=gt.y,Qt[Nt+10]=gt.z,Qt[Nt+11]=1,Qt[Nt+12]=vt.x,Qt[Nt+13]=vt.y,Qt[Nt+14]=vt.z,Qt[Nt+15]=1,Nt+=16;Nt>0&&(F.bindBuffer(F.ARRAY_BUFFER,ye.__webglSkinVertexABuffer),F.bufferData(F.ARRAY_BUFFER,Kt,He),F.bindBuffer(F.ARRAY_BUFFER,ye.__webglSkinVertexBBuffer),F.bufferData(F.ARRAY_BUFFER,Qt,He),F.bindBuffer(F.ARRAY_BUFFER,ye.__webglSkinIndicesBuffer),F.bufferData(F.ARRAY_BUFFER,Zt,He),F.bindBuffer(F.ARRAY_BUFFER,ye.__webglSkinWeightsBuffer),F.bufferData(F.ARRAY_BUFFER,Jt,He))}if(ci&&Se){for(Ce=0,Le=ui.length;Ce<Le;Ce++)Ve=(Fe=di[ui[Ce]]).vertexColors,Be=Fe.color,3===Ve.length&&Se===THREE.VertexColors?($e=Ve[0],et=Ve[1],tt=Ve[2]):tt=et=$e=Be,qt[zt]=$e.r,qt[zt+1]=$e.g,qt[zt+2]=$e.b,qt[zt+3]=et.r,qt[zt+4]=et.g,qt[zt+5]=et.b,qt[zt+6]=tt.r,qt[zt+7]=tt.g,qt[zt+8]=tt.b,zt+=9;for(Ce=0,Le=pi.length;Ce<Le;Ce++)Ve=(Fe=di[pi[Ce]]).vertexColors,Be=Fe.color,4===Ve.length&&Se===THREE.VertexColors?($e=Ve[0],et=Ve[1],tt=Ve[2],it=Ve[3]):it=tt=et=$e=Be,qt[zt]=$e.r,qt[zt+1]=$e.g,qt[zt+2]=$e.b,qt[zt+3]=et.r,qt[zt+4]=et.g,qt[zt+5]=et.b,qt[zt+6]=tt.r,qt[zt+7]=tt.g,qt[zt+8]=tt.b,qt[zt+9]=it.r,qt[zt+10]=it.g,qt[zt+11]=it.b,zt+=12;zt>0&&(F.bindBuffer(F.ARRAY_BUFFER,ye.__webglColorBuffer),F.bufferData(F.ARRAY_BUFFER,qt,He))}if(li&&ni.hasTangents){for(Ce=0,Le=ui.length;Ce<Le;Ce++)je=(ze=(Fe=di[ui[Ce]]).vertexTangents)[0],Xe=ze[1],Ye=ze[2],Yt[Vt]=je.x,Yt[Vt+1]=je.y,Yt[Vt+2]=je.z,Yt[Vt+3]=je.w,Yt[Vt+4]=Xe.x,Yt[Vt+5]=Xe.y,Yt[Vt+6]=Xe.z,Yt[Vt+7]=Xe.w,Yt[Vt+8]=Ye.x,Yt[Vt+9]=Ye.y,Yt[Vt+10]=Ye.z,Yt[Vt+11]=Ye.w,Vt+=12;for(Ce=0,Le=pi.length;Ce<Le;Ce++)je=(ze=(Fe=di[pi[Ce]]).vertexTangents)[0],Xe=ze[1],Ye=ze[2],qe=ze[3],Yt[Vt]=je.x,Yt[Vt+1]=je.y,Yt[Vt+2]=je.z,Yt[Vt+3]=je.w,Yt[Vt+4]=Xe.x,Yt[Vt+5]=Xe.y,Yt[Vt+6]=Xe.z,Yt[Vt+7]=Xe.w,Yt[Vt+8]=Ye.x,Yt[Vt+9]=Ye.y,Yt[Vt+10]=Ye.z,Yt[Vt+11]=Ye.w,Yt[Vt+12]=qe.x,Yt[Vt+13]=qe.y,Yt[Vt+14]=qe.z,Yt[Vt+15]=qe.w,Vt+=16;F.bindBuffer(F.ARRAY_BUFFER,ye.__webglTangentBuffer),F.bufferData(F.ARRAY_BUFFER,Yt,He)}if(hi&&_e){for(Ce=0,Le=ui.length;Ce<Le;Ce++)if(Ue=(Fe=di[ui[Ce]]).vertexNormals,De=Fe.normal,3===Ue.length&&Ae)for(Tt=0;Tt<3;Tt++)yt=Ue[Tt],Xt[Dt]=yt.x,Xt[Dt+1]=yt.y,Xt[Dt+2]=yt.z,Dt+=3;else for(Tt=0;Tt<3;Tt++)Xt[Dt]=De.x,Xt[Dt+1]=De.y,Xt[Dt+2]=De.z,Dt+=3;for(Ce=0,Le=pi.length;Ce<Le;Ce++)if(Ue=(Fe=di[pi[Ce]]).vertexNormals,De=Fe.normal,4===Ue.length&&Ae)for(Tt=0;Tt<4;Tt++)yt=Ue[Tt],Xt[Dt]=yt.x,Xt[Dt+1]=yt.y,Xt[Dt+2]=yt.z,Dt+=3;else for(Tt=0;Tt<4;Tt++)Xt[Dt]=De.x,Xt[Dt+1]=De.y,Xt[Dt+2]=De.z,Dt+=3;F.bindBuffer(F.ARRAY_BUFFER,ye.__webglNormalBuffer),F.bufferData(F.ARRAY_BUFFER,Xt,He)}if(si&&mi&&Me){for(Ce=0,Le=ui.length;Ce<Le;Ce++)if(Fe=di[Pe=ui[Ce]],void 0!==(Ne=mi[Pe]))for(Tt=0;Tt<3;Tt++)xt=Ne[Tt],Gt[Pt]=xt.u,Gt[Pt+1]=xt.v,Pt+=2;for(Ce=0,Le=pi.length;Ce<Le;Ce++)if(Fe=di[Pe=pi[Ce]],void 0!==(Ne=mi[Pe]))for(Tt=0;Tt<4;Tt++)xt=Ne[Tt],Gt[Pt]=xt.u,Gt[Pt+1]=xt.v,Pt+=2;Pt>0&&(F.bindBuffer(F.ARRAY_BUFFER,ye.__webglUVBuffer),F.bufferData(F.ARRAY_BUFFER,Gt,He))}if(si&&gi&&Me){for(Ce=0,Le=ui.length;Ce<Le;Ce++)if(Fe=di[Pe=ui[Ce]],void 0!==(ke=gi[Pe]))for(Tt=0;Tt<3;Tt++)Ht=ke[Tt],jt[Ft]=Ht.u,jt[Ft+1]=Ht.v,Ft+=2;for(Ce=0,Le=pi.length;Ce<Le;Ce++)if(Fe=di[Pe=pi[Ce]],void 0!==(ke=gi[Pe]))for(Tt=0;Tt<4;Tt++)Ht=ke[Tt],jt[Ft]=Ht.u,jt[Ft+1]=Ht.v,Ft+=2;Ft>0&&(F.bindBuffer(F.ARRAY_BUFFER,ye.__webglUV2Buffer),F.bufferData(F.ARRAY_BUFFER,jt,He))}if(ai){for(Ce=0,Le=ui.length;Ce<Le;Ce++)Fe=di[ui[Ce]],ri[Ut]=Ct,ri[Ut+1]=Ct+1,ri[Ut+2]=Ct+2,Ut+=3,oi[Bt]=Ct,oi[Bt+1]=Ct+1,oi[Bt+2]=Ct,oi[Bt+3]=Ct+2,oi[Bt+4]=Ct+1,oi[Bt+5]=Ct+2,Bt+=6,Ct+=3;for(Ce=0,Le=pi.length;Ce<Le;Ce++)Fe=di[pi[Ce]],ri[Ut]=Ct,ri[Ut+1]=Ct+1,ri[Ut+2]=Ct+3,ri[Ut+3]=Ct+1,ri[Ut+4]=Ct+2,ri[Ut+5]=Ct+3,Ut+=6,oi[Bt]=Ct,oi[Bt+1]=Ct+1,oi[Bt+2]=Ct,oi[Bt+3]=Ct+3,oi[Bt+4]=Ct+1,oi[Bt+5]=Ct+2,oi[Bt+6]=Ct+2,oi[Bt+7]=Ct+3,Bt+=8,Ct+=4;F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,ye.__webglFaceBuffer),F.bufferData(F.ELEMENT_ARRAY_BUFFER,ri,He),F.bindBuffer(F.ELEMENT_ARRAY_BUFFER,ye.__webglLineBuffer),F.bufferData(F.ELEMENT_ARRAY_BUFFER,oi,He)}if(ti)for(Tt=0,Rt=ti.length;Tt<Rt;Tt++)if((ii=ti[Tt]).__original.needsUpdate){if(Ot=0,1===ii.size){if(void 0===ii.boundTo||"vertices"===ii.boundTo){for(Ce=0,Le=ui.length;Ce<Le;Ce++)Fe=di[ui[Ce]],ii.array[Ot]=ii.value[Fe.a],ii.array[Ot+1]=ii.value[Fe.b],ii.array[Ot+2]=ii.value[Fe.c],Ot+=3;for(Ce=0,Le=pi.length;Ce<Le;Ce++)Fe=di[pi[Ce]],ii.array[Ot]=ii.value[Fe.a],ii.array[Ot+1]=ii.value[Fe.b],ii.array[Ot+2]=ii.value[Fe.c],ii.array[Ot+3]=ii.value[Fe.d],Ot+=4}else if("faces"===ii.boundTo){for(Ce=0,Le=ui.length;Ce<Le;Ce++)It=ii.value[ui[Ce]],ii.array[Ot]=It,ii.array[Ot+1]=It,ii.array[Ot+2]=It,Ot+=3;for(Ce=0,Le=pi.length;Ce<Le;Ce++)It=ii.value[pi[Ce]],ii.array[Ot]=It,ii.array[Ot+1]=It,ii.array[Ot+2]=It,ii.array[Ot+3]=It,Ot+=4}}else if(2===ii.size){if(void 0===ii.boundTo||"vertices"===ii.boundTo){for(Ce=0,Le=ui.length;Ce<Le;Ce++)Fe=di[ui[Ce]],Oe=ii.value[Fe.a],Ie=ii.value[Fe.b],We=ii.value[Fe.c],ii.array[Ot]=Oe.x,ii.array[Ot+1]=Oe.y,ii.array[Ot+2]=Ie.x,ii.array[Ot+3]=Ie.y,ii.array[Ot+4]=We.x,ii.array[Ot+5]=We.y,Ot+=6;for(Ce=0,Le=pi.length;Ce<Le;Ce++)Fe=di[pi[Ce]],Oe=ii.value[Fe.a],Ie=ii.value[Fe.b],We=ii.value[Fe.c],Ge=ii.value[Fe.d],ii.array[Ot]=Oe.x,ii.array[Ot+1]=Oe.y,ii.array[Ot+2]=Ie.x,ii.array[Ot+3]=Ie.y,ii.array[Ot+4]=We.x,ii.array[Ot+5]=We.y,ii.array[Ot+6]=Ge.x,ii.array[Ot+7]=Ge.y,Ot+=8}else if("faces"===ii.boundTo){for(Ce=0,Le=ui.length;Ce<Le;Ce++)We=Ie=Oe=It=ii.value[ui[Ce]],ii.array[Ot]=Oe.x,ii.array[Ot+1]=Oe.y,ii.array[Ot+2]=Ie.x,ii.array[Ot+3]=Ie.y,ii.array[Ot+4]=We.x,ii.array[Ot+5]=We.y,Ot+=6;for(Ce=0,Le=pi.length;Ce<Le;Ce++)Ge=We=Ie=Oe=It=ii.value[pi[Ce]],ii.array[Ot]=Oe.x,ii.array[Ot+1]=Oe.y,ii.array[Ot+2]=Ie.x,ii.array[Ot+3]=Ie.y,ii.array[Ot+4]=We.x,ii.array[Ot+5]=We.y,ii.array[Ot+6]=Ge.x,ii.array[Ot+7]=Ge.y,Ot+=8}}else if(3===ii.size){var bi;if(bi="c"===ii.type?["r","g","b"]:["x","y","z"],void 0===ii.boundTo||"vertices"===ii.boundTo){for(Ce=0,Le=ui.length;Ce<Le;Ce++)Fe=di[ui[Ce]],Oe=ii.value[Fe.a],Ie=ii.value[Fe.b],We=ii.value[Fe.c],ii.array[Ot]=Oe[bi[0]],ii.array[Ot+1]=Oe[bi[1]],ii.array[Ot+2]=Oe[bi[2]],ii.array[Ot+3]=Ie[bi[0]],ii.array[Ot+4]=Ie[bi[1]],ii.array[Ot+5]=Ie[bi[2]],ii.array[Ot+6]=We[bi[0]],ii.array[Ot+7]=We[bi[1]],ii.array[Ot+8]=We[bi[2]],Ot+=9;for(Ce=0,Le=pi.length;Ce<Le;Ce++)Fe=di[pi[Ce]],Oe=ii.value[Fe.a],Ie=ii.value[Fe.b],We=ii.value[Fe.c],Ge=ii.value[Fe.d],ii.array[Ot]=Oe[bi[0]],ii.array[Ot+1]=Oe[bi[1]],ii.array[Ot+2]=Oe[bi[2]],ii.array[Ot+3]=Ie[bi[0]],ii.array[Ot+4]=Ie[bi[1]],ii.array[Ot+5]=Ie[bi[2]],ii.array[Ot+6]=We[bi[0]],ii.array[Ot+7]=We[bi[1]],ii.array[Ot+8]=We[bi[2]],ii.array[Ot+9]=Ge[bi[0]],ii.array[Ot+10]=Ge[bi[1]],ii.array[Ot+11]=Ge[bi[2]],Ot+=12}else if("faces"===ii.boundTo){for(Ce=0,Le=ui.length;Ce<Le;Ce++)We=Ie=Oe=It=ii.value[ui[Ce]],ii.array[Ot]=Oe[bi[0]],ii.array[Ot+1]=Oe[bi[1]],ii.array[Ot+2]=Oe[bi[2]],ii.array[Ot+3]=Ie[bi[0]],ii.array[Ot+4]=Ie[bi[1]],ii.array[Ot+5]=Ie[bi[2]],ii.array[Ot+6]=We[bi[0]],ii.array[Ot+7]=We[bi[1]],ii.array[Ot+8]=We[bi[2]],Ot+=9;for(Ce=0,Le=pi.length;Ce<Le;Ce++)Ge=We=Ie=Oe=It=ii.value[pi[Ce]],ii.array[Ot]=Oe[bi[0]],ii.array[Ot+1]=Oe[bi[1]],ii.array[Ot+2]=Oe[bi[2]],ii.array[Ot+3]=Ie[bi[0]],ii.array[Ot+4]=Ie[bi[1]],ii.array[Ot+5]=Ie[bi[2]],ii.array[Ot+6]=We[bi[0]],ii.array[Ot+7]=We[bi[1]],ii.array[Ot+8]=We[bi[2]],ii.array[Ot+9]=Ge[bi[0]],ii.array[Ot+10]=Ge[bi[1]],ii.array[Ot+11]=Ge[bi[2]],Ot+=12}}else if(4===ii.size)if(void 0===ii.boundTo||"vertices"===ii.boundTo){for(Ce=0,Le=ui.length;Ce<Le;Ce++)Fe=di[ui[Ce]],Oe=ii.value[Fe.a],Ie=ii.value[Fe.b],We=ii.value[Fe.c],ii.array[Ot]=Oe.x,ii.array[Ot+1]=Oe.y,ii.array[Ot+2]=Oe.z,ii.array[Ot+3]=Oe.w,ii.array[Ot+4]=Ie.x,ii.array[Ot+5]=Ie.y,ii.array[Ot+6]=Ie.z,ii.array[Ot+7]=Ie.w,ii.array[Ot+8]=We.x,ii.array[Ot+9]=We.y,ii.array[Ot+10]=We.z,ii.array[Ot+11]=We.w,Ot+=12;for(Ce=0,Le=pi.length;Ce<Le;Ce++)Fe=di[pi[Ce]],Oe=ii.value[Fe.a],Ie=ii.value[Fe.b],We=ii.value[Fe.c],Ge=ii.value[Fe.d],ii.array[Ot]=Oe.x,ii.array[Ot+1]=Oe.y,ii.array[Ot+2]=Oe.z,ii.array[Ot+3]=Oe.w,ii.array[Ot+4]=Ie.x,ii.array[Ot+5]=Ie.y,ii.array[Ot+6]=Ie.z,ii.array[Ot+7]=Ie.w,ii.array[Ot+8]=We.x,ii.array[Ot+9]=We.y,ii.array[Ot+10]=We.z,ii.array[Ot+11]=We.w,ii.array[Ot+12]=Ge.x,ii.array[Ot+13]=Ge.y,ii.array[Ot+14]=Ge.z,ii.array[Ot+15]=Ge.w,Ot+=16}else if("faces"===ii.boundTo){for(Ce=0,Le=ui.length;Ce<Le;Ce++)We=Ie=Oe=It=ii.value[ui[Ce]],ii.array[Ot]=Oe.x,ii.array[Ot+1]=Oe.y,ii.array[Ot+2]=Oe.z,ii.array[Ot+3]=Oe.w,ii.array[Ot+4]=Ie.x,ii.array[Ot+5]=Ie.y,ii.array[Ot+6]=Ie.z,ii.array[Ot+7]=Ie.w,ii.array[Ot+8]=We.x,ii.array[Ot+9]=We.y,ii.array[Ot+10]=We.z,ii.array[Ot+11]=We.w,Ot+=12;for(Ce=0,Le=pi.length;Ce<Le;Ce++)Ge=We=Ie=Oe=It=ii.value[pi[Ce]],ii.array[Ot]=Oe.x,ii.array[Ot+1]=Oe.y,ii.array[Ot+2]=Oe.z,ii.array[Ot+3]=Oe.w,ii.array[Ot+4]=Ie.x,ii.array[Ot+5]=Ie.y,ii.array[Ot+6]=Ie.z,ii.array[Ot+7]=Ie.w,ii.array[Ot+8]=We.x,ii.array[Ot+9]=We.y,ii.array[Ot+10]=We.z,ii.array[Ot+11]=We.w,ii.array[Ot+12]=Ge.x,ii.array[Ot+13]=Ge.y,ii.array[Ot+14]=Ge.z,ii.array[Ot+15]=Ge.w,Ot+=16}F.bindBuffer(F.ARRAY_BUFFER,ii.buffer),F.bufferData(F.ARRAY_BUFFER,ii.array,He)}be&&(delete ye.__inittedArrays,delete ye.__colorArray,delete ye.__normalArray,delete ye.__tangentArray,delete ye.__uvArray,delete ye.__uv2Array,delete ye.__faceArray,delete ye.__vertexArray,delete ye.__lineArray,delete ye.__skinVertexAArray,delete ye.__skinVertexBArray,delete ye.__skinIndexArray,delete ye.__skinWeightArray)}}de.verticesNeedUpdate=!1,de.morphTargetsNeedUpdate=!1,de.elementsNeedUpdate=!1,de.uvsNeedUpdate=!1,de.normalsNeedUpdate=!1,de.colorsNeedUpdate=!1,de.tangetsNeedUpdate=!1,ve.attributes&&E(ve)}else if(pe instanceof THREE.Ribbon){if(de.verticesNeedUpdate||de.colorsNeedUpdate){var wi=de,_i=F.DYNAMIC_DRAW,Si=void 0,Mi=void 0,Ai=void 0,Ci=void 0,Li=void 0,Pi=wi.vertices,Fi=wi.colors,Ui=Pi.length,Di=Fi.length,Vi=wi.__vertexArray,Bi=wi.__colorArray,zi=wi.colorsNeedUpdate;if(wi.verticesNeedUpdate){for(Si=0;Si<Ui;Si++)Ai=Pi[Si],Vi[Ci=3*Si]=Ai.x,Vi[Ci+1]=Ai.y,Vi[Ci+2]=Ai.z;F.bindBuffer(F.ARRAY_BUFFER,wi.__webglVertexBuffer),F.bufferData(F.ARRAY_BUFFER,Vi,_i)}if(zi){for(Mi=0;Mi<Di;Mi++)Li=Fi[Mi],Bi[Ci=3*Mi]=Li.r,Bi[Ci+1]=Li.g,Bi[Ci+2]=Li.b;F.bindBuffer(F.ARRAY_BUFFER,wi.__webglColorBuffer),F.bufferData(F.ARRAY_BUFFER,Bi,_i)}}de.verticesNeedUpdate=!1,de.colorsNeedUpdate=!1}else if(pe instanceof THREE.Line){if(ge=(ve=i(pe,me)).attributes&&f(ve),de.verticesNeedUpdate||de.colorsNeedUpdate||ge){var Ni=de,ki=F.DYNAMIC_DRAW,Oi=void 0,Ii=void 0,Wi=void 0,Gi=void 0,ji=void 0,Xi=Ni.vertices,Yi=Ni.colors,qi=Xi.length,Ki=Yi.length,Qi=Ni.__vertexArray,Zi=Ni.__colorArray,Ji=Ni.colorsNeedUpdate,$i=Ni.__webglCustomAttributesList,er=void 0,tr=void 0,ir=void 0,rr=void 0,or=void 0,nr=void 0;if(Ni.verticesNeedUpdate){for(Oi=0;Oi<qi;Oi++)Wi=Xi[Oi],Qi[Gi=3*Oi]=Wi.x,Qi[Gi+1]=Wi.y,Qi[Gi+2]=Wi.z;F.bindBuffer(F.ARRAY_BUFFER,Ni.__webglVertexBuffer),F.bufferData(F.ARRAY_BUFFER,Qi,ki)}if(Ji){for(Ii=0;Ii<Ki;Ii++)ji=Yi[Ii],Zi[Gi=3*Ii]=ji.r,Zi[Gi+1]=ji.g,Zi[Gi+2]=ji.b;F.bindBuffer(F.ARRAY_BUFFER,Ni.__webglColorBuffer),F.bufferData(F.ARRAY_BUFFER,Zi,ki)}if($i)for(er=0,tr=$i.length;er<tr;er++)if((nr=$i[er]).needsUpdate&&(void 0===nr.boundTo||"vertices"===nr.boundTo)){if(Gi=0,rr=nr.value.length,1===nr.size)for(ir=0;ir<rr;ir++)nr.array[ir]=nr.value[ir];else if(2===nr.size)for(ir=0;ir<rr;ir++)or=nr.value[ir],nr.array[Gi]=or.x,nr.array[Gi+1]=or.y,Gi+=2;else if(3===nr.size)if("c"===nr.type)for(ir=0;ir<rr;ir++)or=nr.value[ir],nr.array[Gi]=or.r,nr.array[Gi+1]=or.g,nr.array[Gi+2]=or.b,Gi+=3;else for(ir=0;ir<rr;ir++)or=nr.value[ir],nr.array[Gi]=or.x,nr.array[Gi+1]=or.y,nr.array[Gi+2]=or.z,Gi+=3;else if(4===nr.size)for(ir=0;ir<rr;ir++)or=nr.value[ir],nr.array[Gi]=or.x,nr.array[Gi+1]=or.y,nr.array[Gi+2]=or.z,nr.array[Gi+3]=or.w,Gi+=4;F.bindBuffer(F.ARRAY_BUFFER,nr.buffer),F.bufferData(F.ARRAY_BUFFER,nr.array,ki)}}de.verticesNeedUpdate=!1,de.colorsNeedUpdate=!1,ve.attributes&&E(ve)}else pe instanceof THREE.ParticleSystem&&(ge=(ve=i(pe,me)).attributes&&f(ve),(de.verticesNeedUpdate||de.colorsNeedUpdate||pe.sortParticles||ge)&&n(de,F.DYNAMIC_DRAW,pe),de.verticesNeedUpdate=!1,de.colorsNeedUpdate=!1,ve.attributes&&E(ve))}},this.initMaterial=function(e,t,i,r){var o,n,a,s,h,l,c,f;if(e instanceof THREE.MeshDepthMaterial?a="depth":e instanceof THREE.MeshNormalMaterial?a="normal":e instanceof THREE.MeshBasicMaterial?a="basic":e instanceof THREE.MeshLambertMaterial?a="lambert":e instanceof THREE.MeshPhongMaterial?a="phong":e instanceof THREE.LineBasicMaterial?a="basic":e instanceof THREE.ParticleBasicMaterial&&(a="particle_basic"),a){var E=THREE.ShaderLib[a];e.uniforms=THREE.UniformsUtils.clone(E.uniforms),e.vertexShader=E.vertexShader,e.fragmentShader=E.fragmentShader}for(s=c=f=E=0,h=t.length;s<h;s++)(l=t[s]).onlyShadow||(l instanceof THREE.DirectionalLight&&c++,l instanceof THREE.PointLight&&f++,l instanceof THREE.SpotLight&&E++);f+E+c<=P?(h=c,l=f,c=E):(h=Math.ceil(P*c/(f+c)),c=l=P-h);var u=0;E=0;for(f=t.length;E<f;E++)(s=t[E]).castShadow&&(s instanceof THREE.SpotLight&&u++,s instanceof THREE.DirectionalLight&&!s.shadowCascade&&u++);var p,d=50;void 0!==r&&r instanceof THREE.SkinnedMesh&&(d=r.bones.length);e:{f=e.fragmentShader,s=e.vertexShader;var m;E=e.uniforms,t=e.attributes,i={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,vertexColors:e.vertexColors,fog:i,useFog:e.fog,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:d,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:h,maxPointLights:l,maxSpotLights:c,maxShadows:u,shadowMapEnabled:this.shadowMapEnabled&&r.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:r&&r.doubleSided},r=[];for(m in a?r.push(a):(r.push(f),r.push(s)),i)r.push(m),r.push(i[m]);for(a=r.join(),m=0,r=D.length;m<r;m++)if(D[m].code===a){p=D[m].program;break e}m=F.createProgram(),r=["precision "+b+" float;",ue>0?"#define VERTEX_TEXTURES":"",U.gammaInput?"#define GAMMA_INPUT":"",U.gammaOutput?"#define GAMMA_OUTPUT":"",U.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_SHADOWS "+i.maxShadows,"#define MAX_BONES "+i.maxBones,i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.vertexColors?"#define USE_COLOR":"",i.skinning?"#define USE_SKINNING":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals?"#define USE_MORPHNORMALS":"",i.perPixel?"#define PHONG_PER_PIXEL":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapSoft?"#define SHADOWMAP_SOFT":"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n"),h=["precision "+b+" float;","#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_SHADOWS "+i.maxShadows,i.alphaTest?"#define ALPHATEST "+i.alphaTest:"",U.gammaInput?"#define GAMMA_INPUT":"",U.gammaOutput?"#define GAMMA_OUTPUT":"",U.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.vertexColors?"#define USE_COLOR":"",i.metal?"#define METAL":"",i.perPixel?"#define PHONG_PER_PIXEL":"",i.wrapAround?"#define WRAP_AROUND":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapSoft?"#define SHADOWMAP_SOFT":"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"),F.attachShader(m,v("fragment",h+f)),F.attachShader(m,v("vertex",r+s)),F.linkProgram(m),F.getProgramParameter(m,F.LINK_STATUS),m.uniforms={},m.attributes={};var g;r=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","boneGlobalMatrices","morphTargetInfluences"];for(g in E)r.push(g);for(g=r,r=0,E=g.length;r<E;r++)f=g[r],m.uniforms[f]=F.getUniformLocation(m,f);for(r=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"],g=0;g<i.maxMorphTargets;g++)r.push("morphTarget"+g);for(g=0;g<i.maxMorphNormals;g++)r.push("morphNormal"+g);for(p in t)r.push(p);for(g=0,t=(p=r).length;g<t;g++)i=p[g],m.attributes[i]=F.getAttribLocation(m,i);m.id=D.length,D.push({program:m,code:a}),U.info.memory.programs=D.length,p=m}if(e.program=p,(p=e.program.attributes).position>=0&&F.enableVertexAttribArray(p.position),p.color>=0&&F.enableVertexAttribArray(p.color),p.normal>=0&&F.enableVertexAttribArray(p.normal),p.tangent>=0&&F.enableVertexAttribArray(p.tangent),e.skinning&&p.skinVertexA>=0&&p.skinVertexB>=0&&p.skinIndex>=0&&p.skinWeight>=0&&(F.enableVertexAttribArray(p.skinVertexA),F.enableVertexAttribArray(p.skinVertexB),F.enableVertexAttribArray(p.skinIndex),F.enableVertexAttribArray(p.skinWeight)),e.attributes)for(n in e.attributes)void 0!==p[n]&&p[n]>=0&&F.enableVertexAttribArray(p[n]);if(e.morphTargets)for(e.numSupportedMorphTargets=0,m="morphTarget",n=0;n<this.maxMorphTargets;n++)p[g=m+n]>=0&&(F.enableVertexAttribArray(p[g]),e.numSupportedMorphTargets++);if(e.morphNormals)for(e.numSupportedMorphNormals=0,m="morphNormal",n=0;n<this.maxMorphNormals;n++)p[g=m+n]>=0&&(F.enableVertexAttribArray(p[g]),e.numSupportedMorphNormals++);for(o in e.uniformsList=[],e.uniforms)e.uniformsList.push([e.uniforms[o],o])},this.setFaceCulling=function(e,t){e?(t&&"ccw"!==t?F.frontFace(F.CW):F.frontFace(F.CCW),"back"===e?F.cullFace(F.BACK):"front"===e?F.cullFace(F.FRONT):F.cullFace(F.FRONT_AND_BACK),F.enable(F.CULL_FACE)):F.disable(F.CULL_FACE)},this.setObjectFaces=function(e){I!==e.doubleSided&&(e.doubleSided?F.disable(F.CULL_FACE):F.enable(F.CULL_FACE),I=e.doubleSided),W!==e.flipSided&&(e.flipSided?F.frontFace(F.CW):F.frontFace(F.CCW),W=e.flipSided)},this.setDepthTest=function(e){q!==e&&(e?F.enable(F.DEPTH_TEST):F.disable(F.DEPTH_TEST),q=e)},this.setDepthWrite=function(e){K!==e&&(F.depthMask(e),K=e)},this.setBlending=function(e,t,i,r){if(e!==G){switch(e){case THREE.NoBlending:F.disable(F.BLEND);break;case THREE.AdditiveBlending:F.enable(F.BLEND),F.blendEquation(F.FUNC_ADD),F.blendFunc(F.SRC_ALPHA,F.ONE);break;case THREE.SubtractiveBlending:F.enable(F.BLEND),F.blendEquation(F.FUNC_ADD),F.blendFunc(F.ZERO,F.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:F.enable(F.BLEND),F.blendEquation(F.FUNC_ADD),F.blendFunc(F.ZERO,F.SRC_COLOR);break;case THREE.CustomBlending:F.enable(F.BLEND);break;default:F.enable(F.BLEND),F.blendEquationSeparate(F.FUNC_ADD,F.FUNC_ADD),F.blendFuncSeparate(F.SRC_ALPHA,F.ONE_MINUS_SRC_ALPHA,F.ONE,F.ONE_MINUS_SRC_ALPHA)}G=e}e===THREE.CustomBlending?(t!==j&&(F.blendEquation(x(t)),j=t),i===X&&r===Y||(F.blendFunc(x(i),x(r)),X=i,Y=r)):Y=X=j=null},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.__webglTexture=F.createTexture(),U.info.memory.textures++),F.activeTexture(F.TEXTURE0+t),F.bindTexture(F.TEXTURE_2D,e.__webglTexture),F.pixelStorei(F.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha);var i=e.image,r=0==(i.width&i.width-1)&&0==(i.height&i.height-1),o=x(e.format),n=x(e.type);T(F.TEXTURE_2D,e,r),e instanceof THREE.DataTexture?F.texImage2D(F.TEXTURE_2D,0,o,i.width,i.height,0,o,n,i.data):F.texImage2D(F.TEXTURE_2D,0,o,o,n,e.image),e.generateMipmaps&&r&&F.generateMipmap(F.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else F.activeTexture(F.TEXTURE0+t),F.bindTexture(F.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.__webglTexture=F.createTexture();var i=0==(e.width&e.width-1)&&0==(e.height&e.height-1),r=x(e.format),o=x(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],F.bindTexture(F.TEXTURE_CUBE_MAP,e.__webglTexture),T(F.TEXTURE_CUBE_MAP,e,i);for(var n=0;n<6;n++){e.__webglFramebuffer[n]=F.createFramebuffer(),e.__webglRenderbuffer[n]=F.createRenderbuffer(),F.texImage2D(F.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,r,e.width,e.height,0,r,o,null);var a=e,s=F.TEXTURE_CUBE_MAP_POSITIVE_X+n;F.bindFramebuffer(F.FRAMEBUFFER,e.__webglFramebuffer[n]),F.framebufferTexture2D(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0,s,a.__webglTexture,0),R(e.__webglRenderbuffer[n],e)}i&&F.generateMipmap(F.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=F.createFramebuffer(),e.__webglRenderbuffer=F.createRenderbuffer(),F.bindTexture(F.TEXTURE_2D,e.__webglTexture),T(F.TEXTURE_2D,e,i),F.texImage2D(F.TEXTURE_2D,0,r,e.width,e.height,0,r,o,null),r=F.TEXTURE_2D,F.bindFramebuffer(F.FRAMEBUFFER,e.__webglFramebuffer),F.framebufferTexture2D(F.FRAMEBUFFER,F.COLOR_ATTACHMENT0,r,e.__webglTexture,0),R(e.__webglRenderbuffer,e),i&&F.generateMipmap(F.TEXTURE_2D);t?F.bindTexture(F.TEXTURE_CUBE_MAP,null):F.bindTexture(F.TEXTURE_2D,null),F.bindRenderbuffer(F.RENDERBUFFER,null),F.bindFramebuffer(F.FRAMEBUFFER,null)}e?(t=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,i=e.width,e=e.height,o=r=0):(t=null,i=ie,e=re,r=ee,o=te),t!==B&&(F.bindFramebuffer(F.FRAMEBUFFER,t),F.viewport(r,o,i,e),B=t),oe=i,ne=e},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,i){this.width=e,this.height=t,i=i||{},this.wrapS=void 0!==i.wrapS?i.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i.wrapT?i.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==i.magFilter?i.magFilter:THREE.LinearFilter,this.minFilter=void 0!==i.minFilter?i.minFilter:THREE.LinearMipMapLinearFilter,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==i.format?i.format:THREE.RGBAFormat,this.type=void 0!==i.type?i.type:THREE.UnsignedByteType,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0===i.stencilBuffer||i.stencilBuffer,this.generateMipmaps=!0},THREE.WebGLRenderTarget.prototype.clone=function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e},THREE.WebGLRenderTargetCube=function(e,t,i){THREE.WebGLRenderTarget.call(this,e,t,i),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget,THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube,THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidWorld=new THREE.Vector3,this.centroidScreen=new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.faceMaterial=this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.v4=new THREE.RenderableVertex,this.centroidWorld=new THREE.Vector3,this.centroidScreen=new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.faceMaterial=this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableObject=function(){this.z=this.object=null},THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.z=null,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.material=null},THREE.ColorUtils={adjustHSV:function(e,t,i,r){var o=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(e,o),o.h=THREE.Math.clamp(o.h+t,0,1),o.s=THREE.Math.clamp(o.s+i,0,1),o.v=THREE.Math.clamp(o.v+r,0,1),e.setHSV(o.h,o.s,o.v)},rgbToHsv:function(e,t){var i=e.r,r=e.g,o=e.b,n=Math.max(Math.max(i,r),o);if((s=Math.min(Math.min(i,r),o))===n)s=i=0;else{var a=n-s,s=a/n;(i=(i===n?(r-o)/a:r===n?2+(o-i)/a:4+(i-r)/a)/6)<0&&(i+=1),i>1&&(i-=1)}return void 0===t&&(t={h:0,s:0,v:0}),t.h=i,t.s=s,t.v=n,t}},THREE.ColorUtils.__hsv={h:0,s:0,v:0},THREE.GeometryUtils={merge:function(e,t){for(var i,r,o=e.vertices.length,n=t instanceof THREE.Mesh?t.geometry:t,a=e.vertices,s=n.vertices,h=e.faces,l=n.faces,c=e.faceVertexUvs[0],f=n.faceVertexUvs[0],E={},u=0;u<e.materials.length;u++)E[e.materials[u].id]=u;t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),i=t.matrix,(r=new THREE.Matrix4).extractRotation(i,t.scale));u=0;for(var p=s.length;u<p;u++){var d=s[u].clone();i&&i.multiplyVector3(d),a.push(d)}for(u=0,p=l.length;u<p;u++){var m,g,v=(a=l[u]).vertexNormals,T=a.vertexColors;for(a instanceof THREE.Face3?m=new THREE.Face3(a.a+o,a.b+o,a.c+o):a instanceof THREE.Face4&&(m=new THREE.Face4(a.a+o,a.b+o,a.c+o,a.d+o)),m.normal.copy(a.normal),r&&r.multiplyVector3(m.normal),s=0,d=v.length;s<d;s++)g=v[s].clone(),r&&r.multiplyVector3(g),m.vertexNormals.push(g);for(m.color.copy(a.color),s=0,d=T.length;s<d;s++)g=T[s],m.vertexColors.push(g.clone());void 0!==a.materialIndex&&(void 0===(T=E[d=(s=n.materials[a.materialIndex]).id])&&(T=e.materials.length,E[d]=T,e.materials.push(s)),m.materialIndex=T),m.centroid.copy(a.centroid),i&&i.multiplyVector3(m.centroid),h.push(m)}for(u=0,p=f.length;u<p;u++){for(r=[],s=0,d=(i=f[u]).length;s<d;s++)r.push(new THREE.UV(i[s].u,i[s].v));c.push(r)}},clone:function(e){var t,i=new THREE.Geometry,r=e.vertices,o=e.faces,n=e.faceVertexUvs[0];for(e.materials&&(i.materials=e.materials.slice()),e=0,t=r.length;e<t;e++)i.vertices.push(r[e].clone());for(e=0,t=o.length;e<t;e++)i.faces.push(o[e].clone());for(e=0,t=n.length;e<t;e++){o=[];for(var a=0,s=(r=n[e]).length;a<s;a++)o.push(new THREE.UV(r[a].u,r[a].v));i.faceVertexUvs[0].push(o)}return i},randomPointInTriangle:function(e,t,i){var r,o,n,a=new THREE.Vector3,s=THREE.GeometryUtils.__v1;return(r=THREE.GeometryUtils.random())+(o=THREE.GeometryUtils.random())>1&&(r=1-r,o=1-o),n=1-r-o,a.copy(e),a.multiplyScalar(r),s.copy(t),s.multiplyScalar(o),a.addSelf(s),s.copy(i),s.multiplyScalar(n),a.addSelf(s),a},randomPointInFace:function(e,t,i){var r,o,n;if(e instanceof THREE.Face3)return r=t.vertices[e.a],o=t.vertices[e.b],n=t.vertices[e.c],THREE.GeometryUtils.randomPointInTriangle(r,o,n);if(e instanceof THREE.Face4){r=t.vertices[e.a],o=t.vertices[e.b],n=t.vertices[e.c];var a;t=t.vertices[e.d];return i?e._area1&&e._area2?(i=e._area1,a=e._area2):(i=THREE.GeometryUtils.triangleArea(r,o,t),a=THREE.GeometryUtils.triangleArea(o,n,t),e._area1=i,e._area2=a):(i=THREE.GeometryUtils.triangleArea(r,o,t),a=THREE.GeometryUtils.triangleArea(o,n,t)),THREE.GeometryUtils.random()*(i+a)<i?THREE.GeometryUtils.randomPointInTriangle(r,o,t):THREE.GeometryUtils.randomPointInTriangle(o,n,t)}},randomPointsInGeometry:function(e,t){function i(e){return function t(i,r){if(r<i)return i;var o=i+Math.floor((r-i)/2);return u[o]>e?t(i,o-1):u[o]<e?t(o+1,r):o}(0,u.length-1)}var r,o,n,a,s,h,l=e.faces,c=e.vertices,f=l.length,E=0,u=[];for(o=0;o<f;o++)(r=l[o])instanceof THREE.Face3?(n=c[r.a],a=c[r.b],s=c[r.c],r._area=THREE.GeometryUtils.triangleArea(n,a,s)):r instanceof THREE.Face4&&(n=c[r.a],a=c[r.b],s=c[r.c],h=c[r.d],r._area1=THREE.GeometryUtils.triangleArea(n,a,h),r._area2=THREE.GeometryUtils.triangleArea(a,s,h),r._area=r._area1+r._area2),E+=r._area,u[o]=E;for(r=[],o=0;o<t;o++)c=i(c=THREE.GeometryUtils.random()*E),r[o]=THREE.GeometryUtils.randomPointInFace(l[c],e,!0);return r},triangleArea:function(e,t,i){var r,o=THREE.GeometryUtils.__v1;return o.sub(e,t),r=o.length(),o.sub(e,i),e=o.length(),o.sub(t,i),t=.5*(r+e+(i=o.length())),Math.sqrt(t*(t-r)*(t-e)*(t-i))},center:function(e){e.computeBoundingBox();var t=e.boundingBox,i=new THREE.Vector3;return i.add(t.min,t.max),i.multiplyScalar(-.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(i.x,i.y,i.z)),e.computeBoundingBox(),i},normalizeUVs:function(e){for(var t=0,i=(e=e.faceVertexUvs[0]).length;t<i;t++)for(var r=e[t],o=0,n=r.length;o<n;o++)1!==r[o].u&&(r[o].u=r[o].u-Math.floor(r[o].u)),1!==r[o].v&&(r[o].v=r[o].v-Math.floor(r[o].v))},triangulateQuads:function(e){var t,i,r,o,n=[],a=[],s=[];for(t=0,i=e.faceUvs.length;t<i;t++)a[t]=[];for(t=0,i=e.faceVertexUvs.length;t<i;t++)s[t]=[];for(t=0,i=e.faces.length;t<i;t++)if((r=e.faces[t])instanceof THREE.Face4){o=r.a;var h=r.b,l=r.c,c=r.d,f=new THREE.Face3,E=new THREE.Face3;for(f.color.copy(r.color),E.color.copy(r.color),f.materialIndex=r.materialIndex,E.materialIndex=r.materialIndex,f.a=o,f.b=h,f.c=c,E.a=h,E.b=l,E.c=c,4===r.vertexColors.length&&(f.vertexColors[0]=r.vertexColors[0].clone(),f.vertexColors[1]=r.vertexColors[1].clone(),f.vertexColors[2]=r.vertexColors[3].clone(),E.vertexColors[0]=r.vertexColors[1].clone(),E.vertexColors[1]=r.vertexColors[2].clone(),E.vertexColors[2]=r.vertexColors[3].clone()),n.push(f,E),r=0,o=e.faceVertexUvs.length;r<o;r++)e.faceVertexUvs[r].length&&(h=(f=e.faceVertexUvs[r][t])[1],l=f[2],c=f[3],f=[f[0].clone(),h.clone(),c.clone()],h=[h.clone(),l.clone(),c.clone()],s[r].push(f,h));for(r=0,o=e.faceUvs.length;r<o;r++)e.faceUvs[r].length&&(h=e.faceUvs[r][t],a[r].push(h,h))}else{for(n.push(r),r=0,o=e.faceUvs.length;r<o;r++)a[r].push(e.faceUvs[r]);for(r=0,o=e.faceVertexUvs.length;r<o;r++)s[r].push(e.faceVertexUvs[r])}e.faces=n,e.faceUvs=a,e.faceVertexUvs=s,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()},explode:function(e){for(var t=[],i=0,r=e.faces.length;i<r;i++){var o=t.length,n=e.faces[i];if(n instanceof THREE.Face4){var a=n.a,s=n.b,h=n.c,l=(a=e.vertices[a],s=e.vertices[s],h=e.vertices[h],e.vertices[n.d]);t.push(a.clone()),t.push(s.clone()),t.push(h.clone()),t.push(l.clone()),n.a=o,n.b=o+1,n.c=o+2,n.d=o+3}else a=n.a,s=n.b,h=n.c,a=e.vertices[a],s=e.vertices[s],h=e.vertices[h],t.push(a.clone()),t.push(s.clone()),t.push(h.clone()),n.a=o,n.b=o+1,n.c=o+2}e.vertices=t,delete e.__tmpVertices},tessellate:function(e,t){var i,r,o,n,a,s,h,l,c,f,E,u,p,d,m,g,v,T,R,y=[],x=[];for(i=0,r=e.faceVertexUvs.length;i<r;i++)x[i]=[];for(i=0,r=e.faces.length;i<r;i++)if((o=e.faces[i])instanceof THREE.Face3)if(n=o.a,a=o.b,s=o.c,l=e.vertices[n],c=e.vertices[a],f=e.vertices[s],u=l.distanceTo(c),p=c.distanceTo(f),E=l.distanceTo(f),u>t||p>t||E>t)for(h=e.vertices.length,T=o.clone(),R=o.clone(),u>=p&&u>=E?((l=l.clone()).lerpSelf(c,.5),T.a=n,T.b=h,T.c=s,R.a=h,R.b=a,R.c=s,3===o.vertexNormals.length&&((n=o.vertexNormals[0].clone()).lerpSelf(o.vertexNormals[1],.5),T.vertexNormals[1].copy(n),R.vertexNormals[0].copy(n)),3===o.vertexColors.length&&((n=o.vertexColors[0].clone()).lerpSelf(o.vertexColors[1],.5),T.vertexColors[1].copy(n),R.vertexColors[0].copy(n)),o=0):p>=u&&p>=E?((l=c.clone()).lerpSelf(f,.5),T.a=n,T.b=a,T.c=h,R.a=h,R.b=s,R.c=n,3===o.vertexNormals.length&&((n=o.vertexNormals[1].clone()).lerpSelf(o.vertexNormals[2],.5),T.vertexNormals[2].copy(n),R.vertexNormals[0].copy(n),R.vertexNormals[1].copy(o.vertexNormals[2]),R.vertexNormals[2].copy(o.vertexNormals[0])),3===o.vertexColors.length&&((n=o.vertexColors[1].clone()).lerpSelf(o.vertexColors[2],.5),T.vertexColors[2].copy(n),R.vertexColors[0].copy(n),R.vertexColors[1].copy(o.vertexColors[2]),R.vertexColors[2].copy(o.vertexColors[0])),o=1):((l=l.clone()).lerpSelf(f,.5),T.a=n,T.b=a,T.c=h,R.a=h,R.b=a,R.c=s,3===o.vertexNormals.length&&((n=o.vertexNormals[0].clone()).lerpSelf(o.vertexNormals[2],.5),T.vertexNormals[2].copy(n),R.vertexNormals[0].copy(n)),3===o.vertexColors.length&&((n=o.vertexColors[0].clone()).lerpSelf(o.vertexColors[2],.5),T.vertexColors[2].copy(n),R.vertexColors[0].copy(n)),o=2),y.push(T,R),e.vertices.push(l),n=0,a=e.faceVertexUvs.length;n<a;n++)e.faceVertexUvs[n].length&&(R=(l=e.faceVertexUvs[n][i])[0],s=l[1],T=l[2],0===o?((c=R.clone()).lerpSelf(s,.5),l=[R.clone(),c.clone(),T.clone()],s=[c.clone(),s.clone(),T.clone()]):1===o?((c=s.clone()).lerpSelf(T,.5),l=[R.clone(),s.clone(),c.clone()],s=[c.clone(),T.clone(),R.clone()]):((c=R.clone()).lerpSelf(T,.5),l=[R.clone(),s.clone(),c.clone()],s=[c.clone(),s.clone(),T.clone()]),x[n].push(l,s));else for(y.push(o),n=0,a=e.faceVertexUvs.length;n<a;n++)x[n].push(e.faceVertexUvs[n][i]);else if(n=o.a,a=o.b,s=o.c,h=o.d,l=e.vertices[n],c=e.vertices[a],f=e.vertices[s],E=e.vertices[h],u=l.distanceTo(c),p=c.distanceTo(f),d=f.distanceTo(E),m=l.distanceTo(E),u>t||p>t||d>t||m>t)for(g=e.vertices.length,v=e.vertices.length+1,T=o.clone(),R=o.clone(),u>=p&&u>=d&&u>=m||d>=p&&d>=u&&d>=m?((u=l.clone()).lerpSelf(c,.5),(c=f.clone()).lerpSelf(E,.5),T.a=n,T.b=g,T.c=v,T.d=h,R.a=g,R.b=a,R.c=s,R.d=v,4===o.vertexNormals.length&&((n=o.vertexNormals[0].clone()).lerpSelf(o.vertexNormals[1],.5),(a=o.vertexNormals[2].clone()).lerpSelf(o.vertexNormals[3],.5),T.vertexNormals[1].copy(n),T.vertexNormals[2].copy(a),R.vertexNormals[0].copy(n),R.vertexNormals[3].copy(a)),4===o.vertexColors.length&&((n=o.vertexColors[0].clone()).lerpSelf(o.vertexColors[1],.5),(a=o.vertexColors[2].clone()).lerpSelf(o.vertexColors[3],.5),T.vertexColors[1].copy(n),T.vertexColors[2].copy(a),R.vertexColors[0].copy(n),R.vertexColors[3].copy(a)),o=0):((u=c.clone()).lerpSelf(f,.5),(c=E.clone()).lerpSelf(l,.5),T.a=n,T.b=a,T.c=g,T.d=v,R.a=v,R.b=g,R.c=s,R.d=h,4===o.vertexNormals.length&&((n=o.vertexNormals[1].clone()).lerpSelf(o.vertexNormals[2],.5),(a=o.vertexNormals[3].clone()).lerpSelf(o.vertexNormals[0],.5),T.vertexNormals[2].copy(n),T.vertexNormals[3].copy(a),R.vertexNormals[0].copy(a),R.vertexNormals[1].copy(n)),4===o.vertexColors.length&&((n=o.vertexColors[1].clone()).lerpSelf(o.vertexColors[2],.5),(a=o.vertexColors[3].clone()).lerpSelf(o.vertexColors[0],.5),T.vertexColors[2].copy(n),T.vertexColors[3].copy(a),R.vertexColors[0].copy(a),R.vertexColors[1].copy(n)),o=1),y.push(T,R),e.vertices.push(u,c),n=0,a=e.faceVertexUvs.length;n<a;n++)e.faceVertexUvs[n].length&&(R=(l=e.faceVertexUvs[n][i])[0],s=l[1],T=l[2],l=l[3],0===o?((c=R.clone()).lerpSelf(s,.5),(f=T.clone()).lerpSelf(l,.5),R=[R.clone(),c.clone(),f.clone(),l.clone()],s=[c.clone(),s.clone(),T.clone(),f.clone()]):((c=s.clone()).lerpSelf(T,.5),(f=l.clone()).lerpSelf(R,.5),R=[R.clone(),s.clone(),c.clone(),f.clone()],s=[f.clone(),c.clone(),T.clone(),l.clone()]),x[n].push(R,s));else for(y.push(o),n=0,a=e.faceVertexUvs.length;n<a;n++)x[n].push(e.faceVertexUvs[n][i]);e.faces=y,e.faceVertexUvs=x}},THREE.GeometryUtils.random=THREE.Math.random16,THREE.GeometryUtils.__v1=new THREE.Vector3,THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,i){var r=new Image,o=new THREE.Texture(r,t);return r.onload=function(){o.needsUpdate=!0,i&&i(this)},r.crossOrigin=this.crossOrigin,r.src=e,o},loadTextureCube:function(e,t,i){var r,o=[],n=new THREE.Texture(o,t);t=o.loadCount=0;for(r=e.length;t<r;++t)o[t]=new Image,o[t].onload=function(){o.loadCount=o.loadCount+1,6===o.loadCount&&(n.needsUpdate=!0),i&&i(this)},o[t].crossOrigin=this.crossOrigin,o[t].src=e[t];return n},getNormalMap:function(e,t){var i=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]},r=(t=1|t,e.width),o=e.height,n=document.createElement("canvas");n.width=r,n.height=o;var a=n.getContext("2d");a.drawImage(e,0,0);for(var s=a.getImageData(0,0,r,o).data,h=a.createImageData(r,o),l=h.data,c=0;c<r;c++)for(var f=0;f<o;f++){var E=f-1<0?0:f-1,u=f+1>o-1?o-1:f+1,p=c-1<0?0:c-1,d=c+1>r-1?r-1:c+1,m=[],g=[0,0,s[4*(f*r+c)]/255*t];for(m.push([-1,0,s[4*(f*r+p)]/255*t]),m.push([-1,-1,s[4*(E*r+p)]/255*t]),m.push([0,-1,s[4*(E*r+c)]/255*t]),m.push([1,-1,s[4*(E*r+d)]/255*t]),m.push([1,0,s[4*(f*r+d)]/255*t]),m.push([1,1,s[4*(u*r+d)]/255*t]),m.push([0,1,s[4*(u*r+c)]/255*t]),m.push([-1,1,s[4*(u*r+p)]/255*t]),E=[],p=m.length,u=0;u<p;u++){d=m[u];var v=m[(u+1)%p];d=[d[0]-g[0],d[1]-g[1],d[2]-g[2]],v=[v[0]-g[0],v[1]-g[1],v[2]-g[2]];E.push(i([d[1]*v[2]-d[2]*v[1],d[2]*v[0]-d[0]*v[2],d[0]*v[1]-d[1]*v[0]]))}for(m=[0,0,0],u=0;u<E.length;u++)m[0]=m[0]+E[u][0],m[1]=m[1]+E[u][1],m[2]=m[2]+E[u][2];m[0]=m[0]/E.length,m[1]=m[1]/E.length,m[2]=m[2]/E.length,l[g=4*(f*r+c)]=(m[0]+1)/2*255|0,l[g+1]=255*(m[1]+.5)|0,l[g+2]=255*m[2]|0,l[g+3]=255}return a.putImageData(h,0,0),n},generateDataTexture:function(e,t,i){for(var r=e*t,o=new Uint8Array(3*r),n=Math.floor(255*i.r),a=Math.floor(255*i.g),s=(i=Math.floor(255*i.b),0);s<r;s++)o[3*s]=n,o[3*s+1]=a,o[3*s+2]=i;return(e=new THREE.DataTexture(o,e,t,THREE.RGBFormat)).needsUpdate=!0,e}},THREE.SceneUtils={showHierarchy:function(e,t){THREE.SceneUtils.traverseHierarchy(e,(function(e){e.visible=t}))},traverseHierarchy:function(e,t){var i,r,o=e.children.length;for(r=0;r<o;r++)t(i=e.children[r]),THREE.SceneUtils.traverseHierarchy(i,t)},createMultiMaterialObject:function(e,t){var i,r=t.length,o=new THREE.Object3D;for(i=0;i<r;i++){var n=new THREE.Mesh(e,t[i]);o.add(n)}return o},cloneObject:function(e){var t;e instanceof THREE.MorphAnimMesh?((t=new THREE.MorphAnimMesh(e.geometry,e.material)).duration=e.duration,t.mirroredLoop=e.mirroredLoop,t.time=e.time,t.lastKeyframe=e.lastKeyframe,t.currentKeyframe=e.currentKeyframe,t.direction=e.direction,t.directionBackwards=e.directionBackwards):e instanceof THREE.SkinnedMesh?t=new THREE.SkinnedMesh(e.geometry,e.material):e instanceof THREE.Mesh?t=new THREE.Mesh(e.geometry,e.material):e instanceof THREE.Line?t=new THREE.Line(e.geometry,e.material,e.type):e instanceof THREE.Ribbon?t=new THREE.Ribbon(e.geometry,e.material):e instanceof THREE.ParticleSystem?(t=new THREE.ParticleSystem(e.geometry,e.material)).sortParticles=e.sortParticles:e instanceof THREE.Particle?t=new THREE.Particle(e.material):e instanceof THREE.Sprite?((t=new THREE.Sprite({})).color.copy(e.color),t.map=e.map,t.blending=e.blending,t.useScreenCoordinates=e.useScreenCoordinates,t.mergeWith3D=e.mergeWith3D,t.affectedByDistance=e.affectedByDistance,t.scaleByViewport=e.scaleByViewport,t.alignment=e.alignment,t.rotation3d.copy(e.rotation3d),t.rotation=e.rotation,t.opacity=e.opacity,t.uvOffset.copy(e.uvOffset),t.uvScale.copy(e.uvScale)):e instanceof THREE.LOD?t=new THREE.LOD:e instanceof THREE.Object3D&&(t=new THREE.Object3D),t.name=e.name,t.parent=e.parent,t.up.copy(e.up),t.position.copy(e.position),t.rotation instanceof THREE.Vector3&&t.rotation.copy(e.rotation),t.eulerOrder=e.eulerOrder,t.scale.copy(e.scale),t.dynamic=e.dynamic,t.doubleSided=e.doubleSided,t.flipSided=e.flipSided,t.renderDepth=e.renderDepth,t.rotationAutoUpdate=e.rotationAutoUpdate,t.matrix.copy(e.matrix),t.matrixWorld.copy(e.matrixWorld),t.matrixRotationWorld.copy(e.matrixRotationWorld),t.matrixAutoUpdate=e.matrixAutoUpdate,t.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,t.quaternion.copy(e.quaternion),t.useQuaternion=e.useQuaternion,t.boundRadius=e.boundRadius,t.boundRadiusScale=e.boundRadiusScale,t.visible=e.visible,t.castShadow=e.castShadow,t.receiveShadow=e.receiveShadow,t.frustumCulled=e.frustumCulled;for(var i=0;i<e.children.length;i++){var r=THREE.SceneUtils.cloneObject(e.children[i]);t.children[i]=r,r.parent=t}if(e instanceof THREE.LOD)for(i=0;i<e.LODs.length;i++)t.LODs[i]={visibleAtDistance:e.LODs[i].visibleAtDistance,object3D:t.children[i]};return t},detach:function(e,t,i){e.applyMatrix(t.matrixWorld),t.remove(e),i.add(e)},attach:function(e,t,i){var r=new THREE.Matrix4;r.getInverse(i.matrixWorld),e.applyMatrix(r),t.remove(e),i.add(e)}},THREE.WebGLRenderer&&(THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tCube:{type:"t",value:1,texture:null},tNormal:{type:"t",value:2,texture:null},tSpecular:{type:"t",value:3,texture:null},tAO:{type:"t",value:4,texture:null},tDisplacement:{type:"t",value:5,texture:null},uNormalScale:{type:"f",value:1},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform float uNormalScale;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nfloat pointDistance = vPointLight[ i ].w;\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\nif ( enableReflection ) {\nvec3 wPos = cameraPosition - vViewPosition;\nvec3 vReflect = reflect( normalize( wPos ), normal );\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalMatrix * normal;\nvTangent = normalMatrix * tangent.xyz;\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvUv = uv * uRepeat + uOffset;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( normalize( vNormal.xyz ) * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:1,texture:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\n}"}}}),THREE.BufferGeometry=function(){this.id=THREE.GeometryCount++,this.vertexColorArray=this.vertexUvArray=this.vertexNormalArray=this.vertexPositionArray=this.vertexIndexArray=this.vertexColorBuffer=this.vertexUvBuffer=this.vertexNormalBuffer=this.vertexPositionBuffer=this.vertexIndexBuffer=null,this.dynamic=!1,this.boundingSphere=this.boundingBox=null,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,computeBoundingBox:function(){},computeBoundingSphere:function(){}},THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(){return null},THREE.Curve.prototype.getPointAt=function(e){return this.getPoint(this.getUtoTmapping(e))},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,i=[];for(t=0;t<=e;t++)i.push(this.getPoint(t/e));return i},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,i=[];for(t=0;t<=e;t++)i.push(this.getPointAt(t/e));return i},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,i,r=[],o=this.getPoint(0),n=0;for(r.push(0),i=1;i<=e;i++)n+=(t=this.getPoint(i/e)).distanceTo(o),r.push(n),o=t;return this.cacheArcLengths=r},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var i,r=this.getLengths(),o=0,n=r.length;i=t||e*r[n-1];for(var a,s=0,h=n-1;s<=h;)if((a=r[o=Math.floor(s+(h-s)/2)]-i)<0)s=o+1;else{if(!(a>0)){h=o;break}h=o-1}return r[o=h]==i?o/(n-1):r=(o+(i-(s=r[o]))/(r[o+1]-s))/(n-1)},THREE.Curve.prototype.getNormalVector=function(e){return e=this.getTangent(e),new THREE.Vector2(-e.y,e.x)},THREE.Curve.prototype.getTangent=function(e){var t=e-1e-4;return t<0&&(t=0),(e=e+1e-4)>1&&(e=1),t=this.getPoint(t),this.getPoint(e).clone().subSelf(t).normalize()},THREE.Curve.prototype.getTangentAt=function(e){return this.getTangent(this.getUtoTmapping(e))},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=new THREE.Curve,THREE.LineCurve.prototype.constructor=THREE.LineCurve,THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().subSelf(this.v1);return t.multiplyScalar(e).addSelf(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().subSelf(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,i){this.v0=e,this.v1=t,this.v2=i},THREE.QuadraticBezierCurve.prototype=new THREE.Curve,THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve,THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,e)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),e=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y),(t=new THREE.Vector2(t,e)).normalize(),t},THREE.CubicBezierCurve=function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r},THREE.CubicBezierCurve.prototype=new THREE.Curve,THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve,THREE.CubicBezierCurve.prototype.getPoint=function(e){var t;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,e)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t;return t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),(t=new THREE.Vector2(t,e)).normalize(),t},THREE.SplineCurve=function(e){this.points=null==e?[]:e},THREE.SplineCurve.prototype=new THREE.Curve,THREE.SplineCurve.prototype.constructor=THREE.SplineCurve,THREE.SplineCurve.prototype.getPoint=function(e){var t,i=new THREE.Vector2,r=[],o=this.points;return t=(o.length-1)*e,t-=e=Math.floor(t),r[0]=0==e?e:e-1,r[1]=e,r[2]=e>o.length-2?o.length-1:e+1,r[3]=e>o.length-3?o.length-1:e+2,i.x=THREE.Curve.Utils.interpolate(o[r[0]].x,o[r[1]].x,o[r[2]].x,o[r[3]].x,t),i.y=THREE.Curve.Utils.interpolate(o[r[0]].y,o[r[1]].y,o[r[2]].y,o[r[3]].y,t),i},THREE.ArcCurve=function(e,t,i,r,o,n){this.aX=e,this.aY=t,this.aRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=n},THREE.ArcCurve.prototype=new THREE.Curve,THREE.ArcCurve.prototype.constructor=THREE.ArcCurve,THREE.ArcCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;return this.aClockwise||(e=1-e),t=this.aStartAngle+e*t,e=this.aX+this.aRadius*Math.cos(t),t=this.aY+this.aRadius*Math.sin(t),new THREE.Vector2(e,t)},THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,i,r){return 2*(1-e)*(i-t)+2*e*(r-i)},tangentCubicBezier:function(e,t,i,r,o){return-3*t*(1-e)*(1-e)+3*i*(1-e)*(1-e)-6*e*i*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*o},tangentSpline:function(e){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,i,r,o){var n=o*o;return(2*t-2*i+(e=.5*(i-e))+(r=.5*(r-t)))*o*n+(-3*t+3*i-2*e-r)*n+e*o+t}},THREE.Curve.create=function(e,t){return e.prototype=new THREE.Curve,e.prototype.constructor=e,e.prototype.getPoint=t,e},THREE.LineCurve3=THREE.Curve.create((function(e,t){this.v1=e,this.v2=t}),(function(e){var t=new THREE.Vector3;return t.sub(this.v2,this.v1),t.multiplyScalar(e),t.addSelf(this.v1),t})),THREE.QuadraticBezierCurve3=THREE.Curve.create((function(e,t,i){this.v0=e,this.v1=t,this.v2=i}),(function(e){var t,i;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),i=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,i,e)})),THREE.CubicBezierCurve3=THREE.Curve.create((function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r}),(function(e){var t,i;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),i=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,i,e)})),THREE.SplineCurve3=THREE.Curve.create((function(e){this.points=null==e?[]:e}),(function(e){var t,i=new THREE.Vector3,r=[],o=this.points;e=(o.length-1)*e;e-=t=Math.floor(e),r[0]=0==t?t:t-1,r[1]=t,r[2]=t>o.length-2?o.length-1:t+1,r[3]=t>o.length-3?o.length-1:t+2,t=o[r[0]];var n=o[r[1]],a=o[r[2]];r=o[r[3]];return i.x=THREE.Curve.Utils.interpolate(t.x,n.x,a.x,r.x,e),i.y=THREE.Curve.Utils.interpolate(t.y,n.y,a.y,r.y,e),i.z=THREE.Curve.Utils.interpolate(t.z,n.z,a.z,r.z,e),i})),THREE.ClosedSplineCurve3=THREE.Curve.create((function(e){this.points=null==e?[]:e}),(function(e){var t,i=new THREE.Vector3,r=[],o=this.points;return t=(o.length-0)*e,t-=e=Math.floor(t),e+=e>0?0:(Math.floor(Math.abs(e)/o.length)+1)*o.length,r[0]=(e-1)%o.length,r[1]=e%o.length,r[2]=(e+1)%o.length,r[3]=(e+2)%o.length,i.x=THREE.Curve.Utils.interpolate(o[r[0]].x,o[r[1]].x,o[r[2]].x,o[r[3]].x,t),i.y=THREE.Curve.Utils.interpolate(o[r[0]].y,o[r[1]].y,o[r[2]].y,o[r[3]].y,t),i.z=THREE.Curve.Utils.interpolate(o[r[0]].z,o[r[1]].z,o[r[2]].z,o[r[3]].z,t),i})),THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=new THREE.Curve,THREE.CurvePath.prototype.constructor=THREE.CurvePath,THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){var t=e*this.getLength(),i=this.getCurveLengths();for(e=0;e<i.length;){if(i[e]>=t)return t=1-(t=i[e]-t)/(e=this.curves[e]).getLength(),e.getPointAt(t);e++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e,t=[],i=0,r=this.curves.length;for(e=0;e<r;e++)i+=this.curves[e].getLength(),t.push(i);return this.cacheLengths=t},THREE.CurvePath.prototype.getBoundingBox=function(){var e,t,i,r,o,n,a,s,h=this.getPoints();for(e=t=Number.NEGATIVE_INFINITY,i=r=Number.POSITIVE_INFINITY,s=new THREE.Vector2,n=0,a=h.length;n<a;n++)(o=h[n]).x>e?e=o.x:o.x<i&&(i=o.x),o.y>t?t=o.y:o.y<t&&(r=o.y),s.addSelf(o.x,o.y);return{minX:i,minY:r,maxX:e,maxY:t,centroid:s.divideScalar(a)}},THREE.CurvePath.prototype.createPointsGeometry=function(e){return this.createGeometry(this.getPoints(e,!0))},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){return this.createGeometry(this.getSpacedPoints(e,!0))},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,i=0;i<e.length;i++)t.vertices.push(new THREE.Vector3(e[i].x,e[i].y,0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var i,r,o=this.getPoints(e);for(t||(t=this.bends),i=0,r=t.length;i<r;i++)o=this.getWrapPoints(o,t[i]);return o},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var i,r,o=this.getSpacedPoints(e);for(t||(t=this.bends),i=0,r=t.length;i<r;i++)o=this.getWrapPoints(o,t[i]);return o},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var i,r,o,n,a,s,h=this.getBoundingBox();for(i=0,r=e.length;i<r;i++)n=(o=e[i]).x,a=o.y,s=n/h.maxX,s=t.getUtoTmapping(s,n),n=t.getPoint(s),a=t.getNormalVector(s).multiplyScalar(a),o.x=n.x+a.x,o.y=n.y+a.y;return e},THREE.EventTarget=function(){var e={};this.addEventListener=function(t,i){null==e[t]&&(e[t]=[]),-1===e[t].indexOf(i)&&e[t].push(i)},this.dispatchEvent=function(t){for(var i in e[t.type])e[t.type][i](t)},this.removeEventListener=function(t,i){var r=e[t].indexOf(i);-1!==r&&e[t].splice(r,1)}},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=new THREE.Object3D,THREE.Gyroscope.prototype.constructor=THREE.Gyroscope,THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,i=this.children.length;t<i;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=new THREE.CurvePath,THREE.Path.prototype.constructor=THREE.Path,THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){var i=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:i})},THREE.Path.prototype.lineTo=function(e,t){var i=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args;this.curves.push(new THREE.LineCurve(new THREE.Vector2(r[r.length-2],r[r.length-1]),new THREE.Vector2(e,t))),this.actions.push({action:THREE.PathActions.LINE_TO,args:i})},THREE.Path.prototype.quadraticCurveTo=function(e,t,i,r){var o=Array.prototype.slice.call(arguments),n=this.actions[this.actions.length-1].args;this.curves.push(new THREE.QuadraticBezierCurve(new THREE.Vector2(n[n.length-2],n[n.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(i,r))),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:o})},THREE.Path.prototype.bezierCurveTo=function(e,t,i,r,o,n){var a=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args;this.curves.push(new THREE.CubicBezierCurve(new THREE.Vector2(s[s.length-2],s[s.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(i,r),new THREE.Vector2(o,n))),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:a})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args;i=[new THREE.Vector2(i[i.length-2],i[i.length-1])];Array.prototype.push.apply(i,e),this.curves.push(new THREE.SplineCurve(i)),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,i,r,o,n){var a=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1];s=new THREE.ArcCurve(s.x+e,s.y+t,i,r,o,n);this.curves.push(s),s=s.getPoint(n?1:0),a.push(s.x),a.push(s.y),this.actions.push({action:THREE.PathActions.ARC,args:a})},THREE.Path.prototype.absarc=function(e,t,i,r,o,n){var a=Array.prototype.slice.call(arguments),s=new THREE.ArcCurve(e,t,i,r,o,n);this.curves.push(s),s=s.getPoint(n?1:0),a.push(s.x),a.push(s.y),this.actions.push({action:THREE.PathActions.ARC,args:a})},THREE.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var t=[],i=0;i<e;i++)t.push(this.getPoint(i/e));return t},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return this.getSpacedPoints(e,t);e=e||12;var i,r,o,n,a,s,h,l,c,f,E,u,p,d=[];for(i=0,r=this.actions.length;i<r;i++)switch(n=(o=this.actions[i]).action,o=o.args,n){case THREE.PathActions.MOVE_TO:d.push(new THREE.Vector2(o[0],o[1]));break;case THREE.PathActions.LINE_TO:d.push(new THREE.Vector2(o[0],o[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(a=o[2],s=o[3],c=o[0],f=o[1],d.length>0?(E=(n=d[d.length-1]).x,u=n.y):(E=(n=this.actions[i-1].args)[n.length-2],u=n[n.length-1]),o=1;o<=e;o++)p=o/e,n=THREE.Shape.Utils.b2(p,E,c,a),p=THREE.Shape.Utils.b2(p,u,f,s),d.push(new THREE.Vector2(n,p));break;case THREE.PathActions.BEZIER_CURVE_TO:for(a=o[4],s=o[5],c=o[0],f=o[1],h=o[2],l=o[3],d.length>0?(E=(n=d[d.length-1]).x,u=n.y):(E=(n=this.actions[i-1].args)[n.length-2],u=n[n.length-1]),o=1;o<=e;o++)p=o/e,n=THREE.Shape.Utils.b3(p,E,c,h,a),p=THREE.Shape.Utils.b3(p,u,f,l,s),d.push(new THREE.Vector2(n,p));break;case THREE.PathActions.CSPLINE_THRU:for(n=this.actions[i-1].args,p=[new THREE.Vector2(n[n.length-2],n[n.length-1])],n=e*o[0].length,p=p.concat(o[0]),p=new THREE.SplineCurve(p),o=1;o<=n;o++)d.push(p.getPointAt(o/n));break;case THREE.PathActions.ARC:for(a=o[0],s=o[1],h=o[2],c=o[3],f=!!o[5],l=o[4]-c,E=2*e,o=1;o<=E;o++)p=o/E,f||(p=1-p),p=c+p*l,n=a+h*Math.cos(p),p=s+h*Math.sin(p),d.push(new THREE.Vector2(n,p))}return i=d[d.length-1],Math.abs(i.x-d[0].x)<1e-10&&Math.abs(i.y-d[0].y)<1e-10&&d.splice(d.length-1,1),t&&d.push(d[0]),d},THREE.Path.prototype.transform=function(e,t){return this.getBoundingBox(),this.getWrapPoints(this.getPoints(t),e)},THREE.Path.prototype.nltransform=function(e,t,i,r,o,n){var a,s,h,l,c,f=this.getPoints();for(a=0,s=f.length;a<s;a++)l=(h=f[a]).x,c=h.y,h.x=e*l+t*c+i,h.y=r*c+o*l+n;return f},THREE.Path.prototype.debug=function(e){var t=this.getBoundingBox();e||((e=document.createElement("canvas")).setAttribute("width",t.maxX+100),e.setAttribute("height",t.maxY+100),document.body.appendChild(e)),(t=e.getContext("2d")).fillStyle="white",t.fillRect(0,0,e.width,e.height),t.strokeStyle="black",t.beginPath();var i,r,o;e=0;for(i=this.actions.length;e<i;e++)o=(r=this.actions[e]).args,(r=r.action)!=THREE.PathActions.CSPLINE_THRU&&t[r].apply(t,o);for(t.stroke(),t.closePath(),t.strokeStyle="red",e=0,i=(r=this.getPoints()).length;e<i;e++)o=r[e],t.beginPath(),t.arc(o.x,o.y,1.5,0,2*Math.PI,!1),t.stroke(),t.closePath()},THREE.Path.prototype.toShapes=function(){var e,t,i,r,o,n=[],a=new THREE.Path;for(e=0,t=this.actions.length;e<t;e++)r=(i=this.actions[e]).args,(i=i.action)==THREE.PathActions.MOVE_TO&&0!=a.actions.length&&(n.push(a),a=new THREE.Path),a[i].apply(a,r);if(0!=a.actions.length&&n.push(a),0==n.length)return[];if(r=[],e=!THREE.Shape.Utils.isClockWise(n[0].getPoints()),1==n.length)return a=n[0],(o=new THREE.Shape).actions=a.actions,o.curves=a.curves,r.push(o),r;if(e)for(o=new THREE.Shape,e=0,t=n.length;e<t;e++)a=n[e],THREE.Shape.Utils.isClockWise(a.getPoints())?(o.actions=a.actions,o.curves=a.curves,r.push(o),o=new THREE.Shape):o.holes.push(a);else{for(e=0,t=n.length;e<t;e++)a=n[e],THREE.Shape.Utils.isClockWise(a.getPoints())?(o&&r.push(o),(o=new THREE.Shape).actions=a.actions,o.curves=a.curves):o.holes.push(a);r.push(o)}return r},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=new THREE.Path,THREE.Shape.prototype.constructor=THREE.Path,THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){var t,i=this.holes.length,r=[];for(t=0;t<i;t++)r[t]=this.holes[t].getTransformedPoints(e,this.bends);return r},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,i=this.holes.length,r=[];for(t=0;t<i;t++)r[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return r},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={removeHoles:function(e,t){var i,r,o,n,a,s,h,l,c,f,E=e.concat(),u=E.concat(),p=[];for(a=0;a<t.length;a++){for(s=t[a],Array.prototype.push.apply(u,s),r=Number.POSITIVE_INFINITY,i=0;i<s.length;i++)for(c=s[i],f=[],l=0;l<E.length;l++)h=E[l],h=c.distanceToSquared(h),f.push(h),h<r&&(r=h,o=i,n=l);i=n-1>=0?n-1:E.length-1,r=o-1>=0?o-1:s.length-1;var d=[s[o],E[n],E[i]];l=THREE.FontUtils.Triangulate.area(d);var m=[s[o],s[r],E[n]];c=THREE.FontUtils.Triangulate.area(m),f=n,h=o,o+=-1,(n+=1)<0&&(n+=E.length),n%=E.length,o<0&&(o+=s.length),o%=s.length,i=n-1>=0?n-1:E.length-1,r=o-1>=0?o-1:s.length-1,d=[s[o],E[n],E[i]],d=THREE.FontUtils.Triangulate.area(d),m=[s[o],s[r],E[n]],l+c>d+(m=THREE.FontUtils.Triangulate.area(m))&&(o=h,(n=f)<0&&(n+=E.length),n%=E.length,o<0&&(o+=s.length),o%=s.length,i=n-1>=0?n-1:E.length-1,r=o-1>=0?o-1:s.length-1),l=E.slice(0,n),c=E.slice(n),f=s.slice(o),h=s.slice(0,o),r=[s[o],s[r],E[n]],p.push([s[o],E[n],E[i]]),p.push(r),E=l.concat(f).concat(h).concat(c)}return{shape:E,isolatedPts:p,allpoints:u}},triangulateShape:function(e,t){var i,r,o,n,a=(h=THREE.Shape.Utils.removeHoles(e,t)).allpoints,s=h.isolatedPts,h=THREE.FontUtils.Triangulate(h.shape,!1),l={};for(i=0,r=a.length;i<r;i++)l[n=a[i].x+":"+a[i].y],l[n]=i;for(i=0,r=h.length;i<r;i++)for(o=h[i],a=0;a<3;a++)void 0!==(n=l[n=o[a].x+":"+o[a].y])&&(o[a]=n);for(i=0,r=s.length;i<r;i++)for(o=s[i],a=0;a<3;a++)void 0!==(n=l[n=o[a].x+":"+o[a].y])&&(o[a]=n);return h.concat(s)},isClockWise:function(e){return THREE.FontUtils.Triangulate.area(e)<0},b2p0:function(e,t){var i=1-e;return i*i*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,i,r){return this.b2p0(e,t)+this.b2p1(e,i)+this.b2p2(e,r)},b3p0:function(e,t){var i=1-e;return i*i*i*t},b3p1:function(e,t){var i=1-e;return 3*i*i*e*t},b3p2:function(e,t){return 3*(1-e)*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,i,r,o){return this.b3p0(e,t)+this.b3p1(e,i)+this.b3p2(e,r)+this.b3p3(e,o)}},THREE.TextPath=function(e,t){THREE.Path.call(this),this.parameters=t||{},this.set(e)},THREE.TextPath.prototype.set=function(e,t){t=t||this.parameters,this.text=e;var i=void 0!==t.curveSegments?t.curveSegments:4,r=void 0!==t.font?t.font:"helvetiker",o=void 0!==t.weight?t.weight:"normal",n=void 0!==t.style?t.style:"normal";THREE.FontUtils.size=void 0!==t.size?t.size:100,THREE.FontUtils.divisions=i,THREE.FontUtils.face=r,THREE.FontUtils.weight=o,THREE.FontUtils.style=n},THREE.TextPath.prototype.toShapes=function(){for(var e=THREE.FontUtils.drawText(this.text).paths,t=[],i=0,r=e.length;i<r;i++)Array.prototype.push.apply(t,e[i].toShapes());return t},THREE.AnimationHandler=function(){var e=[],t={},i={update:function(t){for(var i=0;i<e.length;i++)e[i].update(t)},addToUpdate:function(t){-1===e.indexOf(t)&&e.push(t)},removeFromUpdate:function(t){-1!==(t=e.indexOf(t))&&e.splice(t,1)},add:function(e){if(t[e.name],t[e.name]=e,!0!==e.initialized){for(var i=0;i<e.hierarchy.length;i++){for(var r=0;r<e.hierarchy[i].keys.length;r++)if(e.hierarchy[i].keys[r].time<0&&(e.hierarchy[i].keys[r].time=0),void 0!==e.hierarchy[i].keys[r].rot&&!(e.hierarchy[i].keys[r].rot instanceof THREE.Quaternion)){var o=e.hierarchy[i].keys[r].rot;e.hierarchy[i].keys[r].rot=new THREE.Quaternion(o[0],o[1],o[2],o[3])}if(e.hierarchy[i].keys.length&&void 0!==e.hierarchy[i].keys[0].morphTargets){for(o={},r=0;r<e.hierarchy[i].keys.length;r++)for(var n=0;n<e.hierarchy[i].keys[r].morphTargets.length;n++){var a=e.hierarchy[i].keys[r].morphTargets[n];o[a]=-1}for(e.hierarchy[i].usedMorphTargets=o,r=0;r<e.hierarchy[i].keys.length;r++){var s={};for(a in o){for(n=0;n<e.hierarchy[i].keys[r].morphTargets.length;n++)if(e.hierarchy[i].keys[r].morphTargets[n]===a){s[a]=e.hierarchy[i].keys[r].morphTargetsInfluences[n];break}n===e.hierarchy[i].keys[r].morphTargets.length&&(s[a]=0)}e.hierarchy[i].keys[r].morphTargetsInfluences=s}}for(r=1;r<e.hierarchy[i].keys.length;r++)e.hierarchy[i].keys[r].time===e.hierarchy[i].keys[r-1].time&&(e.hierarchy[i].keys.splice(r,1),r--);for(r=0;r<e.hierarchy[i].keys.length;r++)e.hierarchy[i].keys[r].index=r}for(r=parseInt(e.length*e.fps,10),e.JIT={},e.JIT.hierarchy=[],i=0;i<e.hierarchy.length;i++)e.JIT.hierarchy.push(Array(r));e.initialized=!0}},get:function(e){if("string"==typeof e)return t[e]?t[e]:null},parse:function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var i=0;i<e.bones.length;i++)t.push(e.bones[i]);else r(e,t);return t}},r=function(e,t){t.push(e);for(var i=0;i<e.children.length;i++)r(e.children[i],t)};return i.LINEAR=0,i.CATMULLROM=1,i.CATMULLROM_FORWARD=2,i}(),THREE.Animation=function(e,t,i,r){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=this.isPaused=!0,this.interpolationType=void 0!==i?i:THREE.AnimationHandler.LINEAR,this.JITCompile=void 0===r||r,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(e,t){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0===e||e,this.currentTime=void 0!==t?t:0;var i,r,o=this.hierarchy.length;for(i=0;i<o;i++){r=this.hierarchy[i],this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(r.useQuaternion=!0),r.matrixAutoUpdate=!0,void 0===r.animationCache&&(r.animationCache={},r.animationCache.prevKey={pos:0,rot:0,scl:0},r.animationCache.nextKey={pos:0,rot:0,scl:0},r.animationCache.originalMatrix=r instanceof THREE.Bone?r.skinMatrix:r.matrix);var n=r.animationCache.prevKey;r=r.animationCache.nextKey,n.pos=this.data.hierarchy[i].keys[0],n.rot=this.data.hierarchy[i].keys[0],n.scl=this.data.hierarchy[i].keys[0],r.pos=this.getNextKeyWith("pos",i,1),r.rot=this.getNextKeyWith("rot",i,1),r.scl=this.getNextKeyWith("scl",i,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.hierarchy.length;e++)void 0!==this.hierarchy[e].animationCache&&(this.hierarchy[e]instanceof THREE.Bone?this.hierarchy[e].skinMatrix=this.hierarchy[e].animationCache.originalMatrix:this.hierarchy[e].matrix=this.hierarchy[e].animationCache.originalMatrix,delete this.hierarchy[e].animationCache)},THREE.Animation.prototype.update=function(e){if(this.isPlaying){var t,i,r,o,n,a,s,h,l,c,f=["pos","rot","scl"],E=this.data.JIT.hierarchy;c=this.currentTime=this.currentTime+e*this.timeScale,l=this.currentTime=this.currentTime%this.data.length,h=parseInt(Math.min(l*this.data.fps,this.data.length*this.data.fps),10);for(var u=0,p=this.hierarchy.length;u<p;u++)if(s=(e=this.hierarchy[u]).animationCache,this.JITCompile&&void 0!==E[u][h])e instanceof THREE.Bone?(e.skinMatrix=E[u][h],e.matrixAutoUpdate=!1,e.matrixWorldNeedsUpdate=!1):(e.matrix=E[u][h],e.matrixAutoUpdate=!1,e.matrixWorldNeedsUpdate=!0);else{this.JITCompile&&(e instanceof THREE.Bone?e.skinMatrix=e.animationCache.originalMatrix:e.matrix=e.animationCache.originalMatrix);for(var d=0;d<3;d++){if(t=f[d],n=s.prevKey[t],(a=s.nextKey[t]).time<=c){if(l<c){if(!this.loop)return void this.stop();for(n=this.data.hierarchy[u].keys[0],a=this.getNextKeyWith(t,u,1);a.time<l;)n=a,a=this.getNextKeyWith(t,u,a.index+1)}else do{n=a,a=this.getNextKeyWith(t,u,a.index+1)}while(a.time<l);s.prevKey[t]=n,s.nextKey[t]=a}e.matrixAutoUpdate=!0,e.matrixWorldNeedsUpdate=!0,i=(l-n.time)/(a.time-n.time),r=n[t],o=a[t],(i<0||i>1)&&(i=i<0?0:1),"pos"===t?(t=e.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(t.x=r[0]+(o[0]-r[0])*i,t.y=r[1]+(o[1]-r[1])*i,t.z=r[2]+(o[2]-r[2])*i):this.interpolationType!==THREE.AnimationHandler.CATMULLROM&&this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD||(this.points[0]=this.getPrevKeyWith("pos",u,n.index-1).pos,this.points[1]=r,this.points[2]=o,this.points[3]=this.getNextKeyWith("pos",u,a.index+1).pos,i=.33*i+.33,r=this.interpolateCatmullRom(this.points,i),t.x=r[0],t.y=r[1],t.z=r[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(i=this.interpolateCatmullRom(this.points,1.01*i),this.target.set(i[0],i[1],i[2]),this.target.subSelf(t),this.target.y=0,this.target.normalize(),i=Math.atan2(this.target.x,this.target.z),e.rotation.set(0,i,0)))):"rot"===t?THREE.Quaternion.slerp(r,o,e.quaternion,i):"scl"===t&&((t=e.scale).x=r[0]+(o[0]-r[0])*i,t.y=r[1]+(o[1]-r[1])*i,t.z=r[2]+(o[2]-r[2])*i)}}if(this.JITCompile&&void 0===E[0][h])for(this.hierarchy[0].updateMatrixWorld(!0),u=0;u<this.hierarchy.length;u++)E[u][h]=this.hierarchy[u]instanceof THREE.Bone?this.hierarchy[u].skinMatrix.clone():this.hierarchy[u].matrix.clone()}},THREE.Animation.prototype.interpolateCatmullRom=function(e,t){var i,r,o,n,a,s,h=[],l=[];return i=(e.length-1)*t,i-=r=Math.floor(i),h[0]=0===r?r:r-1,h[1]=r,h[2]=r>e.length-2?r:r+1,h[3]=r>e.length-3?r:r+2,r=e[h[0]],n=e[h[1]],a=e[h[2]],s=e[h[3]],o=i*(h=i*i),l[0]=this.interpolate(r[0],n[0],a[0],s[0],i,h,o),l[1]=this.interpolate(r[1],n[1],a[1],s[1],i,h,o),l[2]=this.interpolate(r[2],n[2],a[2],s[2],i,h,o),l},THREE.Animation.prototype.interpolate=function(e,t,i,r,o,n,a){return(2*(t-i)+(e=.5*(i-e))+(r=.5*(r-t)))*a+(-3*(t-i)-2*e-r)*n+e*o+t},THREE.Animation.prototype.getNextKeyWith=function(e,t,i){var r=this.data.hierarchy[t].keys;for(i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?i<r.length-1?i:r.length-1:i%r.length;i<r.length;i++)if(void 0!==r[i][e])return r[i];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,i){var r=this.data.hierarchy[t].keys;for(i=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?i>0?i:0:i>=0?i:i+r.length;i>=0;i--)if(void 0!==r[i][e])return r[i];return this.data.hierarchy[t].keys[r.length-1]},THREE.KeyFrameAnimation=function(e,t,i){for(this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.loop=this.isPaused=!0,this.JITCompile=void 0===i||i,e=0,t=this.hierarchy.length;e<t;e++){i=this.data.hierarchy[e].sids;var r=this.hierarchy[e];if(this.data.hierarchy[e].keys.length&&i){for(var o=0;o<i.length;o++){var n=i[o],a=this.getNextKeyWith(n,e,0);a&&a.apply(n)}r.matrixAutoUpdate=!1,this.data.hierarchy[e].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e,t){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0===e||e,this.currentTime=void 0!==t?t:0,this.startTimeMs=t,this.startTime=1e7,this.endTime=-this.startTime;var i,r,o,n=this.hierarchy.length;for(i=0;i<n;i++)r=this.hierarchy[i],o=this.data.hierarchy[i],r.useQuaternion=!0,void 0===o.animationCache&&(o.animationCache={},o.animationCache.prevKey=null,o.animationCache.nextKey=null,o.animationCache.originalMatrix=r instanceof THREE.Bone?r.skinMatrix:r.matrix),(r=this.data.hierarchy[i].keys).length&&(o.animationCache.prevKey=r[0],o.animationCache.nextKey=r[1],this.startTime=Math.min(r[0].time,this.startTime),this.endTime=Math.max(r[r.length-1].time,this.endTime));this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;e<this.data.hierarchy.length;e++){var t=this.hierarchy[e],i=this.data.hierarchy[e];if(void 0!==i.animationCache){var r=i.animationCache.originalMatrix;t instanceof THREE.Bone?(r.copy(t.skinMatrix),t.skinMatrix=r):(r.copy(t.matrix),t.matrix=r),delete i.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying){var t,i,r,o,n,a,s,h=this.data.JIT.hierarchy;if(a=this.currentTime=this.currentTime+e*this.timeScale,(n=this.currentTime=this.currentTime%this.data.length)<this.startTimeMs&&(n=this.currentTime=this.startTimeMs+n),o=parseInt(Math.min(n*this.data.fps,this.data.length*this.data.fps),10),(s=n<a)&&!this.loop){e=0;for(var l=this.hierarchy.length;e<l;e++){var c=this.data.hierarchy[e].keys;h=this.data.hierarchy[e].sids;if(r=c.length-1,o=this.hierarchy[e],c.length){for(c=0;c<h.length;c++)n=h[c],(a=this.getPrevKeyWith(n,e,r))&&a.apply(n);this.data.hierarchy[e].node.updateMatrix(),o.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(n<this.startTime)){for(e=0,l=this.hierarchy.length;e<l;e++){r=this.hierarchy[e];c=(t=this.data.hierarchy[e]).keys;var f=t.animationCache;if(this.JITCompile&&void 0!==h[e][o])r instanceof THREE.Bone?(r.skinMatrix=h[e][o],r.matrixWorldNeedsUpdate=!1):(r.matrix=h[e][o],r.matrixWorldNeedsUpdate=!0);else if(c.length){if(this.JITCompile&&f&&(r instanceof THREE.Bone?r.skinMatrix=f.originalMatrix:r.matrix=f.originalMatrix),t=f.prevKey,i=f.nextKey,t&&i){if(i.time<=a){if(s&&this.loop)for(t=c[0],i=c[1];i.time<n;)i=c[(t=i).index+1];else if(!s)for(var E=c.length-1;i.time<n&&i.index!==E;)i=c[(t=i).index+1];f.prevKey=t,f.nextKey=i}i.time>=n?t.interpolate(i,n):t.interpolate(i,i.time)}this.data.hierarchy[e].node.updateMatrix(),r.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===h[0][o])for(this.hierarchy[0].updateMatrixWorld(!0),e=0;e<this.hierarchy.length;e++)h[e][o]=this.hierarchy[e]instanceof THREE.Bone?this.hierarchy[e].skinMatrix.clone():this.hierarchy[e].matrix.clone()}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,i){for(i%=(t=this.data.hierarchy[t].keys).length;i<t.length;i++)if(t[i].hasTarget(e))return t[i];return t[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,i){for(t=this.data.hierarchy[t].keys,i=i>=0?i:i+t.length;i>=0;i--)if(t[i].hasTarget(e))return t[i];return t[t.length-1]},THREE.CubeCamera=function(e,t,i){THREE.Object3D.call(this);var r=new THREE.PerspectiveCamera(90,1,e,t);r.up.set(0,-1,0),r.lookAt(new THREE.Vector3(1,0,0)),this.add(r);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,-1,0),o.lookAt(new THREE.Vector3(-1,0,0)),this.add(o);var n=new THREE.PerspectiveCamera(90,1,e,t);n.up.set(0,0,1),n.lookAt(new THREE.Vector3(0,1,0)),this.add(n);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,0,-1),a.lookAt(new THREE.Vector3(0,-1,0)),this.add(a);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new THREE.Vector3(0,0,1)),this.add(s);var h=new THREE.PerspectiveCamera(90,1,e,t);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,-1)),this.add(h),this.renderTarget=new THREE.WebGLRenderTargetCube(i,i,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var i=this.renderTarget,l=i.generateMipmaps;i.generateMipmaps=!1,i.activeCubeFace=0,e.render(t,r,i),i.activeCubeFace=1,e.render(t,o,i),i.activeCubeFace=2,e.render(t,n,i),i.activeCubeFace=3,e.render(t,a,i),i.activeCubeFace=4,e.render(t,s,i),i.generateMipmaps=l,i.activeCubeFace=5,e.render(t,h,i)}},THREE.CubeCamera.prototype=new THREE.Object3D,THREE.CubeCamera.prototype.constructor=THREE.CubeCamera,THREE.CombinedCamera=function(e,t,i,r,o,n,a){THREE.Camera.call(this),this.fov=i,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,n,a),this.cameraP=new THREE.PerspectiveCamera(i,e/t,r,o),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=new THREE.Camera,THREE.CombinedCamera.prototype.constructor=THREE.CombinedCamera,THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPersepectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.cameraP.aspect,t=(this.cameraP.near+this.cameraP.far)/2;e=2*(t=Math.tan(this.fov/2)*t)*e/2,t/=this.zoom,e/=this.zoom;this.cameraO.left=-e,this.cameraO.right=e,this.cameraO.top=t,this.cameraO.bottom=-t,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPersepectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPersepectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPersepectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(e,t){var i=2*Math.atan((void 0!==t?t:24)/(2*e))*(180/Math.PI);return this.setFov(i),i},THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPersepectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.FirstPersonControls=function(e,t){function i(e,t){return function(){t.apply(e,arguments)}}this.object=e,this.target=new THREE.Vector3(0,0,0),this.domElement=void 0!==t?t:document,this.movementSpeed=1,this.lookSpeed=.005,this.noFly=!1,this.lookVertical=!0,this.autoForward=!1,this.activeLook=!0,this.heightSpeed=!1,this.heightCoef=1,this.heightMin=0,this.constrainVertical=!1,this.verticalMin=0,this.verticalMax=Math.PI,this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=0,this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1,this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute("tabindex",-1)),this.onMouseDown=function(e){if(this.domElement!==document&&this.domElement.focus(),e.preventDefault(),e.stopPropagation(),this.activeLook)switch(e.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0},this.onMouseUp=function(e){if(e.preventDefault(),e.stopPropagation(),this.activeLook)switch(e.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1},this.onMouseMove=function(e){this.domElement===document?(this.mouseX=e.pageX-this.viewHalfX,this.mouseY=e.pageY-this.viewHalfY):(this.mouseX=e.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=e.pageY-this.domElement.offsetTop-this.viewHalfY)},this.onKeyDown=function(e){switch(e.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}},this.onKeyUp=function(e){switch(e.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=!1;break;case 70:this.moveDown=!1}},this.update=function(e){var t=0;if(!this.freeze){this.heightSpeed?(t=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin,this.autoSpeedFactor=e*t*this.heightCoef):this.autoSpeedFactor=0,t=e*this.movementSpeed,(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(t+this.autoSpeedFactor)),this.moveBackward&&this.object.translateZ(t),this.moveLeft&&this.object.translateX(-t),this.moveRight&&this.object.translateX(t),this.moveUp&&this.object.translateY(t),this.moveDown&&this.object.translateY(-t),e*=this.lookSpeed,this.activeLook||(e=0),this.lon=this.lon+this.mouseX*e,this.lookVertical&&(this.lat=this.lat-this.mouseY*e),this.lat=Math.max(-85,Math.min(85,this.lat)),this.phi=(90-this.lat)*Math.PI/180,this.theta=this.lon*Math.PI/180;t=this.target;var i=this.object.position;t.x=i.x+100*Math.sin(this.phi)*Math.cos(this.theta),t.y=i.y+100*Math.cos(this.phi),t.z=i.z+100*Math.sin(this.phi)*Math.sin(this.theta),t=1,this.constrainVertical&&(t=Math.PI/(this.verticalMax-this.verticalMin)),this.lon=this.lon+this.mouseX*e,this.lookVertical&&(this.lat=this.lat-this.mouseY*e*t),this.lat=Math.max(-85,Math.min(85,this.lat)),this.phi=(90-this.lat)*Math.PI/180,this.theta=this.lon*Math.PI/180,this.constrainVertical&&(this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax)),t=this.target,i=this.object.position,t.x=i.x+100*Math.sin(this.phi)*Math.cos(this.theta),t.y=i.y+100*Math.cos(this.phi),t.z=i.z+100*Math.sin(this.phi)*Math.sin(this.theta),this.object.lookAt(t)}},this.domElement.addEventListener("contextmenu",(function(e){e.preventDefault()}),!1),this.domElement.addEventListener("mousemove",i(this,this.onMouseMove),!1),this.domElement.addEventListener("mousedown",i(this,this.onMouseDown),!1),this.domElement.addEventListener("mouseup",i(this,this.onMouseUp),!1),this.domElement.addEventListener("keydown",i(this,this.onKeyDown),!1),this.domElement.addEventListener("keyup",i(this,this.onKeyUp),!1)},THREE.PathControls=function(e,t){function i(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)}function r(e,t,i,r){var o,n={name:i,fps:.6,length:r,hierarchy:[]},a=t.getControlPointsArray(),s=t.getLength(),h=a.length,l=0;for(o=h-1,(t={parent:-1,keys:[]}).keys[0]={time:0,pos:a[0],rot:[0,0,0,1],scl:[1,1,1]},t.keys[o]={time:r,pos:a[o],rot:[0,0,0,1],scl:[1,1,1]},o=1;o<h-1;o++)l=r*s.chunks[o]/s.total,t.keys[o]={time:l,pos:a[o]};return n.hierarchy[0]=t,THREE.AnimationHandler.add(n),new THREE.Animation(e,i,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function o(e,t){var i,r,o=new THREE.Geometry;for(i=0;i<e.points.length*t;i++)r=i/(e.points.length*t),r=e.getPoint(r),o.vertices[i]=new THREE.Vector3(r.x,r.y,r.z);return o}this.object=e,this.domElement=void 0!==t?t:document,this.id="PathControls"+THREE.PathControlsIdCounter++,this.duration=1e4,this.waypoints=[],this.useConstantSpeed=!0,this.resamplingCoef=50,this.debugPath=new THREE.Object3D,this.debugDummy=new THREE.Object3D,this.animationParent=new THREE.Object3D,this.lookSpeed=.005,this.lookHorizontal=this.lookVertical=!0,this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]},this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]},this.target=new THREE.Object3D,this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0,this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute("tabindex",-1));var n=2*Math.PI,a=Math.PI/180;this.update=function(e){var t;this.lookHorizontal&&(this.lon=this.lon+this.mouseX*this.lookSpeed*e),this.lookVertical&&(this.lat=this.lat-this.mouseY*this.lookSpeed*e),this.lon=Math.max(0,Math.min(360,this.lon)),this.lat=Math.max(-85,Math.min(85,this.lat)),this.phi=(90-this.lat)*a,this.theta=this.lon*a,e=this.phi%n,this.phi=e>=0?e:e+n,t=this.verticalAngleMap.srcRange,e=this.verticalAngleMap.dstRange,t=THREE.Math.mapLinear(this.phi,t[0],t[1],e[0],e[1]);var r=e[1]-e[0];this.phi=i((t-e[0])/r)*r+e[0],t=this.horizontalAngleMap.srcRange,e=this.horizontalAngleMap.dstRange,t=THREE.Math.mapLinear(this.theta,t[0],t[1],e[0],e[1]),r=e[1]-e[0],this.theta=i((t-e[0])/r)*r+e[0],(e=this.target.position).x=100*Math.sin(this.phi)*Math.cos(this.theta),e.y=100*Math.cos(this.phi),e.z=100*Math.sin(this.phi)*Math.sin(this.theta),this.object.lookAt(this.target.position)},this.onMouseMove=function(e){this.domElement===document?(this.mouseX=e.pageX-this.viewHalfX,this.mouseY=e.pageY-this.viewHalfY):(this.mouseX=e.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=e.pageY-this.domElement.offsetTop-this.viewHalfY)},this.init=function(){if(this.spline=new THREE.Spline,this.spline.initFromArray(this.waypoints),this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef),this.createDebugDummy){var e=new THREE.MeshLambertMaterial({color:30719}),t=new THREE.MeshLambertMaterial({color:65280}),i=new THREE.CubeGeometry(10,10,20),n=new THREE.CubeGeometry(2,2,10);this.animationParent=new THREE.Mesh(i,e),(e=new THREE.Mesh(n,t)).position.set(0,10,0),this.animation=r(this.animationParent,this.spline,this.id,this.duration),this.animationParent.add(this.object),this.animationParent.add(this.target),this.animationParent.add(e)}else this.animation=r(this.animationParent,this.spline,this.id,this.duration),this.animationParent.add(this.target),this.animationParent.add(this.object);if(this.createDebugPath){e=this.debugPath,n=o(t=this.spline,10),i=o(t,10);var a=new THREE.LineBasicMaterial({color:16711680,linewidth:3});n=new THREE.Line(n,a),i=new THREE.ParticleSystem(i,new THREE.ParticleBasicMaterial({color:16755200,size:3}));n.scale.set(1,1,1),e.add(n),i.scale.set(1,1,1),e.add(i);n=new THREE.SphereGeometry(1,16,8),a=new THREE.MeshBasicMaterial({color:65280});for(var s=0;s<t.points.length;s++)(i=new THREE.Mesh(n,a)).position.copy(t.points[s]),e.add(i)}this.domElement.addEventListener("mousemove",function(e,t){return function(){t.apply(e,arguments)}}(this,this.onMouseMove),!1)}},THREE.PathControlsIdCounter=0,THREE.FlyControls=function(e,t){function i(e,t){return function(){t.apply(e,arguments)}}this.object=e,this.domElement=void 0!==t?t:document,t&&this.domElement.setAttribute("tabindex",-1),this.movementSpeed=1,this.rollSpeed=.005,this.autoForward=this.dragToLook=!1,this.object.useQuaternion=!0,this.tmpQuaternion=new THREE.Quaternion,this.mouseStatus=0,this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},this.moveVector=new THREE.Vector3(0,0,0),this.rotationVector=new THREE.Vector3(0,0,0),this.handleEvent=function(e){"function"==typeof this[e.type]&&this[e.type](e)},this.keydown=function(e){if(!e.altKey){switch(e.keyCode){case 16:this.movementSpeedMultiplier=.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=1;break;case 40:this.moveState.pitchDown=1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector(),this.updateRotationVector()}},this.keyup=function(e){switch(e.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=0;break;case 70:this.moveState.down=0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector(),this.updateRotationVector()},this.mousedown=function(e){if(this.domElement!==document&&this.domElement.focus(),e.preventDefault(),e.stopPropagation(),this.dragToLook)this.mouseStatus++;else switch(e.button){case 0:this.object.moveForward=!0;break;case 2:this.object.moveBackward=!0}},this.mousemove=function(e){if(!this.dragToLook||this.mouseStatus>0){var t=this.getContainerDimensions(),i=t.size[0]/2,r=t.size[1]/2;this.moveState.yawLeft=-(e.pageX-t.offset[0]-i)/i,this.moveState.pitchDown=(e.pageY-t.offset[1]-r)/r,this.updateRotationVector()}},this.mouseup=function(e){if(e.preventDefault(),e.stopPropagation(),this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else switch(e.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.updateRotationVector()},this.update=function(e){var t=e*this.movementSpeed;e*=this.rollSpeed;this.object.translateX(this.moveVector.x*t),this.object.translateY(this.moveVector.y*t),this.object.translateZ(this.moveVector.z*t),this.tmpQuaternion.set(this.rotationVector.x*e,this.rotationVector.y*e,this.rotationVector.z*e,1).normalize(),this.object.quaternion.multiplySelf(this.tmpQuaternion),this.object.matrix.setPosition(this.object.position),this.object.matrix.setRotationFromQuaternion(this.object.quaternion),this.object.matrixWorldNeedsUpdate=!0},this.updateMovementVector=function(){var e=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right,this.moveVector.y=-this.moveState.down+this.moveState.up,this.moveVector.z=-e+this.moveState.back},this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp,this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft,this.rotationVector.z=-this.moveState.rollRight+this.moveState.rollLeft},this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}},this.domElement.addEventListener("mousemove",i(this,this.mousemove),!1),this.domElement.addEventListener("mousedown",i(this,this.mousedown),!1),this.domElement.addEventListener("mouseup",i(this,this.mouseup),!1),this.domElement.addEventListener("keydown",i(this,this.keydown),!1),this.domElement.addEventListener("keyup",i(this,this.keyup),!1),this.updateMovementVector(),this.updateRotationVector()},THREE.RollControls=function(e,t){this.object=e,this.domElement=void 0!==t?t:document,this.mouseLook=!0,this.autoForward=!1,this.rollSpeed=this.movementSpeed=this.lookSpeed=1,this.constrainVertical=[-.9,.9],this.object.matrixAutoUpdate=!1,this.forward=new THREE.Vector3(0,0,1),this.roll=0;var i=new THREE.Vector3,r=new THREE.Vector3,o=new THREE.Vector3,n=new THREE.Matrix4,a=!1,s=1,h=0,l=0,c=0,f=0,E=0,u=window.innerWidth/2,p=window.innerHeight/2;this.update=function(e){if(this.mouseLook){var t=e*this.lookSpeed;this.rotateHorizontally(t*f),this.rotateVertically(t*E)}t=e*this.movementSpeed,this.object.translateZ(-t*(h>0||this.autoForward&&!(h<0)?1:h)),this.object.translateX(t*l),this.object.translateY(t*c),a&&(this.roll=this.roll+this.rollSpeed*e*s),this.forward.y>this.constrainVertical[1]?(this.forward.y=this.constrainVertical[1],this.forward.normalize()):this.forward.y<this.constrainVertical[0]&&(this.forward.y=this.constrainVertical[0],this.forward.normalize()),o.copy(this.forward),r.set(0,1,0),i.cross(r,o).normalize(),r.cross(o,i).normalize(),this.object.matrix.elements[0]=i.x,this.object.matrix.elements[4]=r.x,this.object.matrix.elements[8]=o.x,this.object.matrix.elements[1]=i.y,this.object.matrix.elements[5]=r.y,this.object.matrix.elements[9]=o.y,this.object.matrix.elements[2]=i.z,this.object.matrix.elements[6]=r.z,this.object.matrix.elements[10]=o.z,n.identity(),n.elements[0]=Math.cos(this.roll),n.elements[4]=-Math.sin(this.roll),n.elements[1]=Math.sin(this.roll),n.elements[5]=Math.cos(this.roll),this.object.matrix.multiplySelf(n),this.object.matrixWorldNeedsUpdate=!0,this.object.matrix.elements[12]=this.object.position.x,this.object.matrix.elements[13]=this.object.position.y,this.object.matrix.elements[14]=this.object.position.z},this.translateX=function(e){this.object.position.x=this.object.position.x+this.object.matrix.elements[0]*e,this.object.position.y=this.object.position.y+this.object.matrix.elements[1]*e,this.object.position.z=this.object.position.z+this.object.matrix.elements[2]*e},this.translateY=function(e){this.object.position.x=this.object.position.x+this.object.matrix.elements[4]*e,this.object.position.y=this.object.position.y+this.object.matrix.elements[5]*e,this.object.position.z=this.object.position.z+this.object.matrix.elements[6]*e},this.translateZ=function(e){this.object.position.x=this.object.position.x-this.object.matrix.elements[8]*e,this.object.position.y=this.object.position.y-this.object.matrix.elements[9]*e,this.object.position.z=this.object.position.z-this.object.matrix.elements[10]*e},this.rotateHorizontally=function(e){i.set(this.object.matrix.elements[0],this.object.matrix.elements[1],this.object.matrix.elements[2]),i.multiplyScalar(e),this.forward.subSelf(i),this.forward.normalize()},this.rotateVertically=function(e){r.set(this.object.matrix.elements[4],this.object.matrix.elements[5],this.object.matrix.elements[6]),r.multiplyScalar(e),this.forward.addSelf(r),this.forward.normalize()},this.domElement.addEventListener("contextmenu",(function(e){e.preventDefault()}),!1),this.domElement.addEventListener("mousemove",(function(e){f=(e.clientX-u)/window.innerWidth,E=(e.clientY-p)/window.innerHeight}),!1),this.domElement.addEventListener("mousedown",(function(e){switch(e.preventDefault(),e.stopPropagation(),e.button){case 0:h=1;break;case 2:h=-1}}),!1),this.domElement.addEventListener("mouseup",(function(e){switch(e.preventDefault(),e.stopPropagation(),e.button){case 0:h=0;break;case 2:h=0}}),!1),this.domElement.addEventListener("keydown",(function(e){switch(e.keyCode){case 38:case 87:h=1;break;case 37:case 65:l=-1;break;case 40:case 83:h=-1;break;case 39:case 68:l=1;break;case 81:a=!0,s=1;break;case 69:a=!0,s=-1;break;case 82:c=1;break;case 70:c=-1}}),!1),this.domElement.addEventListener("keyup",(function(e){switch(e.keyCode){case 38:case 87:h=0;break;case 37:case 65:l=0;break;case 40:case 83:h=0;break;case 39:case 68:l=0;break;case 81:a=!1;break;case 69:a=!1;break;case 82:c=0;break;case 70:c=0}}),!1)},THREE.TrackballControls=function(e,t){THREE.EventTarget.call(this);var i=this;this.object=e,this.domElement=void 0!==t?t:document,this.enabled=!0,this.screen={width:window.innerWidth,height:window.innerHeight,offsetLeft:0,offsetTop:0},this.radius=(this.screen.width+this.screen.height)/4,this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.staticMoving=this.noPan=this.noZoom=this.noRotate=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.keys=[65,83,68],this.target=new THREE.Vector3;var r=new THREE.Vector3,o=!1,n=-1,a=new THREE.Vector3,s=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector2,c=new THREE.Vector2,f=new THREE.Vector2,E=new THREE.Vector2,u={type:"change"};this.handleEvent=function(e){"function"==typeof this[e.type]&&this[e.type](e)},this.getMouseOnScreen=function(e,t){return new THREE.Vector2((e-i.screen.offsetLeft)/i.radius*.5,(t-i.screen.offsetTop)/i.radius*.5)},this.getMouseProjectionOnBall=function(e,t){var r=new THREE.Vector3((e-.5*i.screen.width-i.screen.offsetLeft)/i.radius,(.5*i.screen.height+i.screen.offsetTop-t)/i.radius,0),o=r.length();return o>1?r.normalize():r.z=Math.sqrt(1-o*o),a.copy(i.object.position).subSelf(i.target),(o=i.object.up.clone().setLength(r.y)).addSelf(i.object.up.clone().crossSelf(a).setLength(r.x)),o.addSelf(a.setLength(r.z)),o},this.rotateCamera=function(){if(r=Math.acos(s.dot(h)/s.length()/h.length())){var e=(new THREE.Vector3).cross(s,h).normalize(),t=new THREE.Quaternion,r=r*i.rotateSpeed;t.setFromAxisAngle(e,-r),t.multiplyVector3(a),t.multiplyVector3(i.object.up),t.multiplyVector3(h),i.staticMoving?s=h:(t.setFromAxisAngle(e,r*(i.dynamicDampingFactor-1)),t.multiplyVector3(s))}},this.zoomCamera=function(){var e=1+(c.y-l.y)*i.zoomSpeed;1!==e&&e>0&&(a.multiplyScalar(e),i.staticMoving?l=c:l.y=l.y+(c.y-l.y)*this.dynamicDampingFactor)},this.panCamera=function(){var e=E.clone().subSelf(f);if(e.lengthSq()){e.multiplyScalar(a.length()*i.panSpeed);var t=a.clone().crossSelf(i.object.up).setLength(e.x);t.addSelf(i.object.up.clone().setLength(e.y)),i.object.position.addSelf(t),i.target.addSelf(t),i.staticMoving?f=E:f.addSelf(e.sub(E,f).multiplyScalar(i.dynamicDampingFactor))}},this.checkDistances=function(){i.noZoom&&i.noPan||(i.object.position.lengthSq()>i.maxDistance*i.maxDistance&&i.object.position.setLength(i.maxDistance),a.lengthSq()<i.minDistance*i.minDistance&&i.object.position.add(i.target,a.setLength(i.minDistance)))},this.update=function(){a.copy(i.object.position).subSelf(i.target),i.noRotate||i.rotateCamera(),i.noZoom||i.zoomCamera(),i.noPan||i.panCamera(),i.object.position.add(i.target,a),i.checkDistances(),i.object.lookAt(i.target),r.distanceTo(i.object.position)>0&&(i.dispatchEvent(u),r.copy(i.object.position))},this.domElement.addEventListener("contextmenu",(function(e){e.preventDefault()}),!1),this.domElement.addEventListener("mousemove",(function(e){i.enabled&&(o&&(s=h=i.getMouseProjectionOnBall(e.clientX,e.clientY),l=c=i.getMouseOnScreen(e.clientX,e.clientY),f=E=i.getMouseOnScreen(e.clientX,e.clientY),o=!1),-1!==n&&(0!==n||i.noRotate?1!==n||i.noZoom?2===n&&!i.noPan&&(E=i.getMouseOnScreen(e.clientX,e.clientY)):c=i.getMouseOnScreen(e.clientX,e.clientY):h=i.getMouseProjectionOnBall(e.clientX,e.clientY)))}),!1),this.domElement.addEventListener("mousedown",(function(e){i.enabled&&(e.preventDefault(),e.stopPropagation(),-1===n&&(0!==(n=e.button)||i.noRotate?1!==n||i.noZoom?this.noPan||(f=E=i.getMouseOnScreen(e.clientX,e.clientY)):l=c=i.getMouseOnScreen(e.clientX,e.clientY):s=h=i.getMouseProjectionOnBall(e.clientX,e.clientY)))}),!1),this.domElement.addEventListener("mouseup",(function(e){i.enabled&&(e.preventDefault(),e.stopPropagation(),n=-1)}),!1),window.addEventListener("keydown",(function(e){i.enabled&&-1===n&&(e.keyCode!==i.keys[0]||i.noRotate?e.keyCode!==i.keys[1]||i.noZoom?e.keyCode===i.keys[2]&&!i.noPan&&(n=2):n=1:n=0,-1!==n&&(o=!0))}),!1),window.addEventListener("keyup",(function(){i.enabled&&-1!==n&&(n=-1)}),!1)},THREE.CubeGeometry=function(e,t,i,r,o,n,a,s){function h(e,t,i,a,s,h,l,c){var f,E=r||1,u=o||1,p=s/2,m=h/2,g=d.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?f="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(f="y",u=n||1):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(f="x",E=n||1);var v=E+1,T=u+1,R=s/E,y=h/u,x=new THREE.Vector3;for(x[f]=l>0?1:-1,s=0;s<T;s++)for(h=0;h<v;h++){var H=new THREE.Vector3;H[e]=(h*R-p)*i,H[t]=(s*y-m)*a,H[f]=l,d.vertices.push(H)}for(s=0;s<u;s++)for(h=0;h<E;h++)(e=new THREE.Face4(h+v*s+g,h+v*(s+1)+g,h+1+v*(s+1)+g,h+1+v*s+g)).normal.copy(x),e.vertexNormals.push(x.clone(),x.clone(),x.clone(),x.clone()),e.materialIndex=c,d.faces.push(e),d.faceVertexUvs[0].push([new THREE.UV(h/E,s/u),new THREE.UV(h/E,(s+1)/u),new THREE.UV((h+1)/E,(s+1)/u),new THREE.UV((h+1)/E,s/u)])}THREE.Geometry.call(this);var l,c,f,E,u,p,d=this,m=e/2,g=t/2,v=i/2;if(void 0!==a){if(a instanceof Array)this.materials=a;else for(this.materials=[],l=0;l<6;l++)this.materials.push(a);l=0,E=1,c=2,u=3,f=4,p=5}else this.materials=[];if(this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0},null!=s)for(var T in s)void 0!==this.sides[T]&&(this.sides[T]=s[T]);this.sides.px&&h("z","y",-1,-1,i,t,m,l),this.sides.nx&&h("z","y",1,-1,i,t,-m,E),this.sides.py&&h("x","z",1,1,e,i,g,c),this.sides.ny&&h("x","z",1,-1,e,i,-g,u),this.sides.pz&&h("x","y",1,-1,e,t,v,f),this.sides.nz&&h("x","y",-1,-1,e,t,-v,p),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=new THREE.Geometry,THREE.CubeGeometry.prototype.constructor=THREE.CubeGeometry,THREE.CylinderGeometry=function(e,t,i,r,o,n){THREE.Geometry.call(this);e=void 0!==e?e:20,t=void 0!==t?t:20;var a,s,h=(i=void 0!==i?i:100)/2,l=(r=r||8,o=o||1,[]),c=[];for(s=0;s<=o;s++){var f=[],E=[],u=(d=s/o)*(t-e)+e;for(a=0;a<=r;a++){var p=a/r;(m=new THREE.Vector3).x=u*Math.sin(p*Math.PI*2),m.y=-d*i+h,m.z=u*Math.cos(p*Math.PI*2),this.vertices.push(m),f.push(this.vertices.length-1),E.push(new THREE.UV(p,d))}l.push(f),c.push(E)}for(i=(t-e)/i,a=0;a<r;a++)for(0!==e?(f=this.vertices[l[0][a]].clone(),E=this.vertices[l[0][a+1]].clone()):(f=this.vertices[l[1][a]].clone(),E=this.vertices[l[1][a+1]].clone()),f.setY(Math.sqrt(f.x*f.x+f.z*f.z)*i).normalize(),E.setY(Math.sqrt(E.x*E.x+E.z*E.z)*i).normalize(),s=0;s<o;s++){var d=l[s][a],m=(u=l[s+1][a],p=l[s+1][a+1],l[s][a+1]),g=f.clone(),v=f.clone(),T=E.clone(),R=E.clone(),y=c[s][a].clone(),x=c[s+1][a].clone(),H=c[s+1][a+1].clone(),b=c[s][a+1].clone();this.faces.push(new THREE.Face4(d,u,p,m,[g,v,T,R])),this.faceVertexUvs[0].push([y,x,H,b])}if(!n&&e>0)for(this.vertices.push(new THREE.Vector3(0,h,0)),a=0;a<r;a++)d=l[0][a],u=l[0][a+1],p=this.vertices.length-1,g=new THREE.Vector3(0,1,0),v=new THREE.Vector3(0,1,0),T=new THREE.Vector3(0,1,0),y=c[0][a].clone(),x=c[0][a+1].clone(),H=new THREE.UV(x.u,0),this.faces.push(new THREE.Face3(d,u,p,[g,v,T])),this.faceVertexUvs[0].push([y,x,H]);if(!n&&t>0)for(this.vertices.push(new THREE.Vector3(0,-h,0)),a=0;a<r;a++)d=l[s][a+1],u=l[s][a],p=this.vertices.length-1,g=new THREE.Vector3(0,-1,0),v=new THREE.Vector3(0,-1,0),T=new THREE.Vector3(0,-1,0),y=c[s][a+1].clone(),x=c[s][a].clone(),H=new THREE.UV(x.u,1),this.faces.push(new THREE.Face3(d,u,p,[g,v,T])),this.faceVertexUvs[0].push([y,x,H]);this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=new THREE.Geometry,THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry,THREE.ExtrudeGeometry=function(e,t){void 0!==e&&(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=new THREE.Geometry,THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry,THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var i=e.length,r=0;r<i;r++)this.addShape(e[r],t)},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function i(e,t,i){return t.clone().multiplyScalar(i).addSelf(e)}function r(e,t,i){var r=THREE.ExtrudeGeometry.__v1,o=THREE.ExtrudeGeometry.__v2,n=THREE.ExtrudeGeometry.__v3,a=THREE.ExtrudeGeometry.__v4,s=THREE.ExtrudeGeometry.__v5,h=THREE.ExtrudeGeometry.__v6;return r.set(e.x-t.x,e.y-t.y),o.set(e.x-i.x,e.y-i.y),r=r.normalize(),o=o.normalize(),n.set(-r.y,r.x),a.set(o.y,-o.x),s.copy(e).addSelf(n),h.copy(e).addSelf(a),s.equals(h)?a.clone():(s.copy(t).addSelf(n),h.copy(i).addSelf(a),n=r.dot(a),a=h.subSelf(s).dot(a),(a/=n)<0?((t=Math.atan2(t.y-e.y,t.x-e.x))>(e=Math.atan2(i.y-e.y,i.x-e.x))&&(e+=2*Math.PI),i=(t+e)/2,e=-Math.cos(i),i=-Math.sin(i),new THREE.Vector2(e,i)):r.multiplyScalar(a).addSelf(s).subSelf(e).clone())}function o(i,r){var o,n;for(N=i.length;--N>=0;){o=N,(n=N-1)<0&&(n=i.length-1);var a=0,s=g+2*d;for(a=0;a<s;a++){var h=i,l=a,c=s,f=(f=r+o+(E=B*a))+S,E=(E=r+n+E)+S,u=(u=r+n+(p=B*(a+1)))+S,p=(p=r+o+p)+S;_.faces.push(new THREE.Face4(f,E,u,p,null,null,x)),f=W.generateSideWallUV(_,e,h,t,f,E,u,p,l,c),_.faceVertexUvs[0].push(f)}}}function n(e,t,i){_.vertices.push(new THREE.Vector3(e,t,i))}function a(i,r,o,n){i+=S,r+=S,o+=S,_.faces.push(new THREE.Face3(i,r,o,null,null,y)),i=n?W.generateBottomUV(_,e,t,i,r,o):W.generateTopUV(_,e,t,i,r,o),_.faceVertexUvs[0].push(i)}var s,h,l,c,f,E=void 0!==t.amount?t.amount:100,u=void 0!==t.bevelThickness?t.bevelThickness:6,p=void 0!==t.bevelSize?t.bevelSize:u-2,d=void 0!==t.bevelSegments?t.bevelSegments:3,m=void 0===t.bevelEnabled||t.bevelEnabled,g=void 0!==t.steps?t.steps:1,v=t.bendPath,T=t.extrudePath,R=!1,y=t.material,x=t.extrudeMaterial;T&&(s=T.getSpacedPoints(g),R=!0,m=!1,h=new THREE.TubeGeometry.FrenetFrames(T,g,!1),l=new THREE.Vector3,c=new THREE.Vector3,f=new THREE.Vector3),m||(p=u=d=0);var H,b,w,_=this,S=this.vertices.length;v&&e.addWrapPath(v);v=(T=e.extractPoints()).shape;var M=T.holes;if(T=!THREE.Shape.Utils.isClockWise(v)){for(v=v.reverse(),b=0,w=M.length;b<w;b++)H=M[b],THREE.Shape.Utils.isClockWise(H)&&(M[b]=H.reverse());T=!1}var A=THREE.Shape.Utils.triangulateShape(v,M),C=v;for(b=0,w=M.length;b<w;b++)H=M[b],v=v.concat(H);var L,P,F,U,D,V,B=v.length,z=A.length,N=(T=[],0);for(L=(F=C.length)-1,P=N+1;N<F;N++,L++,P++)L===F&&(L=0),P===F&&(P=0),T[N]=r(C[N],C[L],C[P]);var k,O=[],I=T.concat();for(b=0,w=M.length;b<w;b++){for(H=M[b],k=[],N=0,L=(F=H.length)-1,P=N+1;N<F;N++,L++,P++)L===F&&(L=0),P===F&&(P=0),k[N]=r(H[N],H[L],H[P]);O.push(k),I=I.concat(k)}for(L=0;L<d;L++){for(U=u*(1-(F=L/d)),P=p*Math.sin(F*Math.PI/2),N=0,F=C.length;N<F;N++)n((D=i(C[N],T[N],P)).x,D.y,-U);for(b=0,w=M.length;b<w;b++)for(H=M[b],k=O[b],N=0,F=H.length;N<F;N++)n((D=i(H[N],k[N],P)).x,D.y,-U)}for(P=p,N=0;N<B;N++)D=m?i(v[N],I[N],P):v[N],R?(c.copy(h.normals[0]).multiplyScalar(D.x),l.copy(h.binormals[0]).multiplyScalar(D.y),f.copy(s[0]).addSelf(c).addSelf(l),n(f.x,f.y,f.z)):n(D.x,D.y,0);for(F=1;F<=g;F++)for(N=0;N<B;N++)D=m?i(v[N],I[N],P):v[N],R?(c.copy(h.normals[F]).multiplyScalar(D.x),l.copy(h.binormals[F]).multiplyScalar(D.y),f.copy(s[F]).addSelf(c).addSelf(l),n(f.x,f.y,f.z)):n(D.x,D.y,E/g*F);for(L=d-1;L>=0;L--){for(U=u*(1-(F=L/d)),P=p*Math.sin(F*Math.PI/2),N=0,F=C.length;N<F;N++)n((D=i(C[N],T[N],P)).x,D.y,E+U);for(b=0,w=M.length;b<w;b++)for(H=M[b],k=O[b],N=0,F=H.length;N<F;N++)D=i(H[N],k[N],P),R?n(D.x,D.y+s[g-1].y,s[g-1].x+U):n(D.x,D.y,E+U)}var W=THREE.ExtrudeGeometry.WorldUVGenerator;!function(){if(m){var e;for(e=0*B,N=0;N<z;N++)a((V=A[N])[2]+e,V[1]+e,V[0]+e,!0);for(e=g+2*d,e*=B,N=0;N<z;N++)a((V=A[N])[0]+e,V[1]+e,V[2]+e,!1)}else{for(N=0;N<z;N++)a((V=A[N])[2],V[1],V[0],!0);for(N=0;N<z;N++)a((V=A[N])[0]+B*g,V[1]+B*g,V[2]+B*g,!1)}}(),function(){var e=0;for(o(C,e),e+=C.length,b=0,w=M.length;b<w;b++)o(H=M[b],e),e+=H.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,i,r,o,n){return t=e.vertices[o].x,o=e.vertices[o].y,i=e.vertices[n].x,n=e.vertices[n].y,[new THREE.UV(e.vertices[r].x,1-e.vertices[r].y),new THREE.UV(t,1-o),new THREE.UV(i,1-n)]},generateBottomUV:function(e,t,i,r,o,n){return this.generateTopUV(e,t,i,r,o,n)},generateSideWallUV:function(e,t,i,r,o,n,a,s){t=e.vertices[o].x,i=e.vertices[o].y,o=e.vertices[o].z,r=e.vertices[n].x;var h=e.vertices[n].y,l=(n=e.vertices[n].z,e.vertices[a].x),c=e.vertices[a].y,f=(a=e.vertices[a].z,e.vertices[s].x),E=e.vertices[s].y;e=e.vertices[s].z;return Math.abs(i-h)<.01?[new THREE.UV(t,o),new THREE.UV(r,n),new THREE.UV(l,a),new THREE.UV(f,e)]:[new THREE.UV(i,o),new THREE.UV(h,n),new THREE.UV(c,a),new THREE.UV(E,e)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.LatheGeometry=function(e,t,i){THREE.Geometry.call(this);t=t||12,i=i||2*Math.PI;for(var r=[],o=(new THREE.Matrix4).makeRotationZ(i/t),n=0;n<e.length;n++)r[n]=e[n].clone(),this.vertices.push(r[n]);var a=t+1;for(i=0;i<a;i++)for(n=0;n<r.length;n++)r[n]=o.multiplyVector3(r[n].clone()),this.vertices.push(r[n]);for(i=0;i<t;i++)for(r=0,o=e.length;r<o-1;r++)this.faces.push(new THREE.Face4(i*o+r,(i+1)%a*o+r,(i+1)%a*o+(r+1)%o,i*o+(r+1)%o)),this.faceVertexUvs[0].push([new THREE.UV(1-i/t,r/o),new THREE.UV(1-(i+1)/t,r/o),new THREE.UV(1-(i+1)/t,(r+1)/o),new THREE.UV(1-i/t,(r+1)/o)]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=new THREE.Geometry,THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry,THREE.PlaneGeometry=function(e,t,i,r){THREE.Geometry.call(this);var o=e/2,n=t/2,a=(i=i||1)+1,s=(r=r||1)+1,h=e/i,l=t/r,c=new THREE.Vector3(0,1,0);for(e=0;e<s;e++)for(t=0;t<a;t++)this.vertices.push(new THREE.Vector3(t*h-o,0,e*l-n));for(e=0;e<r;e++)for(t=0;t<i;t++)(o=new THREE.Face4(t+a*e,t+a*(e+1),t+1+a*(e+1),t+1+a*e)).normal.copy(c),o.vertexNormals.push(c.clone(),c.clone(),c.clone(),c.clone()),this.faces.push(o),this.faceVertexUvs[0].push([new THREE.UV(t/i,e/r),new THREE.UV(t/i,(e+1)/r),new THREE.UV((t+1)/i,(e+1)/r),new THREE.UV((t+1)/i,e/r)]);this.computeCentroids()},THREE.PlaneGeometry.prototype=new THREE.Geometry,THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry,THREE.SphereGeometry=function(e,t,i,r,o,n,a){THREE.Geometry.call(this);e=e||50,r=void 0!==r?r:0,o=void 0!==o?o:2*Math.PI,n=void 0!==n?n:0,a=void 0!==a?a:Math.PI,t=Math.max(3,Math.floor(t)||8),i=Math.max(2,Math.floor(i)||6);var s,h,l=[],c=[];for(h=0;h<=i;h++){var f=[],E=[];for(s=0;s<=t;s++){var u=s/t,p=h/i;(d=new THREE.Vector3).x=-e*Math.cos(r+u*o)*Math.sin(n+p*a),d.y=e*Math.cos(n+p*a),d.z=e*Math.sin(r+u*o)*Math.sin(n+p*a),this.vertices.push(d),f.push(this.vertices.length-1),E.push(new THREE.UV(u,p))}l.push(f),c.push(E)}for(h=0;h<i;h++)for(s=0;s<t;s++){r=l[h][s+1],o=l[h][s],n=l[h+1][s],a=l[h+1][s+1],f=this.vertices[r].clone().normalize(),E=this.vertices[o].clone().normalize(),u=this.vertices[n].clone().normalize(),p=this.vertices[a].clone().normalize();var d=c[h][s+1].clone(),m=c[h][s].clone(),g=c[h+1][s].clone(),v=c[h+1][s+1].clone();Math.abs(this.vertices[r].y)==e?(this.faces.push(new THREE.Face3(r,n,a,[f,u,p])),this.faceVertexUvs[0].push([d,g,v])):Math.abs(this.vertices[n].y)==e?(this.faces.push(new THREE.Face3(r,o,n,[f,E,u])),this.faceVertexUvs[0].push([d,m,g])):(this.faces.push(new THREE.Face4(r,o,n,a,[f,E,u,p])),this.faceVertexUvs[0].push([d,m,g,v]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere={radius:e}},THREE.SphereGeometry.prototype=new THREE.Geometry,THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry,THREE.TextGeometry=function(e,t){var i=new THREE.TextPath(e,t).toShapes();if(t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),t.bend){var r=i[i.length-1].getBoundingBox().maxX;t.bendPath=new THREE.QuadraticBezierCurve(new THREE.Vector2(0,0),new THREE.Vector2(r/2,120),new THREE.Vector2(r,0))}THREE.ExtrudeGeometry.call(this,i,t)},THREE.TextGeometry.prototype=new THREE.ExtrudeGeometry,THREE.TextGeometry.prototype.constructor=THREE.TextGeometry,THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase();return this.faces[t]=this.faces[t]||{},this.faces[t][e.cssFontWeight]=this.faces[t][e.cssFontWeight]||{},this.faces[t][e.cssFontWeight][e.cssFontStyle]=e,this.faces[t][e.cssFontWeight][e.cssFontStyle]=e},drawText:function(e){var t=this.getFace(),i=this.size/t.resolution,r=0,o=(""+e).split(""),n=o.length,a=[];for(e=0;e<n;e++){var s=new THREE.Path;r=r+(s=this.extractGlyphPoints(o[e],t,i,r,s)).offset;a.push(s.path)}return{paths:a,offset:r/2}},extractGlyphPoints:function(e,t,i,r,o){var n,a,s,h,l,c,f,E,u,p,d,m=[],g=t.glyphs[e]||t.glyphs["?"];if(g){if(g.o)for(h=(t=g._cachedOutline||(g._cachedOutline=g.o.split(" "))).length,e=0;e<h;)switch(s=t[e++]){case"m":s=t[e++]*i+r,l=t[e++]*i,m.push(new THREE.Vector2(s,l)),o.moveTo(s,l);break;case"l":s=t[e++]*i+r,l=t[e++]*i,m.push(new THREE.Vector2(s,l)),o.lineTo(s,l);break;case"q":if(s=t[e++]*i+r,l=t[e++]*i,E=t[e++]*i+r,u=t[e++]*i,o.quadraticCurveTo(E,u,s,l),n=m[m.length-1])for(c=n.x,f=n.y,n=1,a=this.divisions;n<=a;n++){var v=n/a,T=THREE.Shape.Utils.b2(v,c,E,s);v=THREE.Shape.Utils.b2(v,f,u,l);m.push(new THREE.Vector2(T,v))}break;case"b":if(s=t[e++]*i+r,l=t[e++]*i,E=t[e++]*i+r,u=t[e++]*-i,p=t[e++]*i+r,d=t[e++]*-i,o.bezierCurveTo(s,l,E,u,p,d),n=m[m.length-1])for(c=n.x,f=n.y,n=1,a=this.divisions;n<=a;n++)v=n/a,T=THREE.Shape.Utils.b3(v,c,E,p,s),v=THREE.Shape.Utils.b3(v,f,u,d,l),m.push(new THREE.Vector2(T,v))}return{offset:g.ha*i,points:m,path:o}}}},function(e){var t=function(e){for(var t=e.length,i=0,r=t-1,o=0;o<t;r=o++)i+=e[r].x*e[o].y-e[o].x*e[r].y;return.5*i};e.Triangulate=function(e,i){var r=e.length;if(r<3)return null;var o,n,a,s=[],h=[],l=[];if(t(e)>0)for(n=0;n<r;n++)h[n]=n;else for(n=0;n<r;n++)h[n]=r-1-n;var c=2*r;for(n=r-1;r>2&&!(c--<=0);){var f;r<=(o=n)&&(o=0),r<=(n=o+1)&&(n=0),r<=(a=n+1)&&(a=0);e:{var E=o,u=n,p=a,d=r,m=h,g=void 0,v=void 0,T=void 0,R=void 0,y=(f=e)[m[E]].x,x=f[m[E]].y,H=f[m[u]].x,b=f[m[u]].y,w=f[m[p]].x;if(1e-10>(H-y)*((v=f[m[p]].y)-x)-(b-x)*(w-y))f=!1;else{for(g=0;g<d;g++)if(g!=E&&g!=u&&g!=p){T=f[m[g]].x;var _=void 0,S=void 0;_=S=void 0,S=(S=H-y)*((R=f[m[g]].y)-x)-(b-x)*(T-y),_=(_=y-w)*(R-v)-(x-v)*(T-w);if((w-H)*(R-b)-(v-b)*(T-H)>=0&&_>=0&&S>=0){f=!1;break e}}f=!0}}if(f){for(s.push([e[h[o]],e[h[n]],e[h[a]]]),l.push([h[o],h[n],h[a]]),o=n,a=n+1;a<r;o++,a++)h[o]=h[a];c=2*--r}}return i?l:s},e.Triangulate.area=t}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.TorusGeometry=function(e,t,i,r,o){for(THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.segmentsR=i||8,this.segmentsT=r||6,this.arc=o||2*Math.PI,o=new THREE.Vector3,e=[],t=[],i=0;i<=this.segmentsR;i++)for(r=0;r<=this.segmentsT;r++){var n=r/this.segmentsT*this.arc,a=i/this.segmentsR*Math.PI*2;o.x=this.radius*Math.cos(n),o.y=this.radius*Math.sin(n),(s=new THREE.Vector3).x=(this.radius+this.tube*Math.cos(a))*Math.cos(n),s.y=(this.radius+this.tube*Math.cos(a))*Math.sin(n),s.z=this.tube*Math.sin(a),this.vertices.push(s),e.push(new THREE.UV(r/this.segmentsT,1-i/this.segmentsR)),t.push(s.clone().subSelf(o).normalize())}for(i=1;i<=this.segmentsR;i++)for(r=1;r<=this.segmentsT;r++){o=(this.segmentsT+1)*i+r-1,n=(this.segmentsT+1)*(i-1)+r-1,a=(this.segmentsT+1)*(i-1)+r;var s=(this.segmentsT+1)*i+r,h=new THREE.Face4(o,n,a,s,[t[o],t[n],t[a],t[s]]);h.normal.addSelf(t[o]),h.normal.addSelf(t[n]),h.normal.addSelf(t[a]),h.normal.addSelf(t[s]),h.normal.normalize(),this.faces.push(h),this.faceVertexUvs[0].push([e[o].clone(),e[n].clone(),e[a].clone(),e[s].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=new THREE.Geometry,THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry,THREE.TorusKnotGeometry=function(e,t,i,r,o,n,a){function s(e,t,i,r,o,n){var a=Math.cos(e);return Math.cos(t),t=Math.sin(e),e*=i/r,a*=o*(2+(i=Math.cos(e)))*.5,t=o*(2+i)*t*.5,o=n*o*Math.sin(e)*.5,new THREE.Vector3(a,t,o)}for(THREE.Geometry.call(this),this.radius=e||200,this.tube=t||40,this.segmentsR=i||64,this.segmentsT=r||8,this.p=o||2,this.q=n||3,this.heightScale=a||1,this.grid=Array(this.segmentsR),i=new THREE.Vector3,r=new THREE.Vector3,o=new THREE.Vector3,e=0;e<this.segmentsR;++e)for(this.grid[e]=Array(this.segmentsT),t=0;t<this.segmentsT;++t){n=s(h=e/this.segmentsR*2*this.p*Math.PI,a=t/this.segmentsT*2*Math.PI,this.q,this.p,this.radius,this.heightScale);var h=s(h+.01,a,this.q,this.p,this.radius,this.heightScale);i.sub(h,n),r.add(h,n),o.cross(i,r),r.cross(o,i),o.normalize(),r.normalize(),h=-this.tube*Math.cos(a),a=this.tube*Math.sin(a),n.x=n.x+(h*r.x+a*o.x),n.y=n.y+(h*r.y+a*o.y),n.z=n.z+(h*r.z+a*o.z),this.grid[e][t]=this.vertices.push(new THREE.Vector3(n.x,n.y,n.z))-1}for(e=0;e<this.segmentsR;++e)for(t=0;t<this.segmentsT;++t){o=(e+1)%this.segmentsR,n=(t+1)%this.segmentsT,i=this.grid[e][t],r=this.grid[o][t],o=this.grid[o][n],n=this.grid[e][n],a=new THREE.UV(e/this.segmentsR,t/this.segmentsT),h=new THREE.UV((e+1)/this.segmentsR,t/this.segmentsT);var l=new THREE.UV((e+1)/this.segmentsR,(t+1)/this.segmentsT),c=new THREE.UV(e/this.segmentsR,(t+1)/this.segmentsT);this.faces.push(new THREE.Face4(i,r,o,n)),this.faceVertexUvs[0].push([a,h,l,c])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=new THREE.Geometry,THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry,THREE.TubeGeometry=function(e,t,i,r,o,n){THREE.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=i||1,this.segmentsRadius=r||8,this.closed=o||!1,n&&(this.debug=new THREE.Object3D),this.grid=[];n=this.segments+1;var a,s,h,l,c,f,E,u,p=new THREE.Vector3;for(f=(t=new THREE.TubeGeometry.FrenetFrames(e,t,o)).tangents,E=t.normals,u=t.binormals,this.tangents=f,this.normals=E,this.binormals=u,t=0;t<n;t++)for(this.grid[t]=[],r=t/(n-1),c=e.getPointAt(r),r=f[t],a=E[t],s=u[t],this.debug&&(this.debug.add(new THREE.ArrowHelper(r,c,i,255)),this.debug.add(new THREE.ArrowHelper(a,c,i,16711680)),this.debug.add(new THREE.ArrowHelper(s,c,i,65280))),r=0;r<this.segmentsRadius;r++)h=r/this.segmentsRadius*2*Math.PI,l=-this.radius*Math.cos(h),h=this.radius*Math.sin(h),p.copy(c),p.x=p.x+(l*a.x+h*s.x),p.y=p.y+(l*a.y+h*s.y),p.z=p.z+(l*a.z+h*s.z),this.grid[t][r]=this.vertices.push(new THREE.Vector3(p.x,p.y,p.z))-1;for(t=0;t<this.segments;t++)for(r=0;r<this.segmentsRadius;r++)n=o?(t+1)%this.segments:t+1,p=(r+1)%this.segmentsRadius,e=this.grid[t][r],i=this.grid[n][r],n=this.grid[n][p],p=this.grid[t][p],f=new THREE.UV(t/this.segments,r/this.segmentsRadius),E=new THREE.UV((t+1)/this.segments,r/this.segmentsRadius),u=new THREE.UV((t+1)/this.segments,(r+1)/this.segmentsRadius),a=new THREE.UV(t/this.segments,(r+1)/this.segmentsRadius),this.faces.push(new THREE.Face4(e,i,n,p)),this.faceVertexUvs[0].push([f,E,u,a]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=new THREE.Geometry,THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry,THREE.TubeGeometry.FrenetFrames=function(e,t,i){new THREE.Vector3;var r=new THREE.Vector3;new THREE.Vector3;var o,n,a,s=[],h=[],l=[],c=new THREE.Vector3,f=new THREE.Matrix4;t+=1;for(this.tangents=s,this.normals=h,this.binormals=l,o=0;o<t;o++)n=o/(t-1),s[o]=e.getTangentAt(n),s[o].normalize();for(h[0]=new THREE.Vector3,l[0]=new THREE.Vector3,e=Number.MAX_VALUE,o=Math.abs(s[0].x),n=Math.abs(s[0].y),a=Math.abs(s[0].z),o<=e&&(e=o,r.set(1,0,0)),n<=e&&(e=n,r.set(0,1,0)),a<=e&&r.set(0,0,1),c.cross(s[0],r).normalize(),h[0].cross(s[0],c),l[0].cross(s[0],h[0]),o=1;o<t;o++)h[o]=h[o-1].clone(),l[o]=l[o-1].clone(),c.cross(s[o-1],s[o]),c.length()>1e-4&&(c.normalize(),r=Math.acos(s[o-1].dot(s[o])),f.makeRotationAxis(c,r).multiplyVector3(h[o])),l[o].cross(s[o],h[o]);if(i)for(r=Math.acos(h[0].dot(h[t-1])),r/=t-1,s[0].dot(c.cross(h[0],h[t-1]))>0&&(r=-r),o=1;o<t;o++)f.makeRotationAxis(s[o],r*o).multiplyVector3(h[o]),l[o].cross(s[o],h[o])},THREE.PolyhedronGeometry=function(e,t,i,r){function o(e){var t=e.normalize().clone();t.index=h.vertices.push(t)-1;var i=Math.atan2(e.z,-e.x)/2/Math.PI+.5;e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;return t.uv=new THREE.UV(i,e),t}function n(e,t,i,r){r<1?((r=new THREE.Face3(e.index,t.index,i.index,[e.clone(),t.clone(),i.clone()])).centroid.addSelf(e).addSelf(t).addSelf(i).divideScalar(3),r.normal=r.centroid.clone().normalize(),h.faces.push(r),r=Math.atan2(r.centroid.z,-r.centroid.x),h.faceVertexUvs[0].push([s(e.uv,e,r),s(t.uv,t,r),s(i.uv,i,r)])):(r-=1,n(e,a(e,t),a(e,i),r),n(a(e,t),t,a(t,i),r),n(a(e,i),a(t,i),i,r),n(a(e,t),a(t,i),a(e,i),r))}function a(e,t){f[e.index]||(f[e.index]=[]),f[t.index]||(f[t.index]=[]);var i=f[e.index][t.index];return void 0===i&&(f[e.index][t.index]=f[t.index][e.index]=i=o((new THREE.Vector3).add(e,t).divideScalar(2))),i}function s(e,t,i){return i<0&&1===e.u&&(e=new THREE.UV(e.u-1,e.v)),0===t.x&&0===t.z&&(e=new THREE.UV(i/2/Math.PI+.5,e.v)),e}THREE.Geometry.call(this);i=i||1,r=r||0;for(var h=this,l=0,c=e.length;l<c;l++)o(new THREE.Vector3(e[l][0],e[l][1],e[l][2]));var f=[];for(e=this.vertices,l=0,c=t.length;l<c;l++)n(e[t[l][0]],e[t[l][1]],e[t[l][2]],r);for(this.mergeVertices(),l=0,c=this.vertices.length;l<c;l++)this.vertices[l].multiplyScalar(i);this.computeCentroids(),this.boundingSphere={radius:i}},THREE.PolyhedronGeometry.prototype=new THREE.Geometry,THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry,THREE.IcosahedronGeometry=function(e,t){var i=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,i,0],[1,i,0],[-1,-i,0],[1,-i,0],[0,-1,i],[0,1,i],[0,-1,-i],[0,1,-i],[i,0,-1],[i,0,1],[-i,0,-1],[-i,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,t)},THREE.IcosahedronGeometry.prototype=new THREE.Geometry,THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry,THREE.OctahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],e,t)},THREE.OctahedronGeometry.prototype=new THREE.Geometry,THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry,THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],e,t)},THREE.TetrahedronGeometry.prototype=new THREE.Geometry,THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry,THREE.ParametricGeometry=function(e,t,i,r){THREE.Geometry.call(this);var o,n,a,s,h,l,c,f,E=this.vertices,u=this.faces,p=this.faceVertexUvs[0],d=(r=void 0!==r&&r,t+1);for(o=0;o<=i;o++)for(s=o/i,n=0;n<=t;n++)a=e(a=n/t,s),E.push(a);for(o=0;o<i;o++)for(n=0;n<t;n++)e=o*d+n,E=o*d+n+1,s=(o+1)*d+n,a=(o+1)*d+n+1,h=new THREE.UV(o/t,n/i),l=new THREE.UV(o/t,(n+1)/i),c=new THREE.UV((o+1)/t,n/i),f=new THREE.UV((o+1)/t,(n+1)/i),r?(u.push(new THREE.Face3(e,E,s)),u.push(new THREE.Face3(E,a,s)),p.push([h,l,c]),p.push([l,f,c])):(u.push(new THREE.Face4(e,E,a,s)),p.push([h,l,c,f]));this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=new THREE.Geometry,THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry,THREE.AxisHelper=function(){THREE.Object3D.call(this);var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3),e.vertices.push(new THREE.Vector3(0,100,0));var t,i=new THREE.CylinderGeometry(0,5,25,5,1);(t=new THREE.Line(e,new THREE.LineBasicMaterial({color:16711680}))).rotation.z=-Math.PI/2,this.add(t),(t=new THREE.Mesh(i,new THREE.MeshBasicMaterial({color:16711680}))).position.x=100,t.rotation.z=-Math.PI/2,this.add(t),t=new THREE.Line(e,new THREE.LineBasicMaterial({color:65280})),this.add(t),(t=new THREE.Mesh(i,new THREE.MeshBasicMaterial({color:65280}))).position.y=100,this.add(t),(t=new THREE.Line(e,new THREE.LineBasicMaterial({color:255}))).rotation.x=Math.PI/2,this.add(t),(t=new THREE.Mesh(i,new THREE.MeshBasicMaterial({color:255}))).position.z=100,t.rotation.x=Math.PI/2,this.add(t)},THREE.AxisHelper.prototype=new THREE.Object3D,THREE.AxisHelper.prototype.constructor=THREE.AxisHelper,THREE.ArrowHelper=function(e,t,i,r){THREE.Object3D.call(this),void 0===r&&(r=16776960),void 0===i&&(i=20);var o=new THREE.Geometry;o.vertices.push(new THREE.Vector3(0,0,0)),o.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(o,new THREE.LineBasicMaterial({color:r})),this.add(this.line),o=new THREE.CylinderGeometry(0,.05,.25,5,1),this.cone=new THREE.Mesh(o,new THREE.MeshBasicMaterial({color:r})),this.cone.position.set(0,1,0),this.add(this.cone),t instanceof THREE.Vector3&&(this.position=t),this.setDirection(e),this.setLength(i)},THREE.ArrowHelper.prototype=new THREE.Object3D,THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper,THREE.ArrowHelper.prototype.setDirection=function(e){var t=new THREE.Vector3(0,1,0).crossSelf(e);e=Math.acos(new THREE.Vector3(0,1,0).dot(e.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(t.normalize(),e),this.rotation.getRotationFromMatrix(this.matrix,this.scale)},THREE.ArrowHelper.prototype.setLength=function(e){this.scale.set(e,e,e)},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e),this.cone.material.color.setHex(e)},THREE.CameraHelper=function(e){function t(e,t,r){i(e,r),i(t,r)}function i(e,t){r.lineGeometry.vertices.push(new THREE.Vector3),r.lineGeometry.colors.push(new THREE.Color(t)),void 0===r.pointMap[e]&&(r.pointMap[e]=[]),r.pointMap[e].push(r.lineGeometry.vertices.length-1)}THREE.Object3D.call(this);var r=this;this.lineGeometry=new THREE.Geometry,this.lineMaterial=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),this.pointMap={},t("n1","n2",16755200),t("n2","n4",16755200),t("n4","n3",16755200),t("n3","n1",16755200),t("f1","f2",16755200),t("f2","f4",16755200),t("f4","f3",16755200),t("f3","f1",16755200),t("n1","f1",16755200),t("n2","f2",16755200),t("n3","f3",16755200),t("n4","f4",16755200),t("p","n1",16711680),t("p","n2",16711680),t("p","n3",16711680),t("p","n4",16711680),t("u1","u2",43775),t("u2","u3",43775),t("u3","u1",43775),t("c","t",16777215),t("p","c",3355443),t("cn1","cn2",3355443),t("cn3","cn4",3355443),t("cf1","cf2",3355443),t("cf3","cf4",3355443),this.camera=e,this.update(e),this.lines=new THREE.Line(this.lineGeometry,this.lineMaterial,THREE.LinePieces),this.add(this.lines)},THREE.CameraHelper.prototype=new THREE.Object3D,THREE.CameraHelper.prototype.constructor=THREE.CameraHelper,THREE.CameraHelper.prototype.update=function(){function e(e,i,r,o){if(THREE.CameraHelper.__v.set(i,r,o),THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c),void 0!==(e=t.pointMap[e]))for(i=0,r=e.length;i<r;i++)t.lineGeometry.vertices[e[i]].copy(THREE.CameraHelper.__v)}var t=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix),e("c",0,0,-1),e("t",0,0,1),e("n1",-1,-1,-1),e("n2",1,-1,-1),e("n3",-1,1,-1),e("n4",1,1,-1),e("f1",-1,-1,1),e("f2",1,-1,1),e("f3",-1,1,1),e("f4",1,1,1),e("u1",.7,1.1,-1),e("u2",-.7,1.1,-1),e("u3",0,2,-1),e("cf1",-1,0,1),e("cf2",1,0,1),e("cf3",0,-1,1),e("cf4",0,1,1),e("cn1",-1,0,-1),e("cn2",1,0,-1),e("cn3",0,-1,-1),e("cn4",0,1,-1),this.lineGeometry.verticesNeedUpdate=!0},THREE.CameraHelper.__projector=new THREE.Projector,THREE.CameraHelper.__v=new THREE.Vector3,THREE.CameraHelper.__c=new THREE.Camera,THREE.SubdivisionModifier=function(e){this.subdivisions=void 0===e?1:e,this.useOldVertexColors=!1,this.supportUVs=!0,this.debug=!1},THREE.SubdivisionModifier.prototype.constructor=THREE.SubdivisionModifier,THREE.SubdivisionModifier.prototype.modify=function(e){for(var t=this.subdivisions;t-- >0;)this.smooth(e)},THREE.SubdivisionModifier.prototype.smooth=function(e){function t(){v.debug}function i(){console}function r(e,i,r,o,a,s,h){var l=new THREE.Face4(e,i,r,o,null,a.color,a.material);if(v.useOldVertexColors){l.vertexColors=[];for(var c,f,E,u=0;u<4;u++){E=s[u],(c=new THREE.Color).setRGB(0,0,0);for(var p=0;p<E.length;p++)f=a.vertexColors[E[p]-1],c.r=c.r+f.r,c.g=c.g+f.g,c.b=c.b+f.b;c.r=c.r/E.length,c.g=c.g/E.length,c.b=c.b/E.length,l.vertexColors[u]=c}}m.push(l),v.supportUVs&&((a=[n(e,""),n(i,h),n(r,h),n(o,h)])[0]?a[1]?a[2]?a[3]?g.push(a):t("d :( ",o+":"+h):t("c :( ",r+":"+h):t("b :( ",i+":"+h):t("a :( ",e+":"+h))}function o(e,t){return Math.min(e,t)+"_"+Math.max(e,t)}function n(e,r){var o=e+":"+r,n=b[o];return n||(e>=w&&e<w+R.length?t("face pt"):t("edge pt"),i("warning, UV not found for",o),null)}function a(e,t,r){var o=e+":"+t;o in b?i("dup vertexNo",e,"oldFaceNo",t,"value",r,"key",o,b[o]):b[o]=r}function s(e,t){void 0===L[e]&&(L[e]=[]),L[e].push(t)}function h(e,t,i){void 0===P[e]&&(P[e]={}),P[e][t]=i}var l,c,f,E,u,p,d=[],m=[],g=[],v=this,T=e.vertices,R=e.faces,y=(d=T.concat(),[]),x={},H={},b={},w=T.length,_=e.faceVertexUvs[0];if(t("originalFaces, uvs, originalVerticesLength",R.length,_.length,w),v.supportUVs)for(l=0,c=_.length;l<c;l++)for(f=0,E=_[l].length;f<E;f++)a(p=R[l]["abcd".charAt(f)],l,_[l][f]);for(u in 0==_.length&&(v.supportUVs=!1),l=0,b)l++;for(l||(v.supportUVs=!1,t("no uvs")),t("-- Original Faces + Vertices UVs completed",b,"vs",_.length),l=0,c=R.length;l<c;l++)u=R[l],y.push(u.centroid),d.push(u.centroid),v.supportUVs&&(_=new THREE.UV,u instanceof THREE.Face3?(_.u=n(u.a,l).u+n(u.b,l).u+n(u.c,l).u,_.v=n(u.a,l).v+n(u.b,l).v+n(u.c,l).v,_.u=_.u/3,_.v=_.v/3):u instanceof THREE.Face4&&(_.u=n(u.a,l).u+n(u.b,l).u+n(u.c,l).u+n(u.d,l).u,_.v=n(u.a,l).v+n(u.b,l).v+n(u.c,l).v+n(u.d,l).v,_.u=_.u/4,_.v=_.v/4),a(w+l,"",_));t("-- added UVs for new Faces",b),c=function(e){function t(e,t){void 0===a[e]&&(a[e]=[]),a[e].push(t)}var i,r,n,a={};for(i=0,r=e.faces.length;i<r;i++)(n=e.faces[i])instanceof THREE.Face3?(t(o(n.a,n.b),i),t(o(n.b,n.c),i),t(o(n.c,n.a),i)):n instanceof THREE.Face4&&(t(o(n.a,n.b),i),t(o(n.b,n.c),i),t(o(n.c,n.d),i),t(o(n.d,n.a),i));return a}(e),p=0;var S,M,A,C,L={},P={};for(l in c){for(_=c[l],s(M=(S=l.split("_"))[0],[M,S=S[1]]),s(S,[M,S]),f=0,E=_.length;f<E;f++)h(M,u=_[f],l),h(S,u,l);_.length<2&&(H[l]=!0)}for(l in t("vertexEdgeMap",L,"vertexFaceMap",P),c)u=(_=c[l])[0],E=_[1],M=(S=l.split("_"))[0],S=S[1],_=new THREE.Vector3,H[l]?(_.addSelf(T[M]),_.addSelf(T[S]),_.multiplyScalar(.5)):(_.addSelf(y[u]),_.addSelf(y[E]),_.addSelf(T[M]),_.addSelf(T[S]),_.multiplyScalar(.25)),x[l]=w+R.length+p,d.push(_),p++,v.supportUVs&&((_=new THREE.UV).u=n(M,u).u+n(S,u).u,_.v=n(M,u).v+n(S,u).v,_.u=_.u/2,_.v=_.v/2,a(x[l],u,_),H[l]||((_=new THREE.UV).u=n(M,E).u+n(S,E).u,_.v=n(M,E).v+n(S,E).v,_.u=_.u/2,_.v=_.v/2,a(x[l],E,_)));t("-- Step 2 done"),E=["123","12","2","23"],S=["123","23","3","31"];var F=["123","31","1","12"],U=["1234","12","2","23"],D=["1234","23","3","34"],V=["1234","34","4","41"],B=["1234","41","1","12"];for(l=0,c=y.length;l<c;l++)u=R[l],_=w+l,u instanceof THREE.Face3?(p=o(u.a,u.b),M=o(u.b,u.c),A=o(u.c,u.a),r(_,x[p],u.b,x[M],u,E,l),r(_,x[M],u.c,x[A],u,S,l),r(_,x[A],u.a,x[p],u,F,l)):u instanceof THREE.Face4?(p=o(u.a,u.b),M=o(u.b,u.c),A=o(u.c,u.d),C=o(u.d,u.a),r(_,x[p],u.b,x[M],u,U,l),r(_,x[M],u.c,x[A],u,D,l),r(_,x[A],u.d,x[C],u,V,l),r(_,x[C],u.a,x[p],u,B,l)):t("face should be a face!",u);for(x=new THREE.Vector3,u=new THREE.Vector3,l=0,c=T.length;l<c;l++)if(void 0!==L[l]){for(f in x.set(0,0,0),u.set(0,0,0),M=new THREE.Vector3(0,0,0),_=0,P[l])x.addSelf(y[f]),_++;for(E=0,p=L[l].length,f=0;f<p;f++)H[o(L[l][f][0],L[l][f][1])]&&E++;if(2!=E){for(x.divideScalar(_),f=0;f<p;f++)_=T[(_=L[l][f])[0]].clone().addSelf(T[_[1]]).divideScalar(2),u.addSelf(_);u.divideScalar(p),M.addSelf(T[l]),M.multiplyScalar(p-3),M.addSelf(x),M.addSelf(u.multiplyScalar(2)),M.divideScalar(p),d[l]=M}}e.vertices=d,e.faces=m,e.faceVertexUvs[0]=g,delete e.__tmpVertices,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals()},THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=new THREE.Object3D,THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject,THREE.LensFlare=function(e,t,i,r,o){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,i,r,o)},THREE.LensFlare.prototype=new THREE.Object3D,THREE.LensFlare.prototype.constructor=THREE.LensFlare,THREE.LensFlare.prototype.supr=THREE.Object3D.prototype,THREE.LensFlare.prototype.add=function(e,t,i,r,o,n){void 0===t&&(t=-1),void 0===i&&(i=0),void 0===n&&(n=1),void 0===o&&(o=new THREE.Color(16777215)),void 0===r&&(r=THREE.NormalBlending),i=Math.min(i,Math.max(0,i)),this.lensFlares.push({texture:e,size:t,distance:i,x:0,y:0,z:0,scale:1,rotation:1,opacity:n,color:o,blending:r})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t,i=this.lensFlares.length,r=2*-this.positionScreen.x,o=2*-this.positionScreen.y;for(e=0;e<i;e++)(t=this.lensFlares[e]).x=this.positionScreen.x+r*t.distance,t.y=this.positionScreen.y+o*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation=t.rotation+.25*(t.wantedRotation-t.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var i=this.geometry.morphTargets.length;this.createAnimation("__default",0,i-1,i/1),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=new THREE.Mesh,THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh,THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,i,r){t={startFrame:t,endFrame:i,length:i-t+1,fps:r,duration:(i-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[e]=t,this.animationsList.push(t)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,i=/([a-z]+)(\d+)/,r={},o=this.geometry,n=0,a=o.morphTargets.length;n<a;n++){var s=o.morphTargets[n].name.match(i);if(s&&s.length>1){var h=s[1];r[h]||(r[h]={start:1/0,end:-1/0}),n<(s=r[h]).start&&(s.start=n),n>s.end&&(s.end=n),t||(t=h)}}for(h in r)s=r[h],this.createAnimation(h,s.start,s.end,e);this.firstAnimation=t},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){(e=this.animationsMap[e])&&(e.direction=1,e.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){(e=this.animationsMap[e])&&(e.direction=-1,e.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var i=this.animationsMap[e];i&&(i.fps=t,i.duration=(i.end-i.start)/i.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var i=this.animationsMap[e];i&&(i.duration=t,i.fps=(i.end-i.start)/i.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var i=this.animationsMap[e];i&&(i.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var i=this.animationsMap[e];i&&(i.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;return(e=this.animationsMap[e])&&(t=e.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;return(e=this.animationsMap[e])&&(t=e.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t&&(t.time=0,t.active=!0)},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){(e=this.animationsMap[e])&&(e.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,i=this.animationsList.length;t<i;t++){var r=this.animationsList[t];if(r.active){var o=r.duration/r.length;r.time=r.time+r.direction*e,r.mirroredLoop?(r.time>r.duration||r.time<0)&&(r.direction=-1*r.direction,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),r.time<0&&(r.time=0,r.directionBackwards=!1)):(r.time=r.time%r.duration,r.time<0&&(r.time=r.time+r.duration));var n=r.startFrame+THREE.Math.clamp(Math.floor(r.time/o),0,r.length-1),a=r.weight;n!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*a,this.morphTargetInfluences[n]=0,r.lastFrame=r.currentFrame,r.currentFrame=n),o=r.time%o/o,r.directionBackwards&&(o=1-o),this.morphTargetInfluences[r.currentFrame]=o*a,this.morphTargetInfluences[r.lastFrame]=(1-o)*a}}},THREE.LensFlarePlugin=function(){function e(e){var i=t.createProgram(),r=t.createShader(t.FRAGMENT_SHADER),o=t.createShader(t.VERTEX_SHADER);return t.shaderSource(r,e.fragmentShader),t.shaderSource(o,e.vertexShader),t.compileShader(r),t.compileShader(o),t.attachShader(i,r),t.attachShader(i,o),t.linkProgram(i),i}var t,i,r,o,n,a,s,h,l,c,f,E,u;this.init=function(p){t=p.context,i=p,r=new Float32Array(16),o=new Uint16Array(6),p=0,r[p++]=-1,r[p++]=-1,r[p++]=0,r[p++]=0,r[p++]=1,r[p++]=-1,r[p++]=1,r[p++]=0,r[p++]=1,r[p++]=1,r[p++]=1,r[p++]=1,r[p++]=-1,r[p++]=1,r[p++]=0,r[p++]=1,p=0,o[p++]=0,o[p++]=1,o[p++]=2,o[p++]=0,o[p++]=2,o[p++]=3,n=t.createBuffer(),a=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,n),t.bufferData(t.ARRAY_BUFFER,r,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,a),t.bufferData(t.ELEMENT_ARRAY_BUFFER,o,t.STATIC_DRAW),s=t.createTexture(),h=t.createTexture(),t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.bindTexture(t.TEXTURE_2D,h),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(l=!1,c=e(THREE.ShaderFlares.lensFlare)):(l=!0,c=e(THREE.ShaderFlares.lensFlareVertexTexture)),E={},(f={}).vertex=t.getAttribLocation(c,"position"),f.uv=t.getAttribLocation(c,"uv"),E.renderType=t.getUniformLocation(c,"renderType"),E.map=t.getUniformLocation(c,"map"),E.occlusionMap=t.getUniformLocation(c,"occlusionMap"),E.opacity=t.getUniformLocation(c,"opacity"),E.color=t.getUniformLocation(c,"color"),E.scale=t.getUniformLocation(c,"scale"),E.rotation=t.getUniformLocation(c,"rotation"),E.screenPosition=t.getUniformLocation(c,"screenPosition"),u=!1},this.render=function(e,r,o,p){var d=(e=e.__webglFlares).length;if(d){var m,g,v,T,R,y=new THREE.Vector3,x=p/o,H=.5*o,b=.5*p,w=16/p,_=new THREE.Vector2(w*x,w),S=new THREE.Vector3(1,1,0),M=new THREE.Vector2(1,1),A=E;w=f;for(t.useProgram(c),u||(t.enableVertexAttribArray(f.vertex),t.enableVertexAttribArray(f.uv),u=!0),t.uniform1i(A.occlusionMap,0),t.uniform1i(A.map,1),t.bindBuffer(t.ARRAY_BUFFER,n),t.vertexAttribPointer(w.vertex,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(w.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,a),t.disable(t.CULL_FACE),t.depthMask(!1),m=0;m<d;m++)if(w=16/p,_.set(w*x,w),T=e[m],y.set(T.matrixWorld.elements[12],T.matrixWorld.elements[13],T.matrixWorld.elements[14]),r.matrixWorldInverse.multiplyVector3(y),r.projectionMatrix.multiplyVector3(y),S.copy(y),M.x=S.x*H+H,M.y=S.y*b+b,l||M.x>0&&M.x<o&&M.y>0&&M.y<p)for(t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,s),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,M.x-8,M.y-8,16,16,0),t.uniform1i(A.renderType,0),t.uniform2f(A.scale,_.x,_.y),t.uniform3f(A.screenPosition,S.x,S.y,S.z),t.disable(t.BLEND),t.enable(t.DEPTH_TEST),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,h),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,M.x-8,M.y-8,16,16,0),t.uniform1i(A.renderType,1),t.disable(t.DEPTH_TEST),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,s),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),T.positionScreen.copy(S),T.customUpdateCallback?T.customUpdateCallback(T):T.updateLensFlares(),t.uniform1i(A.renderType,2),t.enable(t.BLEND),g=0,v=T.lensFlares.length;g<v;g++)(R=T.lensFlares[g]).opacity>.001&&R.scale>.001&&(S.x=R.x,S.y=R.y,S.z=R.z,w=R.size*R.scale/p,_.x=w*x,_.y=w,t.uniform3f(A.screenPosition,S.x,S.y,S.z),t.uniform2f(A.scale,_.x,_.y),t.uniform1f(A.rotation,R.rotation),t.uniform1f(A.opacity,R.opacity),t.uniform3f(A.color,R.color.r,R.color.g,R.color.b),i.setBlending(R.blending,R.blendEquation,R.blendSrc,R.blendDst),i.setTexture(R.texture,1),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE),t.enable(t.DEPTH_TEST),t.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){var e,t,i,r,o=new THREE.Frustum,n=new THREE.Matrix4,a=new THREE.Vector3,s=new THREE.Vector3;this.init=function(o){e=o.context,t=o;o=THREE.ShaderLib.depthRGBA;var n=THREE.UniformsUtils.clone(o.uniforms);i=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:n}),r=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:n,morphTargets:!0}),i._shadowPass=!0,r._shadowPass=!0},this.render=function(e,i){t.shadowMapEnabled&&t.shadowMapAutoUpdate&&this.update(e,i)},this.update=function(h,l){var c,f,E,u,p,d,m,g,v,T=[];for(u=0,e.clearColor(1,1,1,1),e.disable(e.BLEND),e.enable(e.CULL_FACE),t.shadowMapCullFrontFaces?e.cullFace(e.FRONT):e.cullFace(e.BACK),t.setDepthTest(!0),c=0,f=h.__lights.length;c<f;c++)if((E=h.__lights[c]).castShadow)if(E instanceof THREE.DirectionalLight&&E.shadowCascade)for(p=0;p<E.shadowCascadeCount;p++){var R;if(E.shadowCascadeArray[p])R=E.shadowCascadeArray[p];else{v=E,m=p,(R=new THREE.DirectionalLight).isVirtual=!0,R.onlyShadow=!0,R.castShadow=!0,R.shadowCameraNear=v.shadowCameraNear,R.shadowCameraFar=v.shadowCameraFar,R.shadowCameraLeft=v.shadowCameraLeft,R.shadowCameraRight=v.shadowCameraRight,R.shadowCameraBottom=v.shadowCameraBottom,R.shadowCameraTop=v.shadowCameraTop,R.shadowCameraVisible=v.shadowCameraVisible,R.shadowDarkness=v.shadowDarkness,R.shadowBias=v.shadowCascadeBias[m],R.shadowMapWidth=v.shadowCascadeWidth[m],R.shadowMapHeight=v.shadowCascadeHeight[m],R.pointsWorld=[],R.pointsFrustum=[],g=R.pointsWorld,d=R.pointsFrustum;for(var y=0;y<8;y++)g[y]=new THREE.Vector3,d[y]=new THREE.Vector3;g=v.shadowCascadeNearZ[m],v=v.shadowCascadeFarZ[m],d[0].set(-1,-1,g),d[1].set(1,-1,g),d[2].set(-1,1,g),d[3].set(1,1,g),d[4].set(-1,-1,v),d[5].set(1,-1,v),d[6].set(-1,1,v),d[7].set(1,1,v),R.originalCamera=l,(d=new THREE.Gyroscope).position=E.shadowCascadeOffset,d.add(R),d.add(R.target),l.add(d),E.shadowCascadeArray[p]=R}g=p,(v=(m=E).shadowCascadeArray[g]).position.copy(m.position),v.target.position.copy(m.target.position),v.lookAt(v.target),v.shadowCameraVisible=m.shadowCameraVisible,v.shadowDarkness=m.shadowDarkness,v.shadowBias=m.shadowCascadeBias[g],d=m.shadowCascadeNearZ[g],m=m.shadowCascadeFarZ[g],(v=v.pointsFrustum)[0].z=d,v[1].z=d,v[2].z=d,v[3].z=d,v[4].z=m,v[5].z=m,v[6].z=m,v[7].z=m,T[u]=R,u++}else T[u]=E,u++;for(c=0,f=T.length;c<f;c++){if((E=T[c]).shadowMap||(E.shadowMap=new THREE.WebGLRenderTarget(E.shadowMapWidth,E.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),E.shadowMapSize=new THREE.Vector2(E.shadowMapWidth,E.shadowMapHeight),E.shadowMatrix=new THREE.Matrix4),!E.shadowCamera){if(E instanceof THREE.SpotLight)E.shadowCamera=new THREE.PerspectiveCamera(E.shadowCameraFov,E.shadowMapWidth/E.shadowMapHeight,E.shadowCameraNear,E.shadowCameraFar);else{if(!(E instanceof THREE.DirectionalLight))continue;E.shadowCamera=new THREE.OrthographicCamera(E.shadowCameraLeft,E.shadowCameraRight,E.shadowCameraTop,E.shadowCameraBottom,E.shadowCameraNear,E.shadowCameraFar)}h.add(E.shadowCamera),t.autoUpdateScene&&h.updateMatrixWorld()}if(E.shadowCameraVisible&&!E.cameraHelper&&(E.cameraHelper=new THREE.CameraHelper(E.shadowCamera),E.shadowCamera.add(E.cameraHelper)),E.isVirtual&&R.originalCamera==l){for(p=l,u=E.shadowCamera,d=E.pointsFrustum,v=E.pointsWorld,a.set(1/0,1/0,1/0),s.set(-1/0,-1/0,-1/0),m=0;m<8;m++)(g=v[m]).copy(d[m]),THREE.ShadowMapPlugin.__projector.unprojectVector(g,p),u.matrixWorldInverse.multiplyVector3(g),g.x<a.x&&(a.x=g.x),g.x>s.x&&(s.x=g.x),g.y<a.y&&(a.y=g.y),g.y>s.y&&(s.y=g.y),g.z<a.z&&(a.z=g.z),g.z>s.z&&(s.z=g.z);u.left=a.x,u.right=s.x,u.top=s.y,u.bottom=a.y,u.updateProjectionMatrix()}for(u=E.shadowMap,d=E.shadowMatrix,(p=E.shadowCamera).position.copy(E.matrixWorld.getPosition()),p.lookAt(E.target.matrixWorld.getPosition()),p.updateMatrixWorld(),p.matrixWorldInverse.getInverse(p.matrixWorld),E.cameraHelper&&(E.cameraHelper.lines.visible=E.shadowCameraVisible),E.shadowCameraVisible&&E.cameraHelper.update(),d.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),d.multiplySelf(p.projectionMatrix),d.multiplySelf(p.matrixWorldInverse),p._viewMatrixArray||(p._viewMatrixArray=new Float32Array(16)),p._projectionMatrixArray||(p._projectionMatrixArray=new Float32Array(16)),p.matrixWorldInverse.flattenToArray(p._viewMatrixArray),p.projectionMatrix.flattenToArray(p._projectionMatrixArray),n.multiply(p.projectionMatrix,p.matrixWorldInverse),o.setFromMatrix(n),t.setRenderTarget(u),t.clear(),E=0,u=(v=h.__webglObjects).length;E<u;E++)d=(m=v[E]).object,m.render=!1,!d.visible||!d.castShadow||d instanceof THREE.Mesh&&d.frustumCulled&&!o.contains(d)||(d._modelViewMatrix.multiply(p.matrixWorldInverse,d.matrixWorld),m.render=!0);for(E=0,u=v.length;E<u;E++)(m=v[E]).render&&(d=m.object,m=m.buffer,g=d.customDepthMaterial?d.customDepthMaterial:d.geometry.morphTargets.length?r:i,m instanceof THREE.BufferGeometry?t.renderBufferDirect(p,h.__lights,null,g,m,d):t.renderBuffer(p,h.__lights,null,g,m,d));for(E=0,u=(v=h.__webglObjectsImmediate).length;E<u;E++)(d=(m=v[E]).object).visible&&d.castShadow&&(d._modelViewMatrix.multiply(p.matrixWorldInverse,d.matrixWorld),t.renderImmediateObject(p,h.__lights,null,i,d))}c=t.getClearColor(),f=t.getClearAlpha(),e.clearColor(c.r,c.g,c.b,f),e.enable(e.BLEND),t.shadowMapCullFrontFaces&&e.cullFace(e.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function e(e,t){return t.z-e.z}var t,i,r,o,n,a,s,h,l,c;this.init=function(e){t=e.context,i=e,r=new Float32Array(16),o=new Uint16Array(6),e=0,r[e++]=-1,r[e++]=-1,r[e++]=0,r[e++]=1,r[e++]=1,r[e++]=-1,r[e++]=1,r[e++]=1,r[e++]=1,r[e++]=1,r[e++]=1,r[e++]=0,r[e++]=-1,r[e++]=1,r[e++]=0,e=r[e++]=0,o[e++]=0,o[e++]=1,o[e++]=2,o[e++]=0,o[e++]=2,o[e++]=3,n=t.createBuffer(),a=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,n),t.bufferData(t.ARRAY_BUFFER,r,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,a),t.bufferData(t.ELEMENT_ARRAY_BUFFER,o,t.STATIC_DRAW);e=THREE.ShaderSprite.sprite;var f=t.createProgram(),E=t.createShader(t.FRAGMENT_SHADER),u=t.createShader(t.VERTEX_SHADER);t.shaderSource(E,e.fragmentShader),t.shaderSource(u,e.vertexShader),t.compileShader(E),t.compileShader(u),t.attachShader(f,E),t.attachShader(f,u),t.linkProgram(f),s=f,l={},(h={}).position=t.getAttribLocation(s,"position"),h.uv=t.getAttribLocation(s,"uv"),l.uvOffset=t.getUniformLocation(s,"uvOffset"),l.uvScale=t.getUniformLocation(s,"uvScale"),l.rotation=t.getUniformLocation(s,"rotation"),l.scale=t.getUniformLocation(s,"scale"),l.alignment=t.getUniformLocation(s,"alignment"),l.color=t.getUniformLocation(s,"color"),l.map=t.getUniformLocation(s,"map"),l.opacity=t.getUniformLocation(s,"opacity"),l.useScreenCoordinates=t.getUniformLocation(s,"useScreenCoordinates"),l.affectedByDistance=t.getUniformLocation(s,"affectedByDistance"),l.screenPosition=t.getUniformLocation(s,"screenPosition"),l.modelViewMatrix=t.getUniformLocation(s,"modelViewMatrix"),l.projectionMatrix=t.getUniformLocation(s,"projectionMatrix"),c=!1},this.render=function(r,o,f,E){var u=(r=r.__webglSprites).length;if(u){var p=h,d=l,m=E/f,g=(f=.5*f,.5*E),v=!0;t.useProgram(s),c||(t.enableVertexAttribArray(p.position),t.enableVertexAttribArray(p.uv),c=!0),t.disable(t.CULL_FACE),t.enable(t.BLEND),t.depthMask(!0),t.bindBuffer(t.ARRAY_BUFFER,n),t.vertexAttribPointer(p.position,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(p.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,a),t.uniformMatrix4fv(d.projectionMatrix,!1,o._projectionMatrixArray),t.activeTexture(t.TEXTURE0),t.uniform1i(d.map,0);var T,R=[];for(p=0;p<u;p++)(T=r[p]).visible&&0!==T.opacity&&(T.useScreenCoordinates?T.z=-T.position.z:(T._modelViewMatrix.multiply(o.matrixWorldInverse,T.matrixWorld),T.z=-T._modelViewMatrix.elements[14]));for(r.sort(e),p=0;p<u;p++)(T=r[p]).visible&&0!==T.opacity&&T.map&&T.map.image&&T.map.image.width&&(T.useScreenCoordinates?(t.uniform1i(d.useScreenCoordinates,1),t.uniform3f(d.screenPosition,(T.position.x-f)/f,(g-T.position.y)/g,Math.max(0,Math.min(1,T.position.z)))):(t.uniform1i(d.useScreenCoordinates,0),t.uniform1i(d.affectedByDistance,T.affectedByDistance?1:0),t.uniformMatrix4fv(d.modelViewMatrix,!1,T._modelViewMatrix.elements)),o=T.map.image.width/(T.scaleByViewport?E:1),R[0]=o*m*T.scale.x,R[1]=o*T.scale.y,t.uniform2f(d.uvScale,T.uvScale.x,T.uvScale.y),t.uniform2f(d.uvOffset,T.uvOffset.x,T.uvOffset.y),t.uniform2f(d.alignment,T.alignment.x,T.alignment.y),t.uniform1f(d.opacity,T.opacity),t.uniform3f(d.color,T.color.r,T.color.g,T.color.b),t.uniform1f(d.rotation,T.rotation),t.uniform2fv(d.scale,R),T.mergeWith3D&&!v?(t.enable(t.DEPTH_TEST),v=!0):!T.mergeWith3D&&v&&(t.disable(t.DEPTH_TEST),v=!1),i.setBlending(T.blending,T.blendEquation,T.blendSrc,T.blendDst),i.setTexture(T.map,0),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE),t.enable(t.DEPTH_TEST),t.depthMask(!0)}}},THREE.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var e,t,i,r,o=new THREE.Frustum,n=new THREE.Matrix4;this.init=function(o){e=o.context,t=o;o=THREE.ShaderLib.depthRGBA;var n=THREE.UniformsUtils.clone(o.uniforms);i=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:n}),r=new THREE.ShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:n,morphTargets:!0}),i._shadowPass=!0,r._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(a,s){var h,l,c,f,E,u;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),t.setDepthTest(!0),t.autoUpdateScene&&a.updateMatrixWorld(),s._viewMatrixArray||(s._viewMatrixArray=new Float32Array(16)),s._projectionMatrixArray||(s._projectionMatrixArray=new Float32Array(16)),s.matrixWorldInverse.getInverse(s.matrixWorld),s.matrixWorldInverse.flattenToArray(s._viewMatrixArray),s.projectionMatrix.flattenToArray(s._projectionMatrixArray),n.multiply(s.projectionMatrix,s.matrixWorldInverse),o.setFromMatrix(n),t.setRenderTarget(this.renderTarget),t.clear(),h=0,l=(u=a.__webglObjects).length;h<l;h++)E=(c=u[h]).object,c.render=!1,!E.visible||E instanceof THREE.Mesh&&E.frustumCulled&&!o.contains(E)||(E._modelViewMatrix.multiply(s.matrixWorldInverse,E.matrixWorld),c.render=!0);for(h=0,l=u.length;h<l;h++)(c=u[h]).render&&(E=c.object,c=c.buffer,t.setObjectFaces(E),f=E.customDepthMaterial?E.customDepthMaterial:E.geometry.morphTargets.length?r:i,c instanceof THREE.BufferGeometry?t.renderBufferDirect(s,a.__lights,null,f,c,E):t.renderBuffer(s,a.__lights,null,f,c,E));for(h=0,l=(u=a.__webglObjectsImmediate).length;h<l;h++)(E=(c=u[h]).object).visible&&E.castShadow&&(E._modelViewMatrix.multiply(s.matrixWorldInverse,E.matrixWorld),t.renderImmediateObject(s,a.__lights,null,i,E));h=t.getClearColor(),l=t.getClearAlpha(),e.clearColor(h.r,h.g,h.b,l),e.enable(e.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}},THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"}};